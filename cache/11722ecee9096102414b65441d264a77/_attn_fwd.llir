; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external local_unnamed_addr addrspace(3) global [0 x i8]

; Function Attrs: nofree nounwind
define amdgpu_kernel void @_attn_fwd_0d1d2d34d5d6de7de8de9c10de11de12de13c14de15de16de17c18de19de20de21c2223de24de(ptr addrspace(1) readonly %0, ptr addrspace(1) readonly %1, ptr addrspace(1) readonly %2, float %3, ptr addrspace(1) nocapture writeonly %4, ptr addrspace(1) writeonly %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10, i32 %11, i32 %12, i32 %13, i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19, i32 %20) local_unnamed_addr #0 !dbg !9 {
  %22 = tail call i32 @llvm.amdgcn.workitem.id.x(), !dbg !12
  %23 = and i32 %22, 63, !dbg !12
  %24 = lshr i32 %22, 6, !dbg !12
  %25 = and i32 %24, 3, !dbg !12
  %26 = lshr i32 %23, 2, !dbg !12
  %27 = shl nuw nsw i32 %25, 4, !dbg !12
  %28 = or i32 %27, %26, !dbg !12
  %29 = or i32 %28, 64, !dbg !12
  %30 = shl nuw nsw i32 %25, 5, !dbg !12
  %31 = and i32 %22, 31, !dbg !12
  %32 = or i32 %30, %31, !dbg !12
  %33 = shl i32 %22, 3, !dbg !12
  %34 = and i32 %33, 24, !dbg !12
  %35 = or i32 %34, 1, !dbg !12
  %36 = or i32 %34, 2, !dbg !12
  %37 = or i32 %34, 3, !dbg !12
  %38 = or i32 %34, 4, !dbg !12
  %39 = or i32 %34, 5, !dbg !12
  %40 = or i32 %34, 6, !dbg !12
  %41 = or i32 %34, 7, !dbg !12
  %42 = or i32 %34, 32, !dbg !12
  %43 = or i32 %34, 33, !dbg !12
  %44 = or i32 %34, 34, !dbg !12
  %45 = or i32 %34, 35, !dbg !12
  %46 = or i32 %34, 36, !dbg !12
  %47 = or i32 %34, 37, !dbg !12
  %48 = or i32 %34, 38, !dbg !12
  %49 = or i32 %34, 39, !dbg !12
  %50 = or i32 %34, 64, !dbg !12
  %51 = or i32 %34, 65, !dbg !12
  %52 = or i32 %34, 66, !dbg !12
  %53 = or i32 %34, 67, !dbg !12
  %54 = or i32 %34, 68, !dbg !12
  %55 = or i32 %34, 69, !dbg !12
  %56 = or i32 %34, 70, !dbg !12
  %57 = or i32 %34, 71, !dbg !12
  %58 = or i32 %34, 96, !dbg !12
  %59 = or i32 %34, 97, !dbg !12
  %60 = or i32 %34, 98, !dbg !12
  %61 = or i32 %34, 99, !dbg !12
  %62 = or i32 %34, 100, !dbg !12
  %63 = or i32 %34, 101, !dbg !12
  %64 = or i32 %34, 102, !dbg !12
  %65 = or i32 %34, 103, !dbg !12
  %66 = lshr i32 %22, 3, !dbg !12
  %67 = and i32 %66, 4, !dbg !12
  %68 = and i32 %22, 127, !dbg !12
  %69 = fmul float %3, 0x3FF7154760000000, !dbg !13
  %70 = tail call i32 @llvm.amdgcn.workgroup.id.x(), !dbg !14
  %71 = shl i32 %70, 7, !dbg !15
  %72 = sext i32 %71 to i64, !dbg !16
  %73 = tail call i32 @llvm.amdgcn.workgroup.id.y(), !dbg !17
  %74 = mul i32 %73, %7, !dbg !18
  %75 = sext i32 %74 to i64, !dbg !19
  %76 = getelementptr half, ptr addrspace(1) %0, i64 %75, !dbg !19
  %77 = sext i32 %8 to i64, !dbg !16
  %78 = getelementptr half, ptr addrspace(1) %1, i64 %75, !dbg !20
  %79 = sext i32 %11 to i64, !dbg !21
  %80 = getelementptr half, ptr addrspace(1) %2, i64 %75, !dbg !22
  %81 = sext i32 %14 to i64, !dbg !23
  %82 = zext i32 %28 to i64
  %83 = zext i32 %29 to i64
  %84 = or i64 %82, %72, !dbg !24
  %85 = or i64 %83, %72, !dbg !24
  %86 = mul nsw i64 %84, %77, !dbg !24
  %87 = mul nsw i64 %85, %77, !dbg !24
  %88 = getelementptr half, ptr addrspace(1) %76, i64 %86, !dbg !24
  %89 = getelementptr half, ptr addrspace(1) %76, i64 %87, !dbg !24
  %90 = zext i32 %34 to i64
  %91 = zext i32 %35 to i64
  %92 = zext i32 %36 to i64
  %93 = zext i32 %37 to i64
  %94 = zext i32 %38 to i64
  %95 = zext i32 %39 to i64
  %96 = zext i32 %40 to i64
  %97 = zext i32 %41 to i64
  %98 = zext i32 %42 to i64
  %99 = zext i32 %43 to i64
  %100 = zext i32 %44 to i64
  %101 = zext i32 %45 to i64
  %102 = zext i32 %46 to i64
  %103 = zext i32 %47 to i64
  %104 = zext i32 %48 to i64
  %105 = zext i32 %49 to i64
  %106 = zext i32 %50 to i64
  %107 = zext i32 %51 to i64
  %108 = zext i32 %52 to i64
  %109 = zext i32 %53 to i64
  %110 = zext i32 %54 to i64
  %111 = zext i32 %55 to i64
  %112 = zext i32 %56 to i64
  %113 = zext i32 %57 to i64
  %114 = zext i32 %58 to i64
  %115 = zext i32 %59 to i64
  %116 = zext i32 %60 to i64
  %117 = zext i32 %61 to i64
  %118 = zext i32 %62 to i64
  %119 = zext i32 %63 to i64
  %120 = zext i32 %64 to i64
  %121 = zext i32 %65 to i64
  %122 = getelementptr half, ptr addrspace(1) %88, i64 %90, !dbg !24
  %123 = getelementptr half, ptr addrspace(1) %88, i64 %91, !dbg !24
  %124 = getelementptr half, ptr addrspace(1) %88, i64 %92, !dbg !24
  %125 = getelementptr half, ptr addrspace(1) %88, i64 %93, !dbg !24
  %126 = getelementptr half, ptr addrspace(1) %88, i64 %94, !dbg !24
  %127 = getelementptr half, ptr addrspace(1) %88, i64 %95, !dbg !24
  %128 = getelementptr half, ptr addrspace(1) %88, i64 %96, !dbg !24
  %129 = getelementptr half, ptr addrspace(1) %88, i64 %97, !dbg !24
  %130 = getelementptr half, ptr addrspace(1) %88, i64 %98, !dbg !24
  %131 = getelementptr half, ptr addrspace(1) %88, i64 %99, !dbg !24
  %132 = getelementptr half, ptr addrspace(1) %88, i64 %100, !dbg !24
  %133 = getelementptr half, ptr addrspace(1) %88, i64 %101, !dbg !24
  %134 = getelementptr half, ptr addrspace(1) %88, i64 %102, !dbg !24
  %135 = getelementptr half, ptr addrspace(1) %88, i64 %103, !dbg !24
  %136 = getelementptr half, ptr addrspace(1) %88, i64 %104, !dbg !24
  %137 = getelementptr half, ptr addrspace(1) %88, i64 %105, !dbg !24
  %138 = getelementptr half, ptr addrspace(1) %88, i64 %106, !dbg !24
  %139 = getelementptr half, ptr addrspace(1) %88, i64 %107, !dbg !24
  %140 = getelementptr half, ptr addrspace(1) %88, i64 %108, !dbg !24
  %141 = getelementptr half, ptr addrspace(1) %88, i64 %109, !dbg !24
  %142 = getelementptr half, ptr addrspace(1) %88, i64 %110, !dbg !24
  %143 = getelementptr half, ptr addrspace(1) %88, i64 %111, !dbg !24
  %144 = getelementptr half, ptr addrspace(1) %88, i64 %112, !dbg !24
  %145 = getelementptr half, ptr addrspace(1) %88, i64 %113, !dbg !24
  %146 = getelementptr half, ptr addrspace(1) %88, i64 %114, !dbg !24
  %147 = getelementptr half, ptr addrspace(1) %88, i64 %115, !dbg !24
  %148 = getelementptr half, ptr addrspace(1) %88, i64 %116, !dbg !24
  %149 = getelementptr half, ptr addrspace(1) %88, i64 %117, !dbg !24
  %150 = getelementptr half, ptr addrspace(1) %88, i64 %118, !dbg !24
  %151 = getelementptr half, ptr addrspace(1) %88, i64 %119, !dbg !24
  %152 = getelementptr half, ptr addrspace(1) %88, i64 %120, !dbg !24
  %153 = getelementptr half, ptr addrspace(1) %88, i64 %121, !dbg !24
  %154 = getelementptr half, ptr addrspace(1) %89, i64 %90, !dbg !24
  %155 = getelementptr half, ptr addrspace(1) %89, i64 %91, !dbg !24
  %156 = getelementptr half, ptr addrspace(1) %89, i64 %92, !dbg !24
  %157 = getelementptr half, ptr addrspace(1) %89, i64 %93, !dbg !24
  %158 = getelementptr half, ptr addrspace(1) %89, i64 %94, !dbg !24
  %159 = getelementptr half, ptr addrspace(1) %89, i64 %95, !dbg !24
  %160 = getelementptr half, ptr addrspace(1) %89, i64 %96, !dbg !24
  %161 = getelementptr half, ptr addrspace(1) %89, i64 %97, !dbg !24
  %162 = getelementptr half, ptr addrspace(1) %89, i64 %98, !dbg !24
  %163 = getelementptr half, ptr addrspace(1) %89, i64 %99, !dbg !24
  %164 = getelementptr half, ptr addrspace(1) %89, i64 %100, !dbg !24
  %165 = getelementptr half, ptr addrspace(1) %89, i64 %101, !dbg !24
  %166 = getelementptr half, ptr addrspace(1) %89, i64 %102, !dbg !24
  %167 = getelementptr half, ptr addrspace(1) %89, i64 %103, !dbg !24
  %168 = getelementptr half, ptr addrspace(1) %89, i64 %104, !dbg !24
  %169 = getelementptr half, ptr addrspace(1) %89, i64 %105, !dbg !24
  %170 = getelementptr half, ptr addrspace(1) %89, i64 %106, !dbg !24
  %171 = getelementptr half, ptr addrspace(1) %89, i64 %107, !dbg !24
  %172 = getelementptr half, ptr addrspace(1) %89, i64 %108, !dbg !24
  %173 = getelementptr half, ptr addrspace(1) %89, i64 %109, !dbg !24
  %174 = getelementptr half, ptr addrspace(1) %89, i64 %110, !dbg !24
  %175 = getelementptr half, ptr addrspace(1) %89, i64 %111, !dbg !24
  %176 = getelementptr half, ptr addrspace(1) %89, i64 %112, !dbg !24
  %177 = getelementptr half, ptr addrspace(1) %89, i64 %113, !dbg !24
  %178 = getelementptr half, ptr addrspace(1) %89, i64 %114, !dbg !24
  %179 = getelementptr half, ptr addrspace(1) %89, i64 %115, !dbg !24
  %180 = getelementptr half, ptr addrspace(1) %89, i64 %116, !dbg !24
  %181 = getelementptr half, ptr addrspace(1) %89, i64 %117, !dbg !24
  %182 = getelementptr half, ptr addrspace(1) %89, i64 %118, !dbg !24
  %183 = getelementptr half, ptr addrspace(1) %89, i64 %119, !dbg !24
  %184 = getelementptr half, ptr addrspace(1) %89, i64 %120, !dbg !24
  %185 = getelementptr half, ptr addrspace(1) %89, i64 %121, !dbg !24
  %186 = addrspacecast ptr addrspace(1) %122 to ptr, !dbg !24
  %187 = load half, ptr %186, align 2, !dbg !24
  %188 = addrspacecast ptr addrspace(1) %123 to ptr, !dbg !24
  %189 = load half, ptr %188, align 2, !dbg !24
  %190 = addrspacecast ptr addrspace(1) %124 to ptr, !dbg !24
  %191 = load half, ptr %190, align 2, !dbg !24
  %192 = addrspacecast ptr addrspace(1) %125 to ptr, !dbg !24
  %193 = load half, ptr %192, align 2, !dbg !24
  %194 = addrspacecast ptr addrspace(1) %126 to ptr, !dbg !24
  %195 = load half, ptr %194, align 2, !dbg !24
  %196 = addrspacecast ptr addrspace(1) %127 to ptr, !dbg !24
  %197 = load half, ptr %196, align 2, !dbg !24
  %198 = addrspacecast ptr addrspace(1) %128 to ptr, !dbg !24
  %199 = load half, ptr %198, align 2, !dbg !24
  %200 = addrspacecast ptr addrspace(1) %129 to ptr, !dbg !24
  %201 = load half, ptr %200, align 2, !dbg !24
  %202 = addrspacecast ptr addrspace(1) %154 to ptr, !dbg !24
  %203 = load half, ptr %202, align 2, !dbg !24
  %204 = addrspacecast ptr addrspace(1) %155 to ptr, !dbg !24
  %205 = load half, ptr %204, align 2, !dbg !24
  %206 = addrspacecast ptr addrspace(1) %156 to ptr, !dbg !24
  %207 = load half, ptr %206, align 2, !dbg !24
  %208 = addrspacecast ptr addrspace(1) %157 to ptr, !dbg !24
  %209 = load half, ptr %208, align 2, !dbg !24
  %210 = addrspacecast ptr addrspace(1) %158 to ptr, !dbg !24
  %211 = load half, ptr %210, align 2, !dbg !24
  %212 = addrspacecast ptr addrspace(1) %159 to ptr, !dbg !24
  %213 = load half, ptr %212, align 2, !dbg !24
  %214 = addrspacecast ptr addrspace(1) %160 to ptr, !dbg !24
  %215 = load half, ptr %214, align 2, !dbg !24
  %216 = addrspacecast ptr addrspace(1) %161 to ptr, !dbg !24
  %217 = load half, ptr %216, align 2, !dbg !24
  %218 = addrspacecast ptr addrspace(1) %130 to ptr, !dbg !24
  %219 = load half, ptr %218, align 2, !dbg !24
  %220 = addrspacecast ptr addrspace(1) %131 to ptr, !dbg !24
  %221 = load half, ptr %220, align 2, !dbg !24
  %222 = addrspacecast ptr addrspace(1) %132 to ptr, !dbg !24
  %223 = load half, ptr %222, align 2, !dbg !24
  %224 = addrspacecast ptr addrspace(1) %133 to ptr, !dbg !24
  %225 = load half, ptr %224, align 2, !dbg !24
  %226 = addrspacecast ptr addrspace(1) %134 to ptr, !dbg !24
  %227 = load half, ptr %226, align 2, !dbg !24
  %228 = addrspacecast ptr addrspace(1) %135 to ptr, !dbg !24
  %229 = load half, ptr %228, align 2, !dbg !24
  %230 = addrspacecast ptr addrspace(1) %136 to ptr, !dbg !24
  %231 = load half, ptr %230, align 2, !dbg !24
  %232 = addrspacecast ptr addrspace(1) %137 to ptr, !dbg !24
  %233 = load half, ptr %232, align 2, !dbg !24
  %234 = addrspacecast ptr addrspace(1) %162 to ptr, !dbg !24
  %235 = load half, ptr %234, align 2, !dbg !24
  %236 = addrspacecast ptr addrspace(1) %163 to ptr, !dbg !24
  %237 = load half, ptr %236, align 2, !dbg !24
  %238 = addrspacecast ptr addrspace(1) %164 to ptr, !dbg !24
  %239 = load half, ptr %238, align 2, !dbg !24
  %240 = addrspacecast ptr addrspace(1) %165 to ptr, !dbg !24
  %241 = load half, ptr %240, align 2, !dbg !24
  %242 = addrspacecast ptr addrspace(1) %166 to ptr, !dbg !24
  %243 = load half, ptr %242, align 2, !dbg !24
  %244 = addrspacecast ptr addrspace(1) %167 to ptr, !dbg !24
  %245 = load half, ptr %244, align 2, !dbg !24
  %246 = addrspacecast ptr addrspace(1) %168 to ptr, !dbg !24
  %247 = load half, ptr %246, align 2, !dbg !24
  %248 = addrspacecast ptr addrspace(1) %169 to ptr, !dbg !24
  %249 = load half, ptr %248, align 2, !dbg !24
  %250 = addrspacecast ptr addrspace(1) %138 to ptr, !dbg !24
  %251 = load half, ptr %250, align 2, !dbg !24
  %252 = addrspacecast ptr addrspace(1) %139 to ptr, !dbg !24
  %253 = load half, ptr %252, align 2, !dbg !24
  %254 = addrspacecast ptr addrspace(1) %140 to ptr, !dbg !24
  %255 = load half, ptr %254, align 2, !dbg !24
  %256 = addrspacecast ptr addrspace(1) %141 to ptr, !dbg !24
  %257 = load half, ptr %256, align 2, !dbg !24
  %258 = addrspacecast ptr addrspace(1) %142 to ptr, !dbg !24
  %259 = load half, ptr %258, align 2, !dbg !24
  %260 = addrspacecast ptr addrspace(1) %143 to ptr, !dbg !24
  %261 = load half, ptr %260, align 2, !dbg !24
  %262 = addrspacecast ptr addrspace(1) %144 to ptr, !dbg !24
  %263 = load half, ptr %262, align 2, !dbg !24
  %264 = addrspacecast ptr addrspace(1) %145 to ptr, !dbg !24
  %265 = load half, ptr %264, align 2, !dbg !24
  %266 = addrspacecast ptr addrspace(1) %170 to ptr, !dbg !24
  %267 = load half, ptr %266, align 2, !dbg !24
  %268 = addrspacecast ptr addrspace(1) %171 to ptr, !dbg !24
  %269 = load half, ptr %268, align 2, !dbg !24
  %270 = addrspacecast ptr addrspace(1) %172 to ptr, !dbg !24
  %271 = load half, ptr %270, align 2, !dbg !24
  %272 = addrspacecast ptr addrspace(1) %173 to ptr, !dbg !24
  %273 = load half, ptr %272, align 2, !dbg !24
  %274 = addrspacecast ptr addrspace(1) %174 to ptr, !dbg !24
  %275 = load half, ptr %274, align 2, !dbg !24
  %276 = addrspacecast ptr addrspace(1) %175 to ptr, !dbg !24
  %277 = load half, ptr %276, align 2, !dbg !24
  %278 = addrspacecast ptr addrspace(1) %176 to ptr, !dbg !24
  %279 = load half, ptr %278, align 2, !dbg !24
  %280 = addrspacecast ptr addrspace(1) %177 to ptr, !dbg !24
  %281 = load half, ptr %280, align 2, !dbg !24
  %282 = addrspacecast ptr addrspace(1) %146 to ptr, !dbg !24
  %283 = load half, ptr %282, align 2, !dbg !24
  %284 = addrspacecast ptr addrspace(1) %147 to ptr, !dbg !24
  %285 = load half, ptr %284, align 2, !dbg !24
  %286 = addrspacecast ptr addrspace(1) %148 to ptr, !dbg !24
  %287 = load half, ptr %286, align 2, !dbg !24
  %288 = addrspacecast ptr addrspace(1) %149 to ptr, !dbg !24
  %289 = load half, ptr %288, align 2, !dbg !24
  %290 = addrspacecast ptr addrspace(1) %150 to ptr, !dbg !24
  %291 = load half, ptr %290, align 2, !dbg !24
  %292 = addrspacecast ptr addrspace(1) %151 to ptr, !dbg !24
  %293 = load half, ptr %292, align 2, !dbg !24
  %294 = addrspacecast ptr addrspace(1) %152 to ptr, !dbg !24
  %295 = load half, ptr %294, align 2, !dbg !24
  %296 = addrspacecast ptr addrspace(1) %153 to ptr, !dbg !24
  %297 = load half, ptr %296, align 2, !dbg !24
  %298 = addrspacecast ptr addrspace(1) %178 to ptr, !dbg !24
  %299 = load half, ptr %298, align 2, !dbg !24
  %300 = addrspacecast ptr addrspace(1) %179 to ptr, !dbg !24
  %301 = load half, ptr %300, align 2, !dbg !24
  %302 = addrspacecast ptr addrspace(1) %180 to ptr, !dbg !24
  %303 = load half, ptr %302, align 2, !dbg !24
  %304 = addrspacecast ptr addrspace(1) %181 to ptr, !dbg !24
  %305 = load half, ptr %304, align 2, !dbg !24
  %306 = addrspacecast ptr addrspace(1) %182 to ptr, !dbg !24
  %307 = load half, ptr %306, align 2, !dbg !24
  %308 = addrspacecast ptr addrspace(1) %183 to ptr, !dbg !24
  %309 = load half, ptr %308, align 2, !dbg !24
  %310 = addrspacecast ptr addrspace(1) %184 to ptr, !dbg !24
  %311 = load half, ptr %310, align 2, !dbg !24
  %312 = addrspacecast ptr addrspace(1) %185 to ptr, !dbg !24
  %313 = load half, ptr %312, align 2, !dbg !24
  %314 = insertelement <4 x half> poison, half %187, i64 0, !dbg !25
  %315 = insertelement <4 x half> %314, half %189, i64 1, !dbg !25
  %316 = insertelement <4 x half> %315, half %191, i64 2, !dbg !25
  %317 = insertelement <4 x half> %316, half %193, i64 3, !dbg !25
  %318 = fpext <4 x half> %317 to <4 x float>, !dbg !25
  %319 = insertelement <4 x float> poison, float %69, i64 0, !dbg !25
  %320 = shufflevector <4 x float> %319, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !25
  %321 = fmul <4 x float> %320, %318, !dbg !25
  %322 = fptrunc <4 x float> %321 to <4 x half>, !dbg !26
  %323 = insertelement <4 x half> poison, half %195, i64 0, !dbg !25
  %324 = insertelement <4 x half> %323, half %197, i64 1, !dbg !25
  %325 = insertelement <4 x half> %324, half %199, i64 2, !dbg !25
  %326 = insertelement <4 x half> %325, half %201, i64 3, !dbg !25
  %327 = fpext <4 x half> %326 to <4 x float>, !dbg !25
  %328 = fmul <4 x float> %320, %327, !dbg !25
  %329 = fptrunc <4 x float> %328 to <4 x half>, !dbg !26
  %330 = insertelement <4 x half> poison, half %203, i64 0, !dbg !25
  %331 = insertelement <4 x half> %330, half %205, i64 1, !dbg !25
  %332 = insertelement <4 x half> %331, half %207, i64 2, !dbg !25
  %333 = insertelement <4 x half> %332, half %209, i64 3, !dbg !25
  %334 = fpext <4 x half> %333 to <4 x float>, !dbg !25
  %335 = fmul <4 x float> %320, %334, !dbg !25
  %336 = fptrunc <4 x float> %335 to <4 x half>, !dbg !26
  %337 = insertelement <4 x half> poison, half %211, i64 0, !dbg !25
  %338 = insertelement <4 x half> %337, half %213, i64 1, !dbg !25
  %339 = insertelement <4 x half> %338, half %215, i64 2, !dbg !25
  %340 = insertelement <4 x half> %339, half %217, i64 3, !dbg !25
  %341 = fpext <4 x half> %340 to <4 x float>, !dbg !25
  %342 = fmul <4 x float> %320, %341, !dbg !25
  %343 = fptrunc <4 x float> %342 to <4 x half>, !dbg !26
  %344 = insertelement <4 x half> poison, half %219, i64 0, !dbg !25
  %345 = insertelement <4 x half> %344, half %221, i64 1, !dbg !25
  %346 = insertelement <4 x half> %345, half %223, i64 2, !dbg !25
  %347 = insertelement <4 x half> %346, half %225, i64 3, !dbg !25
  %348 = fpext <4 x half> %347 to <4 x float>, !dbg !25
  %349 = fmul <4 x float> %320, %348, !dbg !25
  %350 = fptrunc <4 x float> %349 to <4 x half>, !dbg !26
  %351 = insertelement <4 x half> poison, half %227, i64 0, !dbg !25
  %352 = insertelement <4 x half> %351, half %229, i64 1, !dbg !25
  %353 = insertelement <4 x half> %352, half %231, i64 2, !dbg !25
  %354 = insertelement <4 x half> %353, half %233, i64 3, !dbg !25
  %355 = fpext <4 x half> %354 to <4 x float>, !dbg !25
  %356 = fmul <4 x float> %320, %355, !dbg !25
  %357 = fptrunc <4 x float> %356 to <4 x half>, !dbg !26
  %358 = insertelement <4 x half> poison, half %235, i64 0, !dbg !25
  %359 = insertelement <4 x half> %358, half %237, i64 1, !dbg !25
  %360 = insertelement <4 x half> %359, half %239, i64 2, !dbg !25
  %361 = insertelement <4 x half> %360, half %241, i64 3, !dbg !25
  %362 = fpext <4 x half> %361 to <4 x float>, !dbg !25
  %363 = fmul <4 x float> %320, %362, !dbg !25
  %364 = fptrunc <4 x float> %363 to <4 x half>, !dbg !26
  %365 = insertelement <4 x half> poison, half %243, i64 0, !dbg !25
  %366 = insertelement <4 x half> %365, half %245, i64 1, !dbg !25
  %367 = insertelement <4 x half> %366, half %247, i64 2, !dbg !25
  %368 = insertelement <4 x half> %367, half %249, i64 3, !dbg !25
  %369 = fpext <4 x half> %368 to <4 x float>, !dbg !25
  %370 = fmul <4 x float> %320, %369, !dbg !25
  %371 = fptrunc <4 x float> %370 to <4 x half>, !dbg !26
  %372 = insertelement <4 x half> poison, half %251, i64 0, !dbg !25
  %373 = insertelement <4 x half> %372, half %253, i64 1, !dbg !25
  %374 = insertelement <4 x half> %373, half %255, i64 2, !dbg !25
  %375 = insertelement <4 x half> %374, half %257, i64 3, !dbg !25
  %376 = fpext <4 x half> %375 to <4 x float>, !dbg !25
  %377 = fmul <4 x float> %320, %376, !dbg !25
  %378 = fptrunc <4 x float> %377 to <4 x half>, !dbg !26
  %379 = insertelement <4 x half> poison, half %259, i64 0, !dbg !25
  %380 = insertelement <4 x half> %379, half %261, i64 1, !dbg !25
  %381 = insertelement <4 x half> %380, half %263, i64 2, !dbg !25
  %382 = insertelement <4 x half> %381, half %265, i64 3, !dbg !25
  %383 = fpext <4 x half> %382 to <4 x float>, !dbg !25
  %384 = fmul <4 x float> %320, %383, !dbg !25
  %385 = fptrunc <4 x float> %384 to <4 x half>, !dbg !26
  %386 = insertelement <4 x half> poison, half %267, i64 0, !dbg !25
  %387 = insertelement <4 x half> %386, half %269, i64 1, !dbg !25
  %388 = insertelement <4 x half> %387, half %271, i64 2, !dbg !25
  %389 = insertelement <4 x half> %388, half %273, i64 3, !dbg !25
  %390 = fpext <4 x half> %389 to <4 x float>, !dbg !25
  %391 = fmul <4 x float> %320, %390, !dbg !25
  %392 = fptrunc <4 x float> %391 to <4 x half>, !dbg !26
  %393 = insertelement <4 x half> poison, half %275, i64 0, !dbg !25
  %394 = insertelement <4 x half> %393, half %277, i64 1, !dbg !25
  %395 = insertelement <4 x half> %394, half %279, i64 2, !dbg !25
  %396 = insertelement <4 x half> %395, half %281, i64 3, !dbg !25
  %397 = fpext <4 x half> %396 to <4 x float>, !dbg !25
  %398 = fmul <4 x float> %320, %397, !dbg !25
  %399 = fptrunc <4 x float> %398 to <4 x half>, !dbg !26
  %400 = insertelement <4 x half> poison, half %283, i64 0, !dbg !25
  %401 = insertelement <4 x half> %400, half %285, i64 1, !dbg !25
  %402 = insertelement <4 x half> %401, half %287, i64 2, !dbg !25
  %403 = insertelement <4 x half> %402, half %289, i64 3, !dbg !25
  %404 = fpext <4 x half> %403 to <4 x float>, !dbg !25
  %405 = fmul <4 x float> %320, %404, !dbg !25
  %406 = fptrunc <4 x float> %405 to <4 x half>, !dbg !26
  %407 = insertelement <4 x half> poison, half %291, i64 0, !dbg !25
  %408 = insertelement <4 x half> %407, half %293, i64 1, !dbg !25
  %409 = insertelement <4 x half> %408, half %295, i64 2, !dbg !25
  %410 = insertelement <4 x half> %409, half %297, i64 3, !dbg !25
  %411 = fpext <4 x half> %410 to <4 x float>, !dbg !25
  %412 = fmul <4 x float> %320, %411, !dbg !25
  %413 = fptrunc <4 x float> %412 to <4 x half>, !dbg !26
  %414 = insertelement <4 x half> poison, half %299, i64 0, !dbg !25
  %415 = insertelement <4 x half> %414, half %301, i64 1, !dbg !25
  %416 = insertelement <4 x half> %415, half %303, i64 2, !dbg !25
  %417 = insertelement <4 x half> %416, half %305, i64 3, !dbg !25
  %418 = fpext <4 x half> %417 to <4 x float>, !dbg !25
  %419 = fmul <4 x float> %320, %418, !dbg !25
  %420 = fptrunc <4 x float> %419 to <4 x half>, !dbg !26
  %421 = insertelement <4 x half> poison, half %307, i64 0, !dbg !25
  %422 = insertelement <4 x half> %421, half %309, i64 1, !dbg !25
  %423 = insertelement <4 x half> %422, half %311, i64 2, !dbg !25
  %424 = insertelement <4 x half> %423, half %313, i64 3, !dbg !25
  %425 = fpext <4 x half> %424 to <4 x float>, !dbg !25
  %426 = fmul <4 x float> %320, %425, !dbg !25
  %427 = fptrunc <4 x float> %426 to <4 x half>, !dbg !26
  %428 = shl nuw nsw i32 %28, 5, !dbg !26
  %429 = shl nuw nsw i32 %66, 2, !dbg !26
  %430 = and i32 %429, 28, !dbg !26
  %431 = xor i32 %430, %34, !dbg !26
  %432 = or i32 %428, %431, !dbg !26
  %433 = zext i32 %432 to i64, !dbg !26
  %434 = getelementptr half, ptr addrspace(3) @global_smem, i64 %433, !dbg !26
  %435 = xor i32 %38, %430, !dbg !26
  %436 = or i32 %428, %435, !dbg !26
  %437 = zext i32 %436 to i64, !dbg !26
  %438 = getelementptr half, ptr addrspace(3) @global_smem, i64 %437, !dbg !26
  %439 = getelementptr half, ptr addrspace(3) %434, i64 2048, !dbg !26
  %440 = getelementptr half, ptr addrspace(3) %438, i64 2048, !dbg !26
  store <4 x half> %322, ptr addrspace(3) %434, align 8, !dbg !26
  store <4 x half> %329, ptr addrspace(3) %438, align 8, !dbg !26
  store <4 x half> %336, ptr addrspace(3) %439, align 8, !dbg !26
  store <4 x half> %343, ptr addrspace(3) %440, align 8, !dbg !26
  %441 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %433, !dbg !26
  %442 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %437, !dbg !26
  %443 = getelementptr half, ptr addrspace(3) %441, i64 2048, !dbg !26
  %444 = getelementptr half, ptr addrspace(3) %442, i64 2048, !dbg !26
  store <4 x half> %350, ptr addrspace(3) %441, align 8, !dbg !26
  store <4 x half> %357, ptr addrspace(3) %442, align 8, !dbg !26
  store <4 x half> %364, ptr addrspace(3) %443, align 8, !dbg !26
  store <4 x half> %371, ptr addrspace(3) %444, align 8, !dbg !26
  %445 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %433, !dbg !26
  %446 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %437, !dbg !26
  %447 = getelementptr half, ptr addrspace(3) %445, i64 2048, !dbg !26
  %448 = getelementptr half, ptr addrspace(3) %446, i64 2048, !dbg !26
  store <4 x half> %378, ptr addrspace(3) %445, align 8, !dbg !26
  store <4 x half> %385, ptr addrspace(3) %446, align 8, !dbg !26
  store <4 x half> %392, ptr addrspace(3) %447, align 8, !dbg !26
  store <4 x half> %399, ptr addrspace(3) %448, align 8, !dbg !26
  %449 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %433, !dbg !26
  %450 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %437, !dbg !26
  %451 = getelementptr half, ptr addrspace(3) %449, i64 2048, !dbg !26
  %452 = getelementptr half, ptr addrspace(3) %450, i64 2048, !dbg !26
  store <4 x half> %406, ptr addrspace(3) %449, align 8, !dbg !26
  store <4 x half> %413, ptr addrspace(3) %450, align 8, !dbg !26
  store <4 x half> %420, ptr addrspace(3) %451, align 8, !dbg !26
  store <4 x half> %427, ptr addrspace(3) %452, align 8, !dbg !26
  fence syncscope("workgroup") release, !dbg !26
  tail call void @llvm.amdgcn.s.barrier(), !dbg !26
  fence syncscope("workgroup") acquire, !dbg !26
  %453 = icmp ugt i32 %23, 31, !dbg !26
  %454 = zext i1 %453 to i32, !dbg !26
  %455 = lshr i32 %22, 1, !dbg !26
  %456 = and i32 %455, 7, !dbg !26
  %457 = xor i32 %456, %454, !dbg !26
  %458 = shl nuw nsw i32 %457, 2, !dbg !26
  %459 = shl nuw nsw i32 %32, 5, !dbg !26
  %460 = or i32 %459, %458, !dbg !26
  %461 = or i32 %454, 2, !dbg !26
  %462 = xor i32 %461, %456, !dbg !26
  %463 = shl nuw nsw i32 %462, 2, !dbg !26
  %464 = or i32 %463, %459, !dbg !26
  %465 = or i32 %454, 4, !dbg !26
  %466 = xor i32 %465, %456, !dbg !26
  %467 = shl nuw nsw i32 %466, 2, !dbg !26
  %468 = or i32 %467, %459, !dbg !26
  %469 = or i32 %454, 6, !dbg !26
  %470 = xor i32 %469, %456, !dbg !26
  %471 = shl nuw nsw i32 %470, 2, !dbg !26
  %472 = or i32 %471, %459, !dbg !26
  %473 = zext i32 %460 to i64, !dbg !26
  %474 = getelementptr half, ptr addrspace(3) @global_smem, i64 %473, !dbg !26
  %475 = load <4 x half>, ptr addrspace(3) %474, align 8, !dbg !26
  %476 = zext i32 %464 to i64, !dbg !26
  %477 = getelementptr half, ptr addrspace(3) @global_smem, i64 %476, !dbg !26
  %478 = load <4 x half>, ptr addrspace(3) %477, align 8, !dbg !26
  %479 = zext i32 %468 to i64, !dbg !26
  %480 = getelementptr half, ptr addrspace(3) @global_smem, i64 %479, !dbg !26
  %481 = load <4 x half>, ptr addrspace(3) %480, align 8, !dbg !26
  %482 = zext i32 %472 to i64, !dbg !26
  %483 = getelementptr half, ptr addrspace(3) @global_smem, i64 %482, !dbg !26
  %484 = load <4 x half>, ptr addrspace(3) %483, align 8, !dbg !26
  %485 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %473, !dbg !26
  %486 = load <4 x half>, ptr addrspace(3) %485, align 8, !dbg !26
  %487 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %476, !dbg !26
  %488 = load <4 x half>, ptr addrspace(3) %487, align 8, !dbg !26
  %489 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %479, !dbg !26
  %490 = load <4 x half>, ptr addrspace(3) %489, align 8, !dbg !26
  %491 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %482, !dbg !26
  %492 = load <4 x half>, ptr addrspace(3) %491, align 8, !dbg !26
  %493 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %473, !dbg !26
  %494 = load <4 x half>, ptr addrspace(3) %493, align 8, !dbg !26
  %495 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %476, !dbg !26
  %496 = load <4 x half>, ptr addrspace(3) %495, align 8, !dbg !26
  %497 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %479, !dbg !26
  %498 = load <4 x half>, ptr addrspace(3) %497, align 8, !dbg !26
  %499 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %482, !dbg !26
  %500 = load <4 x half>, ptr addrspace(3) %499, align 8, !dbg !26
  %501 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %473, !dbg !26
  %502 = load <4 x half>, ptr addrspace(3) %501, align 8, !dbg !26
  %503 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %476, !dbg !26
  %504 = load <4 x half>, ptr addrspace(3) %503, align 8, !dbg !26
  %505 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %479, !dbg !26
  %506 = load <4 x half>, ptr addrspace(3) %505, align 8, !dbg !26
  %507 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %482, !dbg !26
  %508 = load <4 x half>, ptr addrspace(3) %507, align 8, !dbg !26
  %509 = or i32 %71, %68, !dbg !27
  %510 = getelementptr half, ptr addrspace(1) %78, i64 %90, !dbg !28
  %511 = getelementptr half, ptr addrspace(1) %78, i64 %91, !dbg !28
  %512 = getelementptr half, ptr addrspace(1) %78, i64 %92, !dbg !28
  %513 = getelementptr half, ptr addrspace(1) %78, i64 %93, !dbg !28
  %514 = getelementptr half, ptr addrspace(1) %78, i64 %94, !dbg !28
  %515 = getelementptr half, ptr addrspace(1) %78, i64 %95, !dbg !28
  %516 = getelementptr half, ptr addrspace(1) %78, i64 %96, !dbg !28
  %517 = getelementptr half, ptr addrspace(1) %78, i64 %97, !dbg !28
  %518 = getelementptr half, ptr addrspace(1) %78, i64 %98, !dbg !28
  %519 = getelementptr half, ptr addrspace(1) %78, i64 %99, !dbg !28
  %520 = getelementptr half, ptr addrspace(1) %78, i64 %100, !dbg !28
  %521 = getelementptr half, ptr addrspace(1) %78, i64 %101, !dbg !28
  %522 = getelementptr half, ptr addrspace(1) %78, i64 %102, !dbg !28
  %523 = getelementptr half, ptr addrspace(1) %78, i64 %103, !dbg !28
  %524 = getelementptr half, ptr addrspace(1) %78, i64 %104, !dbg !28
  %525 = getelementptr half, ptr addrspace(1) %78, i64 %105, !dbg !28
  %526 = getelementptr half, ptr addrspace(1) %78, i64 %106, !dbg !28
  %527 = getelementptr half, ptr addrspace(1) %78, i64 %107, !dbg !28
  %528 = getelementptr half, ptr addrspace(1) %78, i64 %108, !dbg !28
  %529 = getelementptr half, ptr addrspace(1) %78, i64 %109, !dbg !28
  %530 = getelementptr half, ptr addrspace(1) %78, i64 %110, !dbg !28
  %531 = getelementptr half, ptr addrspace(1) %78, i64 %111, !dbg !28
  %532 = getelementptr half, ptr addrspace(1) %78, i64 %112, !dbg !28
  %533 = getelementptr half, ptr addrspace(1) %78, i64 %113, !dbg !28
  %534 = getelementptr half, ptr addrspace(1) %78, i64 %114, !dbg !28
  %535 = getelementptr half, ptr addrspace(1) %78, i64 %115, !dbg !28
  %536 = getelementptr half, ptr addrspace(1) %78, i64 %116, !dbg !28
  %537 = getelementptr half, ptr addrspace(1) %78, i64 %117, !dbg !28
  %538 = getelementptr half, ptr addrspace(1) %78, i64 %118, !dbg !28
  %539 = getelementptr half, ptr addrspace(1) %78, i64 %119, !dbg !28
  %540 = getelementptr half, ptr addrspace(1) %78, i64 %120, !dbg !28
  %541 = getelementptr half, ptr addrspace(1) %78, i64 %121, !dbg !28
  %542 = mul nsw i64 %81, %82, !dbg !31
  %543 = mul nsw i64 %81, %83, !dbg !31
  %544 = icmp sgt i32 %20, 0, !dbg !32
  br i1 %544, label %.lr.ph, label %._crit_edge, !dbg !32

.lr.ph:                                           ; preds = %21
  %545 = shl nuw nsw i32 %31, 5
  %546 = or i32 %458, %545
  %547 = or i32 %463, %545
  %548 = or i32 %467, %545
  %549 = or i32 %471, %545
  %550 = zext i32 %546 to i64
  %551 = getelementptr half, ptr addrspace(3) @global_smem, i64 %550
  %552 = zext i32 %547 to i64
  %553 = getelementptr half, ptr addrspace(3) @global_smem, i64 %552
  %554 = zext i32 %548 to i64
  %555 = getelementptr half, ptr addrspace(3) @global_smem, i64 %554
  %556 = zext i32 %549 to i64
  %557 = getelementptr half, ptr addrspace(3) @global_smem, i64 %556
  %558 = or i32 %546, 1024
  %559 = zext i32 %558 to i64
  %560 = getelementptr half, ptr addrspace(3) @global_smem, i64 %559
  %561 = or i32 %547, 1024
  %562 = zext i32 %561 to i64
  %563 = getelementptr half, ptr addrspace(3) @global_smem, i64 %562
  %564 = or i32 %548, 1024
  %565 = zext i32 %564 to i64
  %566 = getelementptr half, ptr addrspace(3) @global_smem, i64 %565
  %567 = or i32 %549, 1024
  %568 = zext i32 %567 to i64
  %569 = getelementptr half, ptr addrspace(3) @global_smem, i64 %568
  %570 = or i32 %546, 2048
  %571 = zext i32 %570 to i64
  %572 = getelementptr half, ptr addrspace(3) @global_smem, i64 %571
  %573 = or i32 %547, 2048
  %574 = zext i32 %573 to i64
  %575 = getelementptr half, ptr addrspace(3) @global_smem, i64 %574
  %576 = or i32 %548, 2048
  %577 = zext i32 %576 to i64
  %578 = getelementptr half, ptr addrspace(3) @global_smem, i64 %577
  %579 = or i32 %549, 2048
  %580 = zext i32 %579 to i64
  %581 = getelementptr half, ptr addrspace(3) @global_smem, i64 %580
  %582 = or i32 %546, 3072
  %583 = zext i32 %582 to i64
  %584 = getelementptr half, ptr addrspace(3) @global_smem, i64 %583
  %585 = or i32 %547, 3072
  %586 = zext i32 %585 to i64
  %587 = getelementptr half, ptr addrspace(3) @global_smem, i64 %586
  %588 = or i32 %548, 3072
  %589 = zext i32 %588 to i64
  %590 = getelementptr half, ptr addrspace(3) @global_smem, i64 %589
  %591 = or i32 %549, 3072
  %592 = zext i32 %591 to i64
  %593 = getelementptr half, ptr addrspace(3) @global_smem, i64 %592
  %594 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %550
  %595 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %552
  %596 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %554
  %597 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %556
  %598 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %559
  %599 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %562
  %600 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %565
  %601 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %568
  %602 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %571
  %603 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %574
  %604 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %577
  %605 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %580
  %606 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %583
  %607 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %586
  %608 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %589
  %609 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 8192), i64 %592
  %610 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %550
  %611 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %552
  %612 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %554
  %613 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %556
  %614 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %559
  %615 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %562
  %616 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %565
  %617 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %568
  %618 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %571
  %619 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %574
  %620 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %577
  %621 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %580
  %622 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %583
  %623 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %586
  %624 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %589
  %625 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 16384), i64 %592
  %626 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %550
  %627 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %552
  %628 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %554
  %629 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %556
  %630 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %559
  %631 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %562
  %632 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %565
  %633 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %568
  %634 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %571
  %635 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %574
  %636 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %577
  %637 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %580
  %638 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %583
  %639 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %586
  %640 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %589
  %641 = getelementptr half, ptr addrspace(3) getelementptr ([0 x i8], ptr addrspace(3) @global_smem, i64 0, i64 24576), i64 %592
  %642 = shl i32 %22, 2
  %643 = xor i32 %642, 128
  br label %644, !dbg !32

644:                                              ; preds = %.lr.ph, %644
  %645 = phi i64 [ 0, %.lr.ph ], [ %1925, %644 ]
  %646 = phi float [ 0xFFF0000000000000, %.lr.ph ], [ %1188, %644 ]
  %647 = phi float [ 1.000000e+00, %.lr.ph ], [ %1924, %644 ]
  %648 = phi i32 [ 0, %.lr.ph ], [ %1926, %644 ]
  %649 = phi <16 x float> [ zeroinitializer, %.lr.ph ], [ %1852, %644 ]
  %650 = phi <16 x float> [ zeroinitializer, %.lr.ph ], [ %1848, %644 ]
  %651 = phi <16 x float> [ zeroinitializer, %.lr.ph ], [ %1844, %644 ]
  %652 = phi <16 x float> [ zeroinitializer, %.lr.ph ], [ %1840, %644 ]
  %653 = or i64 %645, %82, !dbg !28
  %654 = or i64 %645, %83, !dbg !28
  %655 = mul i64 %653, %79, !dbg !28
  %656 = mul i64 %654, %79, !dbg !28
  %657 = getelementptr half, ptr addrspace(1) %510, i64 %655, !dbg !28
  %658 = getelementptr half, ptr addrspace(1) %511, i64 %655, !dbg !28
  %659 = getelementptr half, ptr addrspace(1) %512, i64 %655, !dbg !28
  %660 = getelementptr half, ptr addrspace(1) %513, i64 %655, !dbg !28
  %661 = getelementptr half, ptr addrspace(1) %514, i64 %655, !dbg !28
  %662 = getelementptr half, ptr addrspace(1) %515, i64 %655, !dbg !28
  %663 = getelementptr half, ptr addrspace(1) %516, i64 %655, !dbg !28
  %664 = getelementptr half, ptr addrspace(1) %517, i64 %655, !dbg !28
  %665 = getelementptr half, ptr addrspace(1) %518, i64 %655, !dbg !28
  %666 = getelementptr half, ptr addrspace(1) %519, i64 %655, !dbg !28
  %667 = getelementptr half, ptr addrspace(1) %520, i64 %655, !dbg !28
  %668 = getelementptr half, ptr addrspace(1) %521, i64 %655, !dbg !28
  %669 = getelementptr half, ptr addrspace(1) %522, i64 %655, !dbg !28
  %670 = getelementptr half, ptr addrspace(1) %523, i64 %655, !dbg !28
  %671 = getelementptr half, ptr addrspace(1) %524, i64 %655, !dbg !28
  %672 = getelementptr half, ptr addrspace(1) %525, i64 %655, !dbg !28
  %673 = getelementptr half, ptr addrspace(1) %526, i64 %655, !dbg !28
  %674 = getelementptr half, ptr addrspace(1) %527, i64 %655, !dbg !28
  %675 = getelementptr half, ptr addrspace(1) %528, i64 %655, !dbg !28
  %676 = getelementptr half, ptr addrspace(1) %529, i64 %655, !dbg !28
  %677 = getelementptr half, ptr addrspace(1) %530, i64 %655, !dbg !28
  %678 = getelementptr half, ptr addrspace(1) %531, i64 %655, !dbg !28
  %679 = getelementptr half, ptr addrspace(1) %532, i64 %655, !dbg !28
  %680 = getelementptr half, ptr addrspace(1) %533, i64 %655, !dbg !28
  %681 = getelementptr half, ptr addrspace(1) %534, i64 %655, !dbg !28
  %682 = getelementptr half, ptr addrspace(1) %535, i64 %655, !dbg !28
  %683 = getelementptr half, ptr addrspace(1) %536, i64 %655, !dbg !28
  %684 = getelementptr half, ptr addrspace(1) %537, i64 %655, !dbg !28
  %685 = getelementptr half, ptr addrspace(1) %538, i64 %655, !dbg !28
  %686 = getelementptr half, ptr addrspace(1) %539, i64 %655, !dbg !28
  %687 = getelementptr half, ptr addrspace(1) %540, i64 %655, !dbg !28
  %688 = getelementptr half, ptr addrspace(1) %541, i64 %655, !dbg !28
  %689 = getelementptr half, ptr addrspace(1) %510, i64 %656, !dbg !28
  %690 = getelementptr half, ptr addrspace(1) %511, i64 %656, !dbg !28
  %691 = getelementptr half, ptr addrspace(1) %512, i64 %656, !dbg !28
  %692 = getelementptr half, ptr addrspace(1) %513, i64 %656, !dbg !28
  %693 = getelementptr half, ptr addrspace(1) %514, i64 %656, !dbg !28
  %694 = getelementptr half, ptr addrspace(1) %515, i64 %656, !dbg !28
  %695 = getelementptr half, ptr addrspace(1) %516, i64 %656, !dbg !28
  %696 = getelementptr half, ptr addrspace(1) %517, i64 %656, !dbg !28
  %697 = getelementptr half, ptr addrspace(1) %518, i64 %656, !dbg !28
  %698 = getelementptr half, ptr addrspace(1) %519, i64 %656, !dbg !28
  %699 = getelementptr half, ptr addrspace(1) %520, i64 %656, !dbg !28
  %700 = getelementptr half, ptr addrspace(1) %521, i64 %656, !dbg !28
  %701 = getelementptr half, ptr addrspace(1) %522, i64 %656, !dbg !28
  %702 = getelementptr half, ptr addrspace(1) %523, i64 %656, !dbg !28
  %703 = getelementptr half, ptr addrspace(1) %524, i64 %656, !dbg !28
  %704 = getelementptr half, ptr addrspace(1) %525, i64 %656, !dbg !28
  %705 = getelementptr half, ptr addrspace(1) %526, i64 %656, !dbg !28
  %706 = getelementptr half, ptr addrspace(1) %527, i64 %656, !dbg !28
  %707 = getelementptr half, ptr addrspace(1) %528, i64 %656, !dbg !28
  %708 = getelementptr half, ptr addrspace(1) %529, i64 %656, !dbg !28
  %709 = getelementptr half, ptr addrspace(1) %530, i64 %656, !dbg !28
  %710 = getelementptr half, ptr addrspace(1) %531, i64 %656, !dbg !28
  %711 = getelementptr half, ptr addrspace(1) %532, i64 %656, !dbg !28
  %712 = getelementptr half, ptr addrspace(1) %533, i64 %656, !dbg !28
  %713 = getelementptr half, ptr addrspace(1) %534, i64 %656, !dbg !28
  %714 = getelementptr half, ptr addrspace(1) %535, i64 %656, !dbg !28
  %715 = getelementptr half, ptr addrspace(1) %536, i64 %656, !dbg !28
  %716 = getelementptr half, ptr addrspace(1) %537, i64 %656, !dbg !28
  %717 = getelementptr half, ptr addrspace(1) %538, i64 %656, !dbg !28
  %718 = getelementptr half, ptr addrspace(1) %539, i64 %656, !dbg !28
  %719 = getelementptr half, ptr addrspace(1) %540, i64 %656, !dbg !28
  %720 = getelementptr half, ptr addrspace(1) %541, i64 %656, !dbg !28
  %721 = addrspacecast ptr addrspace(1) %657 to ptr, !dbg !28
  %722 = load <1 x half>, ptr %721, align 2, !dbg !28
  %723 = addrspacecast ptr addrspace(1) %658 to ptr, !dbg !28
  %724 = load <1 x half>, ptr %723, align 2, !dbg !28
  %725 = addrspacecast ptr addrspace(1) %659 to ptr, !dbg !28
  %726 = load <1 x half>, ptr %725, align 2, !dbg !28
  %727 = shufflevector <1 x half> %726, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %728 = addrspacecast ptr addrspace(1) %660 to ptr, !dbg !28
  %729 = load <1 x half>, ptr %728, align 2, !dbg !28
  %730 = shufflevector <1 x half> %729, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %731 = addrspacecast ptr addrspace(1) %661 to ptr, !dbg !28
  %732 = load <1 x half>, ptr %731, align 2, !dbg !28
  %733 = addrspacecast ptr addrspace(1) %662 to ptr, !dbg !28
  %734 = load <1 x half>, ptr %733, align 2, !dbg !28
  %735 = addrspacecast ptr addrspace(1) %663 to ptr, !dbg !28
  %736 = load <1 x half>, ptr %735, align 2, !dbg !28
  %737 = shufflevector <1 x half> %736, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %738 = addrspacecast ptr addrspace(1) %664 to ptr, !dbg !28
  %739 = load <1 x half>, ptr %738, align 2, !dbg !28
  %740 = shufflevector <1 x half> %739, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %741 = addrspacecast ptr addrspace(1) %689 to ptr, !dbg !28
  %742 = load <1 x half>, ptr %741, align 2, !dbg !28
  %743 = addrspacecast ptr addrspace(1) %690 to ptr, !dbg !28
  %744 = load <1 x half>, ptr %743, align 2, !dbg !28
  %745 = addrspacecast ptr addrspace(1) %691 to ptr, !dbg !28
  %746 = load <1 x half>, ptr %745, align 2, !dbg !28
  %747 = shufflevector <1 x half> %746, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %748 = addrspacecast ptr addrspace(1) %692 to ptr, !dbg !28
  %749 = load <1 x half>, ptr %748, align 2, !dbg !28
  %750 = shufflevector <1 x half> %749, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %751 = addrspacecast ptr addrspace(1) %693 to ptr, !dbg !28
  %752 = load <1 x half>, ptr %751, align 2, !dbg !28
  %753 = addrspacecast ptr addrspace(1) %694 to ptr, !dbg !28
  %754 = load <1 x half>, ptr %753, align 2, !dbg !28
  %755 = addrspacecast ptr addrspace(1) %695 to ptr, !dbg !28
  %756 = load <1 x half>, ptr %755, align 2, !dbg !28
  %757 = shufflevector <1 x half> %756, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %758 = addrspacecast ptr addrspace(1) %696 to ptr, !dbg !28
  %759 = load <1 x half>, ptr %758, align 2, !dbg !28
  %760 = shufflevector <1 x half> %759, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %761 = addrspacecast ptr addrspace(1) %665 to ptr, !dbg !28
  %762 = load <1 x half>, ptr %761, align 2, !dbg !28
  %763 = addrspacecast ptr addrspace(1) %666 to ptr, !dbg !28
  %764 = load <1 x half>, ptr %763, align 2, !dbg !28
  %765 = addrspacecast ptr addrspace(1) %667 to ptr, !dbg !28
  %766 = load <1 x half>, ptr %765, align 2, !dbg !28
  %767 = shufflevector <1 x half> %766, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %768 = addrspacecast ptr addrspace(1) %668 to ptr, !dbg !28
  %769 = load <1 x half>, ptr %768, align 2, !dbg !28
  %770 = shufflevector <1 x half> %769, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %771 = addrspacecast ptr addrspace(1) %669 to ptr, !dbg !28
  %772 = load <1 x half>, ptr %771, align 2, !dbg !28
  %773 = addrspacecast ptr addrspace(1) %670 to ptr, !dbg !28
  %774 = load <1 x half>, ptr %773, align 2, !dbg !28
  %775 = addrspacecast ptr addrspace(1) %671 to ptr, !dbg !28
  %776 = load <1 x half>, ptr %775, align 2, !dbg !28
  %777 = shufflevector <1 x half> %776, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %778 = addrspacecast ptr addrspace(1) %672 to ptr, !dbg !28
  %779 = load <1 x half>, ptr %778, align 2, !dbg !28
  %780 = shufflevector <1 x half> %779, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %781 = addrspacecast ptr addrspace(1) %697 to ptr, !dbg !28
  %782 = load <1 x half>, ptr %781, align 2, !dbg !28
  %783 = addrspacecast ptr addrspace(1) %698 to ptr, !dbg !28
  %784 = load <1 x half>, ptr %783, align 2, !dbg !28
  %785 = addrspacecast ptr addrspace(1) %699 to ptr, !dbg !28
  %786 = load <1 x half>, ptr %785, align 2, !dbg !28
  %787 = shufflevector <1 x half> %786, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %788 = addrspacecast ptr addrspace(1) %700 to ptr, !dbg !28
  %789 = load <1 x half>, ptr %788, align 2, !dbg !28
  %790 = shufflevector <1 x half> %789, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %791 = addrspacecast ptr addrspace(1) %701 to ptr, !dbg !28
  %792 = load <1 x half>, ptr %791, align 2, !dbg !28
  %793 = addrspacecast ptr addrspace(1) %702 to ptr, !dbg !28
  %794 = load <1 x half>, ptr %793, align 2, !dbg !28
  %795 = addrspacecast ptr addrspace(1) %703 to ptr, !dbg !28
  %796 = load <1 x half>, ptr %795, align 2, !dbg !28
  %797 = shufflevector <1 x half> %796, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %798 = addrspacecast ptr addrspace(1) %704 to ptr, !dbg !28
  %799 = load <1 x half>, ptr %798, align 2, !dbg !28
  %800 = shufflevector <1 x half> %799, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %801 = addrspacecast ptr addrspace(1) %673 to ptr, !dbg !28
  %802 = load <1 x half>, ptr %801, align 2, !dbg !28
  %803 = addrspacecast ptr addrspace(1) %674 to ptr, !dbg !28
  %804 = load <1 x half>, ptr %803, align 2, !dbg !28
  %805 = addrspacecast ptr addrspace(1) %675 to ptr, !dbg !28
  %806 = load <1 x half>, ptr %805, align 2, !dbg !28
  %807 = shufflevector <1 x half> %806, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %808 = addrspacecast ptr addrspace(1) %676 to ptr, !dbg !28
  %809 = load <1 x half>, ptr %808, align 2, !dbg !28
  %810 = shufflevector <1 x half> %809, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %811 = addrspacecast ptr addrspace(1) %677 to ptr, !dbg !28
  %812 = load <1 x half>, ptr %811, align 2, !dbg !28
  %813 = addrspacecast ptr addrspace(1) %678 to ptr, !dbg !28
  %814 = load <1 x half>, ptr %813, align 2, !dbg !28
  %815 = addrspacecast ptr addrspace(1) %679 to ptr, !dbg !28
  %816 = load <1 x half>, ptr %815, align 2, !dbg !28
  %817 = shufflevector <1 x half> %816, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %818 = addrspacecast ptr addrspace(1) %680 to ptr, !dbg !28
  %819 = load <1 x half>, ptr %818, align 2, !dbg !28
  %820 = shufflevector <1 x half> %819, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %821 = addrspacecast ptr addrspace(1) %705 to ptr, !dbg !28
  %822 = load <1 x half>, ptr %821, align 2, !dbg !28
  %823 = addrspacecast ptr addrspace(1) %706 to ptr, !dbg !28
  %824 = load <1 x half>, ptr %823, align 2, !dbg !28
  %825 = addrspacecast ptr addrspace(1) %707 to ptr, !dbg !28
  %826 = load <1 x half>, ptr %825, align 2, !dbg !28
  %827 = shufflevector <1 x half> %826, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %828 = addrspacecast ptr addrspace(1) %708 to ptr, !dbg !28
  %829 = load <1 x half>, ptr %828, align 2, !dbg !28
  %830 = shufflevector <1 x half> %829, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %831 = addrspacecast ptr addrspace(1) %709 to ptr, !dbg !28
  %832 = load <1 x half>, ptr %831, align 2, !dbg !28
  %833 = addrspacecast ptr addrspace(1) %710 to ptr, !dbg !28
  %834 = load <1 x half>, ptr %833, align 2, !dbg !28
  %835 = addrspacecast ptr addrspace(1) %711 to ptr, !dbg !28
  %836 = load <1 x half>, ptr %835, align 2, !dbg !28
  %837 = shufflevector <1 x half> %836, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %838 = addrspacecast ptr addrspace(1) %712 to ptr, !dbg !28
  %839 = load <1 x half>, ptr %838, align 2, !dbg !28
  %840 = shufflevector <1 x half> %839, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %841 = addrspacecast ptr addrspace(1) %681 to ptr, !dbg !28
  %842 = load <1 x half>, ptr %841, align 2, !dbg !28
  %843 = addrspacecast ptr addrspace(1) %682 to ptr, !dbg !28
  %844 = load <1 x half>, ptr %843, align 2, !dbg !28
  %845 = addrspacecast ptr addrspace(1) %683 to ptr, !dbg !28
  %846 = load <1 x half>, ptr %845, align 2, !dbg !28
  %847 = shufflevector <1 x half> %846, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %848 = addrspacecast ptr addrspace(1) %684 to ptr, !dbg !28
  %849 = load <1 x half>, ptr %848, align 2, !dbg !28
  %850 = shufflevector <1 x half> %849, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %851 = addrspacecast ptr addrspace(1) %685 to ptr, !dbg !28
  %852 = load <1 x half>, ptr %851, align 2, !dbg !28
  %853 = addrspacecast ptr addrspace(1) %686 to ptr, !dbg !28
  %854 = load <1 x half>, ptr %853, align 2, !dbg !28
  %855 = addrspacecast ptr addrspace(1) %687 to ptr, !dbg !28
  %856 = load <1 x half>, ptr %855, align 2, !dbg !28
  %857 = shufflevector <1 x half> %856, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %858 = addrspacecast ptr addrspace(1) %688 to ptr, !dbg !28
  %859 = load <1 x half>, ptr %858, align 2, !dbg !28
  %860 = shufflevector <1 x half> %859, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %861 = addrspacecast ptr addrspace(1) %713 to ptr, !dbg !28
  %862 = load <1 x half>, ptr %861, align 2, !dbg !28
  %863 = addrspacecast ptr addrspace(1) %714 to ptr, !dbg !28
  %864 = load <1 x half>, ptr %863, align 2, !dbg !28
  %865 = addrspacecast ptr addrspace(1) %715 to ptr, !dbg !28
  %866 = load <1 x half>, ptr %865, align 2, !dbg !28
  %867 = shufflevector <1 x half> %866, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %868 = addrspacecast ptr addrspace(1) %716 to ptr, !dbg !28
  %869 = load <1 x half>, ptr %868, align 2, !dbg !28
  %870 = shufflevector <1 x half> %869, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %871 = addrspacecast ptr addrspace(1) %717 to ptr, !dbg !28
  %872 = load <1 x half>, ptr %871, align 2, !dbg !28
  %873 = addrspacecast ptr addrspace(1) %718 to ptr, !dbg !28
  %874 = load <1 x half>, ptr %873, align 2, !dbg !28
  %875 = addrspacecast ptr addrspace(1) %719 to ptr, !dbg !28
  %876 = load <1 x half>, ptr %875, align 2, !dbg !28
  %877 = shufflevector <1 x half> %876, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %878 = addrspacecast ptr addrspace(1) %720 to ptr, !dbg !28
  %879 = load <1 x half>, ptr %878, align 2, !dbg !28
  %880 = shufflevector <1 x half> %879, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release, !dbg !28
  tail call void @llvm.amdgcn.s.barrier(), !dbg !28
  fence syncscope("workgroup") acquire, !dbg !28
  %881 = shufflevector <1 x half> %722, <1 x half> %724, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !28
  %882 = shufflevector <4 x half> %881, <4 x half> %727, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !28
  %883 = shufflevector <4 x half> %882, <4 x half> %730, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !28
  store <4 x half> %883, ptr addrspace(3) %434, align 8, !dbg !28
  %884 = shufflevector <1 x half> %732, <1 x half> %734, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !28
  %885 = shufflevector <4 x half> %884, <4 x half> %737, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !28
  %886 = shufflevector <4 x half> %885, <4 x half> %740, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !28
  store <4 x half> %886, ptr addrspace(3) %438, align 8, !dbg !28
  %887 = shufflevector <1 x half> %742, <1 x half> %744, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !28
  %888 = shufflevector <4 x half> %887, <4 x half> %747, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !28
  %889 = shufflevector <4 x half> %888, <4 x half> %750, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !28
  store <4 x half> %889, ptr addrspace(3) %439, align 8, !dbg !28
  %890 = shufflevector <1 x half> %752, <1 x half> %754, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !28
  %891 = shufflevector <4 x half> %890, <4 x half> %757, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !28
  %892 = shufflevector <4 x half> %891, <4 x half> %760, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !28
  store <4 x half> %892, ptr addrspace(3) %440, align 8, !dbg !28
  %893 = shufflevector <1 x half> %762, <1 x half> %764, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !28
  %894 = shufflevector <4 x half> %893, <4 x half> %767, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !28
  %895 = shufflevector <4 x half> %894, <4 x half> %770, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !28
  store <4 x half> %895, ptr addrspace(3) %441, align 8, !dbg !28
  %896 = shufflevector <1 x half> %772, <1 x half> %774, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !28
  %897 = shufflevector <4 x half> %896, <4 x half> %777, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !28
  %898 = shufflevector <4 x half> %897, <4 x half> %780, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !28
  store <4 x half> %898, ptr addrspace(3) %442, align 8, !dbg !28
  %899 = shufflevector <1 x half> %782, <1 x half> %784, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !28
  %900 = shufflevector <4 x half> %899, <4 x half> %787, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !28
  %901 = shufflevector <4 x half> %900, <4 x half> %790, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !28
  store <4 x half> %901, ptr addrspace(3) %443, align 8, !dbg !28
  %902 = shufflevector <1 x half> %792, <1 x half> %794, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !28
  %903 = shufflevector <4 x half> %902, <4 x half> %797, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !28
  %904 = shufflevector <4 x half> %903, <4 x half> %800, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !28
  store <4 x half> %904, ptr addrspace(3) %444, align 8, !dbg !28
  %905 = shufflevector <1 x half> %802, <1 x half> %804, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !28
  %906 = shufflevector <4 x half> %905, <4 x half> %807, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !28
  %907 = shufflevector <4 x half> %906, <4 x half> %810, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !28
  store <4 x half> %907, ptr addrspace(3) %445, align 8, !dbg !28
  %908 = shufflevector <1 x half> %812, <1 x half> %814, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !28
  %909 = shufflevector <4 x half> %908, <4 x half> %817, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !28
  %910 = shufflevector <4 x half> %909, <4 x half> %820, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !28
  store <4 x half> %910, ptr addrspace(3) %446, align 8, !dbg !28
  %911 = shufflevector <1 x half> %822, <1 x half> %824, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !28
  %912 = shufflevector <4 x half> %911, <4 x half> %827, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !28
  %913 = shufflevector <4 x half> %912, <4 x half> %830, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !28
  store <4 x half> %913, ptr addrspace(3) %447, align 8, !dbg !28
  %914 = shufflevector <1 x half> %832, <1 x half> %834, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !28
  %915 = shufflevector <4 x half> %914, <4 x half> %837, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !28
  %916 = shufflevector <4 x half> %915, <4 x half> %840, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !28
  store <4 x half> %916, ptr addrspace(3) %448, align 8, !dbg !28
  %917 = shufflevector <1 x half> %842, <1 x half> %844, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !28
  %918 = shufflevector <4 x half> %917, <4 x half> %847, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !28
  %919 = shufflevector <4 x half> %918, <4 x half> %850, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !28
  store <4 x half> %919, ptr addrspace(3) %449, align 8, !dbg !28
  %920 = shufflevector <1 x half> %852, <1 x half> %854, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !28
  %921 = shufflevector <4 x half> %920, <4 x half> %857, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !28
  %922 = shufflevector <4 x half> %921, <4 x half> %860, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !28
  store <4 x half> %922, ptr addrspace(3) %450, align 8, !dbg !28
  %923 = shufflevector <1 x half> %862, <1 x half> %864, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !28
  %924 = shufflevector <4 x half> %923, <4 x half> %867, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !28
  %925 = shufflevector <4 x half> %924, <4 x half> %870, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !28
  store <4 x half> %925, ptr addrspace(3) %451, align 8, !dbg !28
  %926 = shufflevector <1 x half> %872, <1 x half> %874, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !28
  %927 = shufflevector <4 x half> %926, <4 x half> %877, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !28
  %928 = shufflevector <4 x half> %927, <4 x half> %880, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !28
  store <4 x half> %928, ptr addrspace(3) %452, align 8, !dbg !28
  fence syncscope("workgroup") release, !dbg !28
  tail call void @llvm.amdgcn.s.barrier(), !dbg !28
  fence syncscope("workgroup") acquire, !dbg !28
  %929 = load <4 x half>, ptr addrspace(3) %551, align 8, !dbg !28
  %930 = load <4 x half>, ptr addrspace(3) %553, align 8, !dbg !28
  %931 = load <4 x half>, ptr addrspace(3) %555, align 8, !dbg !28
  %932 = load <4 x half>, ptr addrspace(3) %557, align 8, !dbg !28
  %933 = load <4 x half>, ptr addrspace(3) %560, align 8, !dbg !28
  %934 = load <4 x half>, ptr addrspace(3) %563, align 8, !dbg !28
  %935 = load <4 x half>, ptr addrspace(3) %566, align 8, !dbg !28
  %936 = load <4 x half>, ptr addrspace(3) %569, align 8, !dbg !28
  %937 = load <4 x half>, ptr addrspace(3) %572, align 8, !dbg !28
  %938 = load <4 x half>, ptr addrspace(3) %575, align 8, !dbg !28
  %939 = load <4 x half>, ptr addrspace(3) %578, align 8, !dbg !28
  %940 = load <4 x half>, ptr addrspace(3) %581, align 8, !dbg !28
  %941 = load <4 x half>, ptr addrspace(3) %584, align 8, !dbg !28
  %942 = load <4 x half>, ptr addrspace(3) %587, align 8, !dbg !28
  %943 = load <4 x half>, ptr addrspace(3) %590, align 8, !dbg !28
  %944 = load <4 x half>, ptr addrspace(3) %593, align 8, !dbg !28
  %945 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %929, <4 x half> %475, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !33
  %946 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %930, <4 x half> %478, <16 x float> %945, i32 0, i32 0, i32 0), !dbg !33
  %947 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %931, <4 x half> %481, <16 x float> %946, i32 0, i32 0, i32 0), !dbg !33
  %948 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %932, <4 x half> %484, <16 x float> %947, i32 0, i32 0, i32 0), !dbg !33
  %949 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %933, <4 x half> %475, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !33
  %950 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %934, <4 x half> %478, <16 x float> %949, i32 0, i32 0, i32 0), !dbg !33
  %951 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %935, <4 x half> %481, <16 x float> %950, i32 0, i32 0, i32 0), !dbg !33
  %952 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %936, <4 x half> %484, <16 x float> %951, i32 0, i32 0, i32 0), !dbg !33
  %953 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %937, <4 x half> %475, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !33
  %954 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %938, <4 x half> %478, <16 x float> %953, i32 0, i32 0, i32 0), !dbg !33
  %955 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %939, <4 x half> %481, <16 x float> %954, i32 0, i32 0, i32 0), !dbg !33
  %956 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %940, <4 x half> %484, <16 x float> %955, i32 0, i32 0, i32 0), !dbg !33
  %957 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %941, <4 x half> %475, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !33
  %958 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %942, <4 x half> %478, <16 x float> %957, i32 0, i32 0, i32 0), !dbg !33
  %959 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %943, <4 x half> %481, <16 x float> %958, i32 0, i32 0, i32 0), !dbg !33
  %960 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %944, <4 x half> %484, <16 x float> %959, i32 0, i32 0, i32 0), !dbg !33
  %961 = load <4 x half>, ptr addrspace(3) %594, align 8, !dbg !28
  %962 = load <4 x half>, ptr addrspace(3) %595, align 8, !dbg !28
  %963 = load <4 x half>, ptr addrspace(3) %596, align 8, !dbg !28
  %964 = load <4 x half>, ptr addrspace(3) %597, align 8, !dbg !28
  %965 = load <4 x half>, ptr addrspace(3) %598, align 8, !dbg !28
  %966 = load <4 x half>, ptr addrspace(3) %599, align 8, !dbg !28
  %967 = load <4 x half>, ptr addrspace(3) %600, align 8, !dbg !28
  %968 = load <4 x half>, ptr addrspace(3) %601, align 8, !dbg !28
  %969 = load <4 x half>, ptr addrspace(3) %602, align 8, !dbg !28
  %970 = load <4 x half>, ptr addrspace(3) %603, align 8, !dbg !28
  %971 = load <4 x half>, ptr addrspace(3) %604, align 8, !dbg !28
  %972 = load <4 x half>, ptr addrspace(3) %605, align 8, !dbg !28
  %973 = load <4 x half>, ptr addrspace(3) %606, align 8, !dbg !28
  %974 = load <4 x half>, ptr addrspace(3) %607, align 8, !dbg !28
  %975 = load <4 x half>, ptr addrspace(3) %608, align 8, !dbg !28
  %976 = load <4 x half>, ptr addrspace(3) %609, align 8, !dbg !28
  %977 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %961, <4 x half> %486, <16 x float> %948, i32 0, i32 0, i32 0), !dbg !33
  %978 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %962, <4 x half> %488, <16 x float> %977, i32 0, i32 0, i32 0), !dbg !33
  %979 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %963, <4 x half> %490, <16 x float> %978, i32 0, i32 0, i32 0), !dbg !33
  %980 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %964, <4 x half> %492, <16 x float> %979, i32 0, i32 0, i32 0), !dbg !33
  %981 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %965, <4 x half> %486, <16 x float> %952, i32 0, i32 0, i32 0), !dbg !33
  %982 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %966, <4 x half> %488, <16 x float> %981, i32 0, i32 0, i32 0), !dbg !33
  %983 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %967, <4 x half> %490, <16 x float> %982, i32 0, i32 0, i32 0), !dbg !33
  %984 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %968, <4 x half> %492, <16 x float> %983, i32 0, i32 0, i32 0), !dbg !33
  %985 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %969, <4 x half> %486, <16 x float> %956, i32 0, i32 0, i32 0), !dbg !33
  %986 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %970, <4 x half> %488, <16 x float> %985, i32 0, i32 0, i32 0), !dbg !33
  %987 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %971, <4 x half> %490, <16 x float> %986, i32 0, i32 0, i32 0), !dbg !33
  %988 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %972, <4 x half> %492, <16 x float> %987, i32 0, i32 0, i32 0), !dbg !33
  %989 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %973, <4 x half> %486, <16 x float> %960, i32 0, i32 0, i32 0), !dbg !33
  %990 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %974, <4 x half> %488, <16 x float> %989, i32 0, i32 0, i32 0), !dbg !33
  %991 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %975, <4 x half> %490, <16 x float> %990, i32 0, i32 0, i32 0), !dbg !33
  %992 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %976, <4 x half> %492, <16 x float> %991, i32 0, i32 0, i32 0), !dbg !33
  %993 = load <4 x half>, ptr addrspace(3) %610, align 8, !dbg !28
  %994 = load <4 x half>, ptr addrspace(3) %611, align 8, !dbg !28
  %995 = load <4 x half>, ptr addrspace(3) %612, align 8, !dbg !28
  %996 = load <4 x half>, ptr addrspace(3) %613, align 8, !dbg !28
  %997 = load <4 x half>, ptr addrspace(3) %614, align 8, !dbg !28
  %998 = load <4 x half>, ptr addrspace(3) %615, align 8, !dbg !28
  %999 = load <4 x half>, ptr addrspace(3) %616, align 8, !dbg !28
  %1000 = load <4 x half>, ptr addrspace(3) %617, align 8, !dbg !28
  %1001 = load <4 x half>, ptr addrspace(3) %618, align 8, !dbg !28
  %1002 = load <4 x half>, ptr addrspace(3) %619, align 8, !dbg !28
  %1003 = load <4 x half>, ptr addrspace(3) %620, align 8, !dbg !28
  %1004 = load <4 x half>, ptr addrspace(3) %621, align 8, !dbg !28
  %1005 = load <4 x half>, ptr addrspace(3) %622, align 8, !dbg !28
  %1006 = load <4 x half>, ptr addrspace(3) %623, align 8, !dbg !28
  %1007 = load <4 x half>, ptr addrspace(3) %624, align 8, !dbg !28
  %1008 = load <4 x half>, ptr addrspace(3) %625, align 8, !dbg !28
  %1009 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %993, <4 x half> %494, <16 x float> %980, i32 0, i32 0, i32 0), !dbg !33
  %1010 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %994, <4 x half> %496, <16 x float> %1009, i32 0, i32 0, i32 0), !dbg !33
  %1011 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %995, <4 x half> %498, <16 x float> %1010, i32 0, i32 0, i32 0), !dbg !33
  %1012 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %996, <4 x half> %500, <16 x float> %1011, i32 0, i32 0, i32 0), !dbg !33
  %1013 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %997, <4 x half> %494, <16 x float> %984, i32 0, i32 0, i32 0), !dbg !33
  %1014 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %998, <4 x half> %496, <16 x float> %1013, i32 0, i32 0, i32 0), !dbg !33
  %1015 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %999, <4 x half> %498, <16 x float> %1014, i32 0, i32 0, i32 0), !dbg !33
  %1016 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1000, <4 x half> %500, <16 x float> %1015, i32 0, i32 0, i32 0), !dbg !33
  %1017 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1001, <4 x half> %494, <16 x float> %988, i32 0, i32 0, i32 0), !dbg !33
  %1018 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1002, <4 x half> %496, <16 x float> %1017, i32 0, i32 0, i32 0), !dbg !33
  %1019 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1003, <4 x half> %498, <16 x float> %1018, i32 0, i32 0, i32 0), !dbg !33
  %1020 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1004, <4 x half> %500, <16 x float> %1019, i32 0, i32 0, i32 0), !dbg !33
  %1021 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1005, <4 x half> %494, <16 x float> %992, i32 0, i32 0, i32 0), !dbg !33
  %1022 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1006, <4 x half> %496, <16 x float> %1021, i32 0, i32 0, i32 0), !dbg !33
  %1023 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1007, <4 x half> %498, <16 x float> %1022, i32 0, i32 0, i32 0), !dbg !33
  %1024 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1008, <4 x half> %500, <16 x float> %1023, i32 0, i32 0, i32 0), !dbg !33
  %1025 = load <4 x half>, ptr addrspace(3) %626, align 8, !dbg !28
  %1026 = load <4 x half>, ptr addrspace(3) %627, align 8, !dbg !28
  %1027 = load <4 x half>, ptr addrspace(3) %628, align 8, !dbg !28
  %1028 = load <4 x half>, ptr addrspace(3) %629, align 8, !dbg !28
  %1029 = load <4 x half>, ptr addrspace(3) %630, align 8, !dbg !28
  %1030 = load <4 x half>, ptr addrspace(3) %631, align 8, !dbg !28
  %1031 = load <4 x half>, ptr addrspace(3) %632, align 8, !dbg !28
  %1032 = load <4 x half>, ptr addrspace(3) %633, align 8, !dbg !28
  %1033 = load <4 x half>, ptr addrspace(3) %634, align 8, !dbg !28
  %1034 = load <4 x half>, ptr addrspace(3) %635, align 8, !dbg !28
  %1035 = load <4 x half>, ptr addrspace(3) %636, align 8, !dbg !28
  %1036 = load <4 x half>, ptr addrspace(3) %637, align 8, !dbg !28
  %1037 = load <4 x half>, ptr addrspace(3) %638, align 8, !dbg !28
  %1038 = load <4 x half>, ptr addrspace(3) %639, align 8, !dbg !28
  %1039 = load <4 x half>, ptr addrspace(3) %640, align 8, !dbg !28
  %1040 = load <4 x half>, ptr addrspace(3) %641, align 8, !dbg !28
  %1041 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1025, <4 x half> %502, <16 x float> %1012, i32 0, i32 0, i32 0), !dbg !33
  %1042 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1026, <4 x half> %504, <16 x float> %1041, i32 0, i32 0, i32 0), !dbg !33
  %1043 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1027, <4 x half> %506, <16 x float> %1042, i32 0, i32 0, i32 0), !dbg !33
  %1044 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1028, <4 x half> %508, <16 x float> %1043, i32 0, i32 0, i32 0), !dbg !33
  %1045 = extractelement <16 x float> %1044, i64 0, !dbg !33
  %1046 = extractelement <16 x float> %1044, i64 1, !dbg !33
  %1047 = extractelement <16 x float> %1044, i64 2, !dbg !33
  %1048 = extractelement <16 x float> %1044, i64 3, !dbg !33
  %1049 = extractelement <16 x float> %1044, i64 4, !dbg !33
  %1050 = extractelement <16 x float> %1044, i64 5, !dbg !33
  %1051 = extractelement <16 x float> %1044, i64 6, !dbg !33
  %1052 = extractelement <16 x float> %1044, i64 7, !dbg !33
  %1053 = extractelement <16 x float> %1044, i64 8, !dbg !33
  %1054 = extractelement <16 x float> %1044, i64 9, !dbg !33
  %1055 = extractelement <16 x float> %1044, i64 10, !dbg !33
  %1056 = extractelement <16 x float> %1044, i64 11, !dbg !33
  %1057 = extractelement <16 x float> %1044, i64 12, !dbg !33
  %1058 = extractelement <16 x float> %1044, i64 13, !dbg !33
  %1059 = extractelement <16 x float> %1044, i64 14, !dbg !33
  %1060 = extractelement <16 x float> %1044, i64 15, !dbg !33
  %1061 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1029, <4 x half> %502, <16 x float> %1016, i32 0, i32 0, i32 0), !dbg !33
  %1062 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1030, <4 x half> %504, <16 x float> %1061, i32 0, i32 0, i32 0), !dbg !33
  %1063 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1031, <4 x half> %506, <16 x float> %1062, i32 0, i32 0, i32 0), !dbg !33
  %1064 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1032, <4 x half> %508, <16 x float> %1063, i32 0, i32 0, i32 0), !dbg !33
  %1065 = extractelement <16 x float> %1064, i64 0, !dbg !33
  %1066 = extractelement <16 x float> %1064, i64 1, !dbg !33
  %1067 = extractelement <16 x float> %1064, i64 2, !dbg !33
  %1068 = extractelement <16 x float> %1064, i64 3, !dbg !33
  %1069 = extractelement <16 x float> %1064, i64 4, !dbg !33
  %1070 = extractelement <16 x float> %1064, i64 5, !dbg !33
  %1071 = extractelement <16 x float> %1064, i64 6, !dbg !33
  %1072 = extractelement <16 x float> %1064, i64 7, !dbg !33
  %1073 = extractelement <16 x float> %1064, i64 8, !dbg !33
  %1074 = extractelement <16 x float> %1064, i64 9, !dbg !33
  %1075 = extractelement <16 x float> %1064, i64 10, !dbg !33
  %1076 = extractelement <16 x float> %1064, i64 11, !dbg !33
  %1077 = extractelement <16 x float> %1064, i64 12, !dbg !33
  %1078 = extractelement <16 x float> %1064, i64 13, !dbg !33
  %1079 = extractelement <16 x float> %1064, i64 14, !dbg !33
  %1080 = extractelement <16 x float> %1064, i64 15, !dbg !33
  %1081 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1033, <4 x half> %502, <16 x float> %1020, i32 0, i32 0, i32 0), !dbg !33
  %1082 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1034, <4 x half> %504, <16 x float> %1081, i32 0, i32 0, i32 0), !dbg !33
  %1083 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1035, <4 x half> %506, <16 x float> %1082, i32 0, i32 0, i32 0), !dbg !33
  %1084 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1036, <4 x half> %508, <16 x float> %1083, i32 0, i32 0, i32 0), !dbg !33
  %1085 = extractelement <16 x float> %1084, i64 0, !dbg !33
  %1086 = extractelement <16 x float> %1084, i64 1, !dbg !33
  %1087 = extractelement <16 x float> %1084, i64 2, !dbg !33
  %1088 = extractelement <16 x float> %1084, i64 3, !dbg !33
  %1089 = extractelement <16 x float> %1084, i64 4, !dbg !33
  %1090 = extractelement <16 x float> %1084, i64 5, !dbg !33
  %1091 = extractelement <16 x float> %1084, i64 6, !dbg !33
  %1092 = extractelement <16 x float> %1084, i64 7, !dbg !33
  %1093 = extractelement <16 x float> %1084, i64 8, !dbg !33
  %1094 = extractelement <16 x float> %1084, i64 9, !dbg !33
  %1095 = extractelement <16 x float> %1084, i64 10, !dbg !33
  %1096 = extractelement <16 x float> %1084, i64 11, !dbg !33
  %1097 = extractelement <16 x float> %1084, i64 12, !dbg !33
  %1098 = extractelement <16 x float> %1084, i64 13, !dbg !33
  %1099 = extractelement <16 x float> %1084, i64 14, !dbg !33
  %1100 = extractelement <16 x float> %1084, i64 15, !dbg !33
  %1101 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1037, <4 x half> %502, <16 x float> %1024, i32 0, i32 0, i32 0), !dbg !33
  %1102 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1038, <4 x half> %504, <16 x float> %1101, i32 0, i32 0, i32 0), !dbg !33
  %1103 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1039, <4 x half> %506, <16 x float> %1102, i32 0, i32 0, i32 0), !dbg !33
  %1104 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1040, <4 x half> %508, <16 x float> %1103, i32 0, i32 0, i32 0), !dbg !33
  %1105 = extractelement <16 x float> %1104, i64 0, !dbg !33
  %1106 = extractelement <16 x float> %1104, i64 1, !dbg !33
  %1107 = extractelement <16 x float> %1104, i64 2, !dbg !33
  %1108 = extractelement <16 x float> %1104, i64 3, !dbg !33
  %1109 = extractelement <16 x float> %1104, i64 4, !dbg !33
  %1110 = extractelement <16 x float> %1104, i64 5, !dbg !33
  %1111 = extractelement <16 x float> %1104, i64 6, !dbg !33
  %1112 = extractelement <16 x float> %1104, i64 7, !dbg !33
  %1113 = extractelement <16 x float> %1104, i64 8, !dbg !33
  %1114 = extractelement <16 x float> %1104, i64 9, !dbg !33
  %1115 = extractelement <16 x float> %1104, i64 10, !dbg !33
  %1116 = extractelement <16 x float> %1104, i64 11, !dbg !33
  %1117 = extractelement <16 x float> %1104, i64 12, !dbg !33
  %1118 = extractelement <16 x float> %1104, i64 13, !dbg !33
  %1119 = extractelement <16 x float> %1104, i64 14, !dbg !33
  %1120 = extractelement <16 x float> %1104, i64 15, !dbg !33
  %1121 = tail call float @llvm.maxnum.f32(float %1045, float %1046), !dbg !35
  %1122 = tail call float @llvm.maxnum.f32(float %1121, float %1047), !dbg !35
  %1123 = tail call float @llvm.maxnum.f32(float %1122, float %1048), !dbg !35
  %1124 = tail call float @llvm.maxnum.f32(float %1123, float %1049), !dbg !35
  %1125 = tail call float @llvm.maxnum.f32(float %1124, float %1050), !dbg !35
  %1126 = tail call float @llvm.maxnum.f32(float %1125, float %1051), !dbg !35
  %1127 = tail call float @llvm.maxnum.f32(float %1126, float %1052), !dbg !35
  %1128 = tail call float @llvm.maxnum.f32(float %1127, float %1053), !dbg !35
  %1129 = tail call float @llvm.maxnum.f32(float %1128, float %1054), !dbg !35
  %1130 = tail call float @llvm.maxnum.f32(float %1129, float %1055), !dbg !35
  %1131 = tail call float @llvm.maxnum.f32(float %1130, float %1056), !dbg !35
  %1132 = tail call float @llvm.maxnum.f32(float %1131, float %1057), !dbg !35
  %1133 = tail call float @llvm.maxnum.f32(float %1132, float %1058), !dbg !35
  %1134 = tail call float @llvm.maxnum.f32(float %1133, float %1059), !dbg !35
  %1135 = tail call float @llvm.maxnum.f32(float %1134, float %1060), !dbg !35
  %1136 = tail call float @llvm.maxnum.f32(float %1135, float %1065), !dbg !35
  %1137 = tail call float @llvm.maxnum.f32(float %1136, float %1066), !dbg !35
  %1138 = tail call float @llvm.maxnum.f32(float %1137, float %1067), !dbg !35
  %1139 = tail call float @llvm.maxnum.f32(float %1138, float %1068), !dbg !35
  %1140 = tail call float @llvm.maxnum.f32(float %1139, float %1069), !dbg !35
  %1141 = tail call float @llvm.maxnum.f32(float %1140, float %1070), !dbg !35
  %1142 = tail call float @llvm.maxnum.f32(float %1141, float %1071), !dbg !35
  %1143 = tail call float @llvm.maxnum.f32(float %1142, float %1072), !dbg !35
  %1144 = tail call float @llvm.maxnum.f32(float %1143, float %1073), !dbg !35
  %1145 = tail call float @llvm.maxnum.f32(float %1144, float %1074), !dbg !35
  %1146 = tail call float @llvm.maxnum.f32(float %1145, float %1075), !dbg !35
  %1147 = tail call float @llvm.maxnum.f32(float %1146, float %1076), !dbg !35
  %1148 = tail call float @llvm.maxnum.f32(float %1147, float %1077), !dbg !35
  %1149 = tail call float @llvm.maxnum.f32(float %1148, float %1078), !dbg !35
  %1150 = tail call float @llvm.maxnum.f32(float %1149, float %1079), !dbg !35
  %1151 = tail call float @llvm.maxnum.f32(float %1150, float %1080), !dbg !35
  %1152 = tail call float @llvm.maxnum.f32(float %1151, float %1085), !dbg !35
  %1153 = tail call float @llvm.maxnum.f32(float %1152, float %1086), !dbg !35
  %1154 = tail call float @llvm.maxnum.f32(float %1153, float %1087), !dbg !35
  %1155 = tail call float @llvm.maxnum.f32(float %1154, float %1088), !dbg !35
  %1156 = tail call float @llvm.maxnum.f32(float %1155, float %1089), !dbg !35
  %1157 = tail call float @llvm.maxnum.f32(float %1156, float %1090), !dbg !35
  %1158 = tail call float @llvm.maxnum.f32(float %1157, float %1091), !dbg !35
  %1159 = tail call float @llvm.maxnum.f32(float %1158, float %1092), !dbg !35
  %1160 = tail call float @llvm.maxnum.f32(float %1159, float %1093), !dbg !35
  %1161 = tail call float @llvm.maxnum.f32(float %1160, float %1094), !dbg !35
  %1162 = tail call float @llvm.maxnum.f32(float %1161, float %1095), !dbg !35
  %1163 = tail call float @llvm.maxnum.f32(float %1162, float %1096), !dbg !35
  %1164 = tail call float @llvm.maxnum.f32(float %1163, float %1097), !dbg !35
  %1165 = tail call float @llvm.maxnum.f32(float %1164, float %1098), !dbg !35
  %1166 = tail call float @llvm.maxnum.f32(float %1165, float %1099), !dbg !35
  %1167 = tail call float @llvm.maxnum.f32(float %1166, float %1100), !dbg !35
  %1168 = tail call float @llvm.maxnum.f32(float %1167, float %1105), !dbg !35
  %1169 = tail call float @llvm.maxnum.f32(float %1168, float %1106), !dbg !35
  %1170 = tail call float @llvm.maxnum.f32(float %1169, float %1107), !dbg !35
  %1171 = tail call float @llvm.maxnum.f32(float %1170, float %1108), !dbg !35
  %1172 = tail call float @llvm.maxnum.f32(float %1171, float %1109), !dbg !35
  %1173 = tail call float @llvm.maxnum.f32(float %1172, float %1110), !dbg !35
  %1174 = tail call float @llvm.maxnum.f32(float %1173, float %1111), !dbg !35
  %1175 = tail call float @llvm.maxnum.f32(float %1174, float %1112), !dbg !35
  %1176 = tail call float @llvm.maxnum.f32(float %1175, float %1113), !dbg !35
  %1177 = tail call float @llvm.maxnum.f32(float %1176, float %1114), !dbg !35
  %1178 = tail call float @llvm.maxnum.f32(float %1177, float %1115), !dbg !35
  %1179 = tail call float @llvm.maxnum.f32(float %1178, float %1116), !dbg !35
  %1180 = tail call float @llvm.maxnum.f32(float %1179, float %1117), !dbg !35
  %1181 = tail call float @llvm.maxnum.f32(float %1180, float %1118), !dbg !35
  %1182 = tail call float @llvm.maxnum.f32(float %1181, float %1119), !dbg !35
  %1183 = tail call float @llvm.maxnum.f32(float %1182, float %1120), !dbg !35
  %1184 = bitcast float %1183 to i32, !dbg !42
  %1185 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %643, i32 %1184), !dbg !42
  %1186 = bitcast i32 %1185 to float, !dbg !42
  %1187 = tail call float @llvm.maxnum.f32(float %1183, float %1186), !dbg !35
  %1188 = tail call float @llvm.maxnum.f32(float %646, float %1187), !dbg !45
  %1189 = shufflevector <16 x float> %1104, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !47
  %1190 = insertelement <2 x float> poison, float %1188, i64 0, !dbg !47
  %1191 = shufflevector <2 x float> %1190, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !47
  %1192 = fsub <2 x float> %1189, %1191, !dbg !47
  %1193 = fcmp olt <2 x float> %1192, <float -1.260000e+02, float -1.260000e+02>, !dbg !48
  %1194 = select <2 x i1> %1193, <2 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000>, <2 x float> <float 1.000000e+00, float 1.000000e+00>, !dbg !48
  %1195 = select <2 x i1> %1193, <2 x float> <float 6.400000e+01, float 6.400000e+01>, <2 x float> zeroinitializer, !dbg !48
  %1196 = fadd <2 x float> %1192, %1195, !dbg !48
  %1197 = tail call <2 x float> @llvm.exp2.v2f32(<2 x float> %1196), !dbg !48
  %1198 = fmul <2 x float> %1194, %1197, !dbg !48
  %1199 = shufflevector <16 x float> %1104, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !47
  %1200 = fsub <2 x float> %1199, %1191, !dbg !47
  %1201 = fcmp olt <2 x float> %1200, <float -1.260000e+02, float -1.260000e+02>, !dbg !48
  %1202 = select <2 x i1> %1201, <2 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000>, <2 x float> <float 1.000000e+00, float 1.000000e+00>, !dbg !48
  %1203 = select <2 x i1> %1201, <2 x float> <float 6.400000e+01, float 6.400000e+01>, <2 x float> zeroinitializer, !dbg !48
  %1204 = fadd <2 x float> %1200, %1203, !dbg !48
  %1205 = tail call <2 x float> @llvm.exp2.v2f32(<2 x float> %1204), !dbg !48
  %1206 = fmul <2 x float> %1202, %1205, !dbg !48
  %1207 = shufflevector <16 x float> %1104, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !47
  %1208 = fsub <2 x float> %1207, %1191, !dbg !47
  %1209 = fcmp olt <2 x float> %1208, <float -1.260000e+02, float -1.260000e+02>, !dbg !48
  %1210 = select <2 x i1> %1209, <2 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000>, <2 x float> <float 1.000000e+00, float 1.000000e+00>, !dbg !48
  %1211 = select <2 x i1> %1209, <2 x float> <float 6.400000e+01, float 6.400000e+01>, <2 x float> zeroinitializer, !dbg !48
  %1212 = fadd <2 x float> %1208, %1211, !dbg !48
  %1213 = tail call <2 x float> @llvm.exp2.v2f32(<2 x float> %1212), !dbg !48
  %1214 = fmul <2 x float> %1210, %1213, !dbg !48
  %1215 = shufflevector <16 x float> %1104, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !47
  %1216 = fsub <2 x float> %1215, %1191, !dbg !47
  %1217 = fcmp olt <2 x float> %1216, <float -1.260000e+02, float -1.260000e+02>, !dbg !48
  %1218 = select <2 x i1> %1217, <2 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000>, <2 x float> <float 1.000000e+00, float 1.000000e+00>, !dbg !48
  %1219 = select <2 x i1> %1217, <2 x float> <float 6.400000e+01, float 6.400000e+01>, <2 x float> zeroinitializer, !dbg !48
  %1220 = fadd <2 x float> %1216, %1219, !dbg !48
  %1221 = tail call <2 x float> @llvm.exp2.v2f32(<2 x float> %1220), !dbg !48
  %1222 = fmul <2 x float> %1218, %1221, !dbg !48
  %1223 = shufflevector <16 x float> %1104, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !47
  %1224 = fsub <2 x float> %1223, %1191, !dbg !47
  %1225 = fcmp olt <2 x float> %1224, <float -1.260000e+02, float -1.260000e+02>, !dbg !48
  %1226 = select <2 x i1> %1225, <2 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000>, <2 x float> <float 1.000000e+00, float 1.000000e+00>, !dbg !48
  %1227 = select <2 x i1> %1225, <2 x float> <float 6.400000e+01, float 6.400000e+01>, <2 x float> zeroinitializer, !dbg !48
  %1228 = fadd <2 x float> %1224, %1227, !dbg !48
  %1229 = tail call <2 x float> @llvm.exp2.v2f32(<2 x float> %1228), !dbg !48
  %1230 = fmul <2 x float> %1226, %1229, !dbg !48
  %1231 = shufflevector <16 x float> %1104, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !47
  %1232 = fsub <2 x float> %1231, %1191, !dbg !47
  %1233 = fcmp olt <2 x float> %1232, <float -1.260000e+02, float -1.260000e+02>, !dbg !48
  %1234 = select <2 x i1> %1233, <2 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000>, <2 x float> <float 1.000000e+00, float 1.000000e+00>, !dbg !48
  %1235 = select <2 x i1> %1233, <2 x float> <float 6.400000e+01, float 6.400000e+01>, <2 x float> zeroinitializer, !dbg !48
  %1236 = fadd <2 x float> %1232, %1235, !dbg !48
  %1237 = tail call <2 x float> @llvm.exp2.v2f32(<2 x float> %1236), !dbg !48
  %1238 = fmul <2 x float> %1234, %1237, !dbg !48
  %1239 = fsub float %646, %1188, !dbg !49
  %1240 = fcmp olt float %1239, -1.260000e+02, !dbg !50
  %1241 = select i1 %1240, float 0x3BF0000000000000, float 1.000000e+00, !dbg !50
  %1242 = select i1 %1240, float 6.400000e+01, float 0.000000e+00, !dbg !50
  %1243 = fadd float %1239, %1242, !dbg !50
  %1244 = tail call float @llvm.exp2.f32(float %1243), !dbg !50
  %1245 = fmul float %1241, %1244, !dbg !50
  %1246 = insertelement <16 x float> poison, float %1245, i64 0, !dbg !51
  %1247 = shufflevector <16 x float> %1246, <16 x float> poison, <16 x i32> zeroinitializer, !dbg !51
  %1248 = fmul <16 x float> %652, %1247, !dbg !51
  %1249 = fmul <16 x float> %651, %1247, !dbg !51
  %1250 = fmul <16 x float> %650, %1247, !dbg !51
  %1251 = fmul <16 x float> %649, %1247, !dbg !51
  %1252 = or i64 %645, %90, !dbg !31
  %1253 = or i64 %645, %91, !dbg !31
  %1254 = or i64 %645, %92, !dbg !31
  %1255 = or i64 %645, %93, !dbg !31
  %1256 = or i64 %645, %94, !dbg !31
  %1257 = or i64 %645, %95, !dbg !31
  %1258 = or i64 %645, %96, !dbg !31
  %1259 = or i64 %645, %97, !dbg !31
  %1260 = or i64 %645, %98, !dbg !31
  %1261 = or i64 %645, %99, !dbg !31
  %1262 = or i64 %645, %100, !dbg !31
  %1263 = or i64 %645, %101, !dbg !31
  %1264 = or i64 %645, %102, !dbg !31
  %1265 = or i64 %645, %103, !dbg !31
  %1266 = or i64 %645, %104, !dbg !31
  %1267 = or i64 %645, %105, !dbg !31
  %1268 = or i64 %645, %106, !dbg !31
  %1269 = or i64 %645, %107, !dbg !31
  %1270 = or i64 %645, %108, !dbg !31
  %1271 = or i64 %645, %109, !dbg !31
  %1272 = or i64 %645, %110, !dbg !31
  %1273 = or i64 %645, %111, !dbg !31
  %1274 = or i64 %645, %112, !dbg !31
  %1275 = or i64 %645, %113, !dbg !31
  %1276 = or i64 %645, %114, !dbg !31
  %1277 = or i64 %645, %115, !dbg !31
  %1278 = or i64 %645, %116, !dbg !31
  %1279 = or i64 %645, %117, !dbg !31
  %1280 = or i64 %645, %118, !dbg !31
  %1281 = or i64 %645, %119, !dbg !31
  %1282 = or i64 %645, %120, !dbg !31
  %1283 = or i64 %645, %121, !dbg !31
  %1284 = getelementptr half, ptr addrspace(1) %80, i64 %1252, !dbg !31
  %1285 = getelementptr half, ptr addrspace(1) %80, i64 %1253, !dbg !31
  %1286 = getelementptr half, ptr addrspace(1) %80, i64 %1254, !dbg !31
  %1287 = getelementptr half, ptr addrspace(1) %80, i64 %1255, !dbg !31
  %1288 = getelementptr half, ptr addrspace(1) %80, i64 %1256, !dbg !31
  %1289 = getelementptr half, ptr addrspace(1) %80, i64 %1257, !dbg !31
  %1290 = getelementptr half, ptr addrspace(1) %80, i64 %1258, !dbg !31
  %1291 = getelementptr half, ptr addrspace(1) %80, i64 %1259, !dbg !31
  %1292 = getelementptr half, ptr addrspace(1) %80, i64 %1260, !dbg !31
  %1293 = getelementptr half, ptr addrspace(1) %80, i64 %1261, !dbg !31
  %1294 = getelementptr half, ptr addrspace(1) %80, i64 %1262, !dbg !31
  %1295 = getelementptr half, ptr addrspace(1) %80, i64 %1263, !dbg !31
  %1296 = getelementptr half, ptr addrspace(1) %80, i64 %1264, !dbg !31
  %1297 = getelementptr half, ptr addrspace(1) %80, i64 %1265, !dbg !31
  %1298 = getelementptr half, ptr addrspace(1) %80, i64 %1266, !dbg !31
  %1299 = getelementptr half, ptr addrspace(1) %80, i64 %1267, !dbg !31
  %1300 = getelementptr half, ptr addrspace(1) %80, i64 %1268, !dbg !31
  %1301 = getelementptr half, ptr addrspace(1) %80, i64 %1269, !dbg !31
  %1302 = getelementptr half, ptr addrspace(1) %80, i64 %1270, !dbg !31
  %1303 = getelementptr half, ptr addrspace(1) %80, i64 %1271, !dbg !31
  %1304 = getelementptr half, ptr addrspace(1) %80, i64 %1272, !dbg !31
  %1305 = getelementptr half, ptr addrspace(1) %80, i64 %1273, !dbg !31
  %1306 = getelementptr half, ptr addrspace(1) %80, i64 %1274, !dbg !31
  %1307 = getelementptr half, ptr addrspace(1) %80, i64 %1275, !dbg !31
  %1308 = getelementptr half, ptr addrspace(1) %80, i64 %1276, !dbg !31
  %1309 = getelementptr half, ptr addrspace(1) %80, i64 %1277, !dbg !31
  %1310 = getelementptr half, ptr addrspace(1) %80, i64 %1278, !dbg !31
  %1311 = getelementptr half, ptr addrspace(1) %80, i64 %1279, !dbg !31
  %1312 = getelementptr half, ptr addrspace(1) %80, i64 %1280, !dbg !31
  %1313 = getelementptr half, ptr addrspace(1) %80, i64 %1281, !dbg !31
  %1314 = getelementptr half, ptr addrspace(1) %80, i64 %1282, !dbg !31
  %1315 = getelementptr half, ptr addrspace(1) %80, i64 %1283, !dbg !31
  %1316 = getelementptr half, ptr addrspace(1) %1284, i64 %542, !dbg !31
  %1317 = getelementptr half, ptr addrspace(1) %1285, i64 %542, !dbg !31
  %1318 = getelementptr half, ptr addrspace(1) %1286, i64 %542, !dbg !31
  %1319 = getelementptr half, ptr addrspace(1) %1287, i64 %542, !dbg !31
  %1320 = getelementptr half, ptr addrspace(1) %1288, i64 %542, !dbg !31
  %1321 = getelementptr half, ptr addrspace(1) %1289, i64 %542, !dbg !31
  %1322 = getelementptr half, ptr addrspace(1) %1290, i64 %542, !dbg !31
  %1323 = getelementptr half, ptr addrspace(1) %1291, i64 %542, !dbg !31
  %1324 = getelementptr half, ptr addrspace(1) %1292, i64 %542, !dbg !31
  %1325 = getelementptr half, ptr addrspace(1) %1293, i64 %542, !dbg !31
  %1326 = getelementptr half, ptr addrspace(1) %1294, i64 %542, !dbg !31
  %1327 = getelementptr half, ptr addrspace(1) %1295, i64 %542, !dbg !31
  %1328 = getelementptr half, ptr addrspace(1) %1296, i64 %542, !dbg !31
  %1329 = getelementptr half, ptr addrspace(1) %1297, i64 %542, !dbg !31
  %1330 = getelementptr half, ptr addrspace(1) %1298, i64 %542, !dbg !31
  %1331 = getelementptr half, ptr addrspace(1) %1299, i64 %542, !dbg !31
  %1332 = getelementptr half, ptr addrspace(1) %1300, i64 %542, !dbg !31
  %1333 = getelementptr half, ptr addrspace(1) %1301, i64 %542, !dbg !31
  %1334 = getelementptr half, ptr addrspace(1) %1302, i64 %542, !dbg !31
  %1335 = getelementptr half, ptr addrspace(1) %1303, i64 %542, !dbg !31
  %1336 = getelementptr half, ptr addrspace(1) %1304, i64 %542, !dbg !31
  %1337 = getelementptr half, ptr addrspace(1) %1305, i64 %542, !dbg !31
  %1338 = getelementptr half, ptr addrspace(1) %1306, i64 %542, !dbg !31
  %1339 = getelementptr half, ptr addrspace(1) %1307, i64 %542, !dbg !31
  %1340 = getelementptr half, ptr addrspace(1) %1308, i64 %542, !dbg !31
  %1341 = getelementptr half, ptr addrspace(1) %1309, i64 %542, !dbg !31
  %1342 = getelementptr half, ptr addrspace(1) %1310, i64 %542, !dbg !31
  %1343 = getelementptr half, ptr addrspace(1) %1311, i64 %542, !dbg !31
  %1344 = getelementptr half, ptr addrspace(1) %1312, i64 %542, !dbg !31
  %1345 = getelementptr half, ptr addrspace(1) %1313, i64 %542, !dbg !31
  %1346 = getelementptr half, ptr addrspace(1) %1314, i64 %542, !dbg !31
  %1347 = getelementptr half, ptr addrspace(1) %1315, i64 %542, !dbg !31
  %1348 = getelementptr half, ptr addrspace(1) %1284, i64 %543, !dbg !31
  %1349 = getelementptr half, ptr addrspace(1) %1285, i64 %543, !dbg !31
  %1350 = getelementptr half, ptr addrspace(1) %1286, i64 %543, !dbg !31
  %1351 = getelementptr half, ptr addrspace(1) %1287, i64 %543, !dbg !31
  %1352 = getelementptr half, ptr addrspace(1) %1288, i64 %543, !dbg !31
  %1353 = getelementptr half, ptr addrspace(1) %1289, i64 %543, !dbg !31
  %1354 = getelementptr half, ptr addrspace(1) %1290, i64 %543, !dbg !31
  %1355 = getelementptr half, ptr addrspace(1) %1291, i64 %543, !dbg !31
  %1356 = getelementptr half, ptr addrspace(1) %1292, i64 %543, !dbg !31
  %1357 = getelementptr half, ptr addrspace(1) %1293, i64 %543, !dbg !31
  %1358 = getelementptr half, ptr addrspace(1) %1294, i64 %543, !dbg !31
  %1359 = getelementptr half, ptr addrspace(1) %1295, i64 %543, !dbg !31
  %1360 = getelementptr half, ptr addrspace(1) %1296, i64 %543, !dbg !31
  %1361 = getelementptr half, ptr addrspace(1) %1297, i64 %543, !dbg !31
  %1362 = getelementptr half, ptr addrspace(1) %1298, i64 %543, !dbg !31
  %1363 = getelementptr half, ptr addrspace(1) %1299, i64 %543, !dbg !31
  %1364 = getelementptr half, ptr addrspace(1) %1300, i64 %543, !dbg !31
  %1365 = getelementptr half, ptr addrspace(1) %1301, i64 %543, !dbg !31
  %1366 = getelementptr half, ptr addrspace(1) %1302, i64 %543, !dbg !31
  %1367 = getelementptr half, ptr addrspace(1) %1303, i64 %543, !dbg !31
  %1368 = getelementptr half, ptr addrspace(1) %1304, i64 %543, !dbg !31
  %1369 = getelementptr half, ptr addrspace(1) %1305, i64 %543, !dbg !31
  %1370 = getelementptr half, ptr addrspace(1) %1306, i64 %543, !dbg !31
  %1371 = getelementptr half, ptr addrspace(1) %1307, i64 %543, !dbg !31
  %1372 = getelementptr half, ptr addrspace(1) %1308, i64 %543, !dbg !31
  %1373 = getelementptr half, ptr addrspace(1) %1309, i64 %543, !dbg !31
  %1374 = getelementptr half, ptr addrspace(1) %1310, i64 %543, !dbg !31
  %1375 = getelementptr half, ptr addrspace(1) %1311, i64 %543, !dbg !31
  %1376 = getelementptr half, ptr addrspace(1) %1312, i64 %543, !dbg !31
  %1377 = getelementptr half, ptr addrspace(1) %1313, i64 %543, !dbg !31
  %1378 = getelementptr half, ptr addrspace(1) %1314, i64 %543, !dbg !31
  %1379 = getelementptr half, ptr addrspace(1) %1315, i64 %543, !dbg !31
  %1380 = shufflevector <16 x float> %1044, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !47
  %1381 = insertelement <4 x float> poison, float %1188, i64 0, !dbg !47
  %1382 = shufflevector <4 x float> %1381, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !47
  %1383 = fsub <4 x float> %1380, %1382, !dbg !47
  %1384 = fcmp olt <4 x float> %1383, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !48
  %1385 = select <4 x i1> %1384, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !48
  %1386 = select <4 x i1> %1384, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !48
  %1387 = fadd <4 x float> %1383, %1386, !dbg !48
  %1388 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1387), !dbg !48
  %1389 = fmul <4 x float> %1385, %1388, !dbg !48
  %1390 = fptrunc <4 x float> %1389 to <4 x half>, !dbg !52
  %1391 = shufflevector <16 x float> %1044, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !47
  %1392 = fsub <4 x float> %1391, %1382, !dbg !47
  %1393 = fcmp olt <4 x float> %1392, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !48
  %1394 = select <4 x i1> %1393, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !48
  %1395 = select <4 x i1> %1393, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !48
  %1396 = fadd <4 x float> %1392, %1395, !dbg !48
  %1397 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1396), !dbg !48
  %1398 = fmul <4 x float> %1394, %1397, !dbg !48
  %1399 = fptrunc <4 x float> %1398 to <4 x half>, !dbg !52
  %1400 = shufflevector <16 x float> %1044, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>, !dbg !47
  %1401 = fsub <4 x float> %1400, %1382, !dbg !47
  %1402 = fcmp olt <4 x float> %1401, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !48
  %1403 = select <4 x i1> %1402, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !48
  %1404 = select <4 x i1> %1402, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !48
  %1405 = fadd <4 x float> %1401, %1404, !dbg !48
  %1406 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1405), !dbg !48
  %1407 = fmul <4 x float> %1403, %1406, !dbg !48
  %1408 = fptrunc <4 x float> %1407 to <4 x half>, !dbg !52
  %1409 = shufflevector <16 x float> %1044, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>, !dbg !47
  %1410 = fsub <4 x float> %1409, %1382, !dbg !47
  %1411 = fcmp olt <4 x float> %1410, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !48
  %1412 = select <4 x i1> %1411, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !48
  %1413 = select <4 x i1> %1411, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !48
  %1414 = fadd <4 x float> %1410, %1413, !dbg !48
  %1415 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1414), !dbg !48
  %1416 = fmul <4 x float> %1412, %1415, !dbg !48
  %1417 = fptrunc <4 x float> %1416 to <4 x half>, !dbg !52
  %1418 = shufflevector <16 x float> %1064, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !47
  %1419 = fsub <4 x float> %1418, %1382, !dbg !47
  %1420 = fcmp olt <4 x float> %1419, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !48
  %1421 = select <4 x i1> %1420, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !48
  %1422 = select <4 x i1> %1420, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !48
  %1423 = fadd <4 x float> %1419, %1422, !dbg !48
  %1424 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1423), !dbg !48
  %1425 = fmul <4 x float> %1421, %1424, !dbg !48
  %1426 = fptrunc <4 x float> %1425 to <4 x half>, !dbg !52
  %1427 = shufflevector <16 x float> %1064, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !47
  %1428 = fsub <4 x float> %1427, %1382, !dbg !47
  %1429 = fcmp olt <4 x float> %1428, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !48
  %1430 = select <4 x i1> %1429, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !48
  %1431 = select <4 x i1> %1429, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !48
  %1432 = fadd <4 x float> %1428, %1431, !dbg !48
  %1433 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1432), !dbg !48
  %1434 = fmul <4 x float> %1430, %1433, !dbg !48
  %1435 = fptrunc <4 x float> %1434 to <4 x half>, !dbg !52
  %1436 = shufflevector <16 x float> %1064, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>, !dbg !47
  %1437 = fsub <4 x float> %1436, %1382, !dbg !47
  %1438 = fcmp olt <4 x float> %1437, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !48
  %1439 = select <4 x i1> %1438, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !48
  %1440 = select <4 x i1> %1438, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !48
  %1441 = fadd <4 x float> %1437, %1440, !dbg !48
  %1442 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1441), !dbg !48
  %1443 = fmul <4 x float> %1439, %1442, !dbg !48
  %1444 = fptrunc <4 x float> %1443 to <4 x half>, !dbg !52
  %1445 = shufflevector <16 x float> %1064, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>, !dbg !47
  %1446 = fsub <4 x float> %1445, %1382, !dbg !47
  %1447 = fcmp olt <4 x float> %1446, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !48
  %1448 = select <4 x i1> %1447, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !48
  %1449 = select <4 x i1> %1447, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !48
  %1450 = fadd <4 x float> %1446, %1449, !dbg !48
  %1451 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1450), !dbg !48
  %1452 = fmul <4 x float> %1448, %1451, !dbg !48
  %1453 = fptrunc <4 x float> %1452 to <4 x half>, !dbg !52
  %1454 = shufflevector <16 x float> %1084, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !47
  %1455 = fsub <4 x float> %1454, %1382, !dbg !47
  %1456 = fcmp olt <4 x float> %1455, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !48
  %1457 = select <4 x i1> %1456, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !48
  %1458 = select <4 x i1> %1456, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !48
  %1459 = fadd <4 x float> %1455, %1458, !dbg !48
  %1460 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1459), !dbg !48
  %1461 = fmul <4 x float> %1457, %1460, !dbg !48
  %1462 = fptrunc <4 x float> %1461 to <4 x half>, !dbg !52
  %1463 = shufflevector <16 x float> %1084, <16 x float> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !47
  %1464 = fsub <4 x float> %1463, %1382, !dbg !47
  %1465 = fcmp olt <4 x float> %1464, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !48
  %1466 = select <4 x i1> %1465, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !48
  %1467 = select <4 x i1> %1465, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !48
  %1468 = fadd <4 x float> %1464, %1467, !dbg !48
  %1469 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1468), !dbg !48
  %1470 = fmul <4 x float> %1466, %1469, !dbg !48
  %1471 = fptrunc <4 x float> %1470 to <4 x half>, !dbg !52
  %1472 = shufflevector <16 x float> %1084, <16 x float> poison, <4 x i32> <i32 8, i32 9, i32 10, i32 11>, !dbg !47
  %1473 = fsub <4 x float> %1472, %1382, !dbg !47
  %1474 = fcmp olt <4 x float> %1473, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !48
  %1475 = select <4 x i1> %1474, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !48
  %1476 = select <4 x i1> %1474, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !48
  %1477 = fadd <4 x float> %1473, %1476, !dbg !48
  %1478 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1477), !dbg !48
  %1479 = fmul <4 x float> %1475, %1478, !dbg !48
  %1480 = fptrunc <4 x float> %1479 to <4 x half>, !dbg !52
  %1481 = shufflevector <16 x float> %1084, <16 x float> poison, <4 x i32> <i32 12, i32 13, i32 14, i32 15>, !dbg !47
  %1482 = fsub <4 x float> %1481, %1382, !dbg !47
  %1483 = fcmp olt <4 x float> %1482, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !48
  %1484 = select <4 x i1> %1483, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !48
  %1485 = select <4 x i1> %1483, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !48
  %1486 = fadd <4 x float> %1482, %1485, !dbg !48
  %1487 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1486), !dbg !48
  %1488 = fmul <4 x float> %1484, %1487, !dbg !48
  %1489 = fptrunc <4 x float> %1488 to <4 x half>, !dbg !52
  %1490 = shufflevector <16 x float> %1104, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !47
  %1491 = fsub <4 x float> %1490, %1382, !dbg !47
  %1492 = fcmp olt <4 x float> %1491, <float -1.260000e+02, float -1.260000e+02, float -1.260000e+02, float -1.260000e+02>, !dbg !48
  %1493 = select <4 x i1> %1492, <4 x float> <float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000, float 0x3BF0000000000000>, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, !dbg !48
  %1494 = select <4 x i1> %1492, <4 x float> <float 6.400000e+01, float 6.400000e+01, float 6.400000e+01, float 6.400000e+01>, <4 x float> zeroinitializer, !dbg !48
  %1495 = fadd <4 x float> %1491, %1494, !dbg !48
  %1496 = tail call <4 x float> @llvm.exp2.v4f32(<4 x float> %1495), !dbg !48
  %1497 = fmul <4 x float> %1493, %1496, !dbg !48
  %1498 = fptrunc <4 x float> %1497 to <4 x half>, !dbg !52
  %1499 = extractelement <2 x float> %1206, i64 0, !dbg !52
  %1500 = extractelement <2 x float> %1206, i64 1, !dbg !52
  %1501 = shufflevector <2 x float> %1206, <2 x float> poison, <4 x i32> <i32 poison, i32 poison, i32 0, i32 1>, !dbg !52
  %1502 = shufflevector <2 x float> %1198, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !52
  %1503 = shufflevector <4 x float> %1502, <4 x float> %1501, <4 x i32> <i32 0, i32 1, i32 6, i32 7>, !dbg !52
  %1504 = fptrunc <4 x float> %1503 to <4 x half>, !dbg !52
  %1505 = extractelement <2 x float> %1214, i64 0, !dbg !52
  %1506 = extractelement <2 x float> %1214, i64 1, !dbg !52
  %1507 = extractelement <2 x float> %1222, i64 0, !dbg !52
  %1508 = extractelement <2 x float> %1222, i64 1, !dbg !52
  %1509 = shufflevector <2 x float> %1214, <2 x float> %1222, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !52
  %1510 = fptrunc <4 x float> %1509 to <4 x half>, !dbg !52
  %1511 = extractelement <2 x float> %1230, i64 0, !dbg !52
  %1512 = extractelement <2 x float> %1230, i64 1, !dbg !52
  %1513 = extractelement <2 x float> %1238, i64 0, !dbg !52
  %1514 = extractelement <2 x float> %1238, i64 1, !dbg !52
  %1515 = shufflevector <2 x float> %1230, <2 x float> %1238, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !52
  %1516 = fptrunc <4 x float> %1515 to <4 x half>, !dbg !52
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  fence syncscope("workgroup") release, !dbg !52
  tail call void @llvm.amdgcn.s.barrier(), !dbg !52
  fence syncscope("workgroup") acquire, !dbg !52
  %1517 = addrspacecast ptr addrspace(1) %1316 to ptr, !dbg !31
  %1518 = load <1 x half>, ptr %1517, align 2, !dbg !31
  %1519 = addrspacecast ptr addrspace(1) %1317 to ptr, !dbg !31
  %1520 = load <1 x half>, ptr %1519, align 2, !dbg !31
  %1521 = addrspacecast ptr addrspace(1) %1318 to ptr, !dbg !31
  %1522 = load <1 x half>, ptr %1521, align 2, !dbg !31
  %1523 = shufflevector <1 x half> %1522, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1524 = addrspacecast ptr addrspace(1) %1319 to ptr, !dbg !31
  %1525 = load <1 x half>, ptr %1524, align 2, !dbg !31
  %1526 = shufflevector <1 x half> %1525, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1527 = addrspacecast ptr addrspace(1) %1320 to ptr, !dbg !31
  %1528 = load <1 x half>, ptr %1527, align 2, !dbg !31
  %1529 = addrspacecast ptr addrspace(1) %1321 to ptr, !dbg !31
  %1530 = load <1 x half>, ptr %1529, align 2, !dbg !31
  %1531 = addrspacecast ptr addrspace(1) %1322 to ptr, !dbg !31
  %1532 = load <1 x half>, ptr %1531, align 2, !dbg !31
  %1533 = shufflevector <1 x half> %1532, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1534 = addrspacecast ptr addrspace(1) %1323 to ptr, !dbg !31
  %1535 = load <1 x half>, ptr %1534, align 2, !dbg !31
  %1536 = shufflevector <1 x half> %1535, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1537 = addrspacecast ptr addrspace(1) %1348 to ptr, !dbg !31
  %1538 = load <1 x half>, ptr %1537, align 2, !dbg !31
  %1539 = addrspacecast ptr addrspace(1) %1349 to ptr, !dbg !31
  %1540 = load <1 x half>, ptr %1539, align 2, !dbg !31
  %1541 = addrspacecast ptr addrspace(1) %1350 to ptr, !dbg !31
  %1542 = load <1 x half>, ptr %1541, align 2, !dbg !31
  %1543 = shufflevector <1 x half> %1542, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1544 = addrspacecast ptr addrspace(1) %1351 to ptr, !dbg !31
  %1545 = load <1 x half>, ptr %1544, align 2, !dbg !31
  %1546 = shufflevector <1 x half> %1545, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1547 = addrspacecast ptr addrspace(1) %1352 to ptr, !dbg !31
  %1548 = load <1 x half>, ptr %1547, align 2, !dbg !31
  %1549 = addrspacecast ptr addrspace(1) %1353 to ptr, !dbg !31
  %1550 = load <1 x half>, ptr %1549, align 2, !dbg !31
  %1551 = addrspacecast ptr addrspace(1) %1354 to ptr, !dbg !31
  %1552 = load <1 x half>, ptr %1551, align 2, !dbg !31
  %1553 = shufflevector <1 x half> %1552, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1554 = addrspacecast ptr addrspace(1) %1355 to ptr, !dbg !31
  %1555 = load <1 x half>, ptr %1554, align 2, !dbg !31
  %1556 = shufflevector <1 x half> %1555, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1557 = addrspacecast ptr addrspace(1) %1324 to ptr, !dbg !31
  %1558 = load <1 x half>, ptr %1557, align 2, !dbg !31
  %1559 = addrspacecast ptr addrspace(1) %1325 to ptr, !dbg !31
  %1560 = load <1 x half>, ptr %1559, align 2, !dbg !31
  %1561 = addrspacecast ptr addrspace(1) %1326 to ptr, !dbg !31
  %1562 = load <1 x half>, ptr %1561, align 2, !dbg !31
  %1563 = shufflevector <1 x half> %1562, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1564 = addrspacecast ptr addrspace(1) %1327 to ptr, !dbg !31
  %1565 = load <1 x half>, ptr %1564, align 2, !dbg !31
  %1566 = shufflevector <1 x half> %1565, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1567 = addrspacecast ptr addrspace(1) %1328 to ptr, !dbg !31
  %1568 = load <1 x half>, ptr %1567, align 2, !dbg !31
  %1569 = addrspacecast ptr addrspace(1) %1329 to ptr, !dbg !31
  %1570 = load <1 x half>, ptr %1569, align 2, !dbg !31
  %1571 = addrspacecast ptr addrspace(1) %1330 to ptr, !dbg !31
  %1572 = load <1 x half>, ptr %1571, align 2, !dbg !31
  %1573 = shufflevector <1 x half> %1572, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1574 = addrspacecast ptr addrspace(1) %1331 to ptr, !dbg !31
  %1575 = load <1 x half>, ptr %1574, align 2, !dbg !31
  %1576 = shufflevector <1 x half> %1575, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1577 = addrspacecast ptr addrspace(1) %1356 to ptr, !dbg !31
  %1578 = load <1 x half>, ptr %1577, align 2, !dbg !31
  %1579 = addrspacecast ptr addrspace(1) %1357 to ptr, !dbg !31
  %1580 = load <1 x half>, ptr %1579, align 2, !dbg !31
  %1581 = addrspacecast ptr addrspace(1) %1358 to ptr, !dbg !31
  %1582 = load <1 x half>, ptr %1581, align 2, !dbg !31
  %1583 = shufflevector <1 x half> %1582, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1584 = addrspacecast ptr addrspace(1) %1359 to ptr, !dbg !31
  %1585 = load <1 x half>, ptr %1584, align 2, !dbg !31
  %1586 = shufflevector <1 x half> %1585, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1587 = addrspacecast ptr addrspace(1) %1360 to ptr, !dbg !31
  %1588 = load <1 x half>, ptr %1587, align 2, !dbg !31
  %1589 = addrspacecast ptr addrspace(1) %1361 to ptr, !dbg !31
  %1590 = load <1 x half>, ptr %1589, align 2, !dbg !31
  %1591 = addrspacecast ptr addrspace(1) %1362 to ptr, !dbg !31
  %1592 = load <1 x half>, ptr %1591, align 2, !dbg !31
  %1593 = shufflevector <1 x half> %1592, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1594 = addrspacecast ptr addrspace(1) %1363 to ptr, !dbg !31
  %1595 = load <1 x half>, ptr %1594, align 2, !dbg !31
  %1596 = shufflevector <1 x half> %1595, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1597 = addrspacecast ptr addrspace(1) %1332 to ptr, !dbg !31
  %1598 = load <1 x half>, ptr %1597, align 2, !dbg !31
  %1599 = addrspacecast ptr addrspace(1) %1333 to ptr, !dbg !31
  %1600 = load <1 x half>, ptr %1599, align 2, !dbg !31
  %1601 = addrspacecast ptr addrspace(1) %1334 to ptr, !dbg !31
  %1602 = load <1 x half>, ptr %1601, align 2, !dbg !31
  %1603 = shufflevector <1 x half> %1602, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1604 = addrspacecast ptr addrspace(1) %1335 to ptr, !dbg !31
  %1605 = load <1 x half>, ptr %1604, align 2, !dbg !31
  %1606 = shufflevector <1 x half> %1605, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1607 = addrspacecast ptr addrspace(1) %1336 to ptr, !dbg !31
  %1608 = load <1 x half>, ptr %1607, align 2, !dbg !31
  %1609 = addrspacecast ptr addrspace(1) %1337 to ptr, !dbg !31
  %1610 = load <1 x half>, ptr %1609, align 2, !dbg !31
  %1611 = addrspacecast ptr addrspace(1) %1338 to ptr, !dbg !31
  %1612 = load <1 x half>, ptr %1611, align 2, !dbg !31
  %1613 = shufflevector <1 x half> %1612, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1614 = addrspacecast ptr addrspace(1) %1339 to ptr, !dbg !31
  %1615 = load <1 x half>, ptr %1614, align 2, !dbg !31
  %1616 = shufflevector <1 x half> %1615, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1617 = addrspacecast ptr addrspace(1) %1364 to ptr, !dbg !31
  %1618 = load <1 x half>, ptr %1617, align 2, !dbg !31
  %1619 = addrspacecast ptr addrspace(1) %1365 to ptr, !dbg !31
  %1620 = load <1 x half>, ptr %1619, align 2, !dbg !31
  %1621 = addrspacecast ptr addrspace(1) %1366 to ptr, !dbg !31
  %1622 = load <1 x half>, ptr %1621, align 2, !dbg !31
  %1623 = shufflevector <1 x half> %1622, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1624 = addrspacecast ptr addrspace(1) %1367 to ptr, !dbg !31
  %1625 = load <1 x half>, ptr %1624, align 2, !dbg !31
  %1626 = shufflevector <1 x half> %1625, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1627 = addrspacecast ptr addrspace(1) %1368 to ptr, !dbg !31
  %1628 = load <1 x half>, ptr %1627, align 2, !dbg !31
  %1629 = addrspacecast ptr addrspace(1) %1369 to ptr, !dbg !31
  %1630 = load <1 x half>, ptr %1629, align 2, !dbg !31
  %1631 = addrspacecast ptr addrspace(1) %1370 to ptr, !dbg !31
  %1632 = load <1 x half>, ptr %1631, align 2, !dbg !31
  %1633 = shufflevector <1 x half> %1632, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1634 = addrspacecast ptr addrspace(1) %1371 to ptr, !dbg !31
  %1635 = load <1 x half>, ptr %1634, align 2, !dbg !31
  %1636 = shufflevector <1 x half> %1635, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1637 = addrspacecast ptr addrspace(1) %1340 to ptr, !dbg !31
  %1638 = load <1 x half>, ptr %1637, align 2, !dbg !31
  %1639 = addrspacecast ptr addrspace(1) %1341 to ptr, !dbg !31
  %1640 = load <1 x half>, ptr %1639, align 2, !dbg !31
  %1641 = addrspacecast ptr addrspace(1) %1342 to ptr, !dbg !31
  %1642 = load <1 x half>, ptr %1641, align 2, !dbg !31
  %1643 = shufflevector <1 x half> %1642, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1644 = addrspacecast ptr addrspace(1) %1343 to ptr, !dbg !31
  %1645 = load <1 x half>, ptr %1644, align 2, !dbg !31
  %1646 = shufflevector <1 x half> %1645, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1647 = addrspacecast ptr addrspace(1) %1344 to ptr, !dbg !31
  %1648 = load <1 x half>, ptr %1647, align 2, !dbg !31
  %1649 = addrspacecast ptr addrspace(1) %1345 to ptr, !dbg !31
  %1650 = load <1 x half>, ptr %1649, align 2, !dbg !31
  %1651 = addrspacecast ptr addrspace(1) %1346 to ptr, !dbg !31
  %1652 = load <1 x half>, ptr %1651, align 2, !dbg !31
  %1653 = shufflevector <1 x half> %1652, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1654 = addrspacecast ptr addrspace(1) %1347 to ptr, !dbg !31
  %1655 = load <1 x half>, ptr %1654, align 2, !dbg !31
  %1656 = shufflevector <1 x half> %1655, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1657 = addrspacecast ptr addrspace(1) %1372 to ptr, !dbg !31
  %1658 = load <1 x half>, ptr %1657, align 2, !dbg !31
  %1659 = addrspacecast ptr addrspace(1) %1373 to ptr, !dbg !31
  %1660 = load <1 x half>, ptr %1659, align 2, !dbg !31
  %1661 = addrspacecast ptr addrspace(1) %1374 to ptr, !dbg !31
  %1662 = load <1 x half>, ptr %1661, align 2, !dbg !31
  %1663 = shufflevector <1 x half> %1662, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1664 = addrspacecast ptr addrspace(1) %1375 to ptr, !dbg !31
  %1665 = load <1 x half>, ptr %1664, align 2, !dbg !31
  %1666 = shufflevector <1 x half> %1665, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1667 = addrspacecast ptr addrspace(1) %1376 to ptr, !dbg !31
  %1668 = load <1 x half>, ptr %1667, align 2, !dbg !31
  %1669 = addrspacecast ptr addrspace(1) %1377 to ptr, !dbg !31
  %1670 = load <1 x half>, ptr %1669, align 2, !dbg !31
  %1671 = addrspacecast ptr addrspace(1) %1378 to ptr, !dbg !31
  %1672 = load <1 x half>, ptr %1671, align 2, !dbg !31
  %1673 = shufflevector <1 x half> %1672, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  %1674 = addrspacecast ptr addrspace(1) %1379 to ptr, !dbg !31
  %1675 = load <1 x half>, ptr %1674, align 2, !dbg !31
  %1676 = shufflevector <1 x half> %1675, <1 x half> poison, <4 x i32> <i32 0, i32 poison, i32 poison, i32 poison>
  fence syncscope("workgroup") release, !dbg !31
  tail call void @llvm.amdgcn.s.barrier(), !dbg !31
  fence syncscope("workgroup") acquire, !dbg !31
  %1677 = shufflevector <1 x half> %1518, <1 x half> %1520, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !31
  %1678 = shufflevector <4 x half> %1677, <4 x half> %1523, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !31
  %1679 = shufflevector <4 x half> %1678, <4 x half> %1526, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !31
  store <4 x half> %1679, ptr addrspace(3) %434, align 8, !dbg !31
  %1680 = shufflevector <1 x half> %1528, <1 x half> %1530, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !31
  %1681 = shufflevector <4 x half> %1680, <4 x half> %1533, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !31
  %1682 = shufflevector <4 x half> %1681, <4 x half> %1536, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !31
  store <4 x half> %1682, ptr addrspace(3) %438, align 8, !dbg !31
  %1683 = shufflevector <1 x half> %1538, <1 x half> %1540, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !31
  %1684 = shufflevector <4 x half> %1683, <4 x half> %1543, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !31
  %1685 = shufflevector <4 x half> %1684, <4 x half> %1546, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !31
  store <4 x half> %1685, ptr addrspace(3) %439, align 8, !dbg !31
  %1686 = shufflevector <1 x half> %1548, <1 x half> %1550, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !31
  %1687 = shufflevector <4 x half> %1686, <4 x half> %1553, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !31
  %1688 = shufflevector <4 x half> %1687, <4 x half> %1556, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !31
  store <4 x half> %1688, ptr addrspace(3) %440, align 8, !dbg !31
  %1689 = shufflevector <1 x half> %1558, <1 x half> %1560, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !31
  %1690 = shufflevector <4 x half> %1689, <4 x half> %1563, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !31
  %1691 = shufflevector <4 x half> %1690, <4 x half> %1566, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !31
  store <4 x half> %1691, ptr addrspace(3) %441, align 8, !dbg !31
  %1692 = shufflevector <1 x half> %1568, <1 x half> %1570, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !31
  %1693 = shufflevector <4 x half> %1692, <4 x half> %1573, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !31
  %1694 = shufflevector <4 x half> %1693, <4 x half> %1576, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !31
  store <4 x half> %1694, ptr addrspace(3) %442, align 8, !dbg !31
  %1695 = shufflevector <1 x half> %1578, <1 x half> %1580, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !31
  %1696 = shufflevector <4 x half> %1695, <4 x half> %1583, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !31
  %1697 = shufflevector <4 x half> %1696, <4 x half> %1586, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !31
  store <4 x half> %1697, ptr addrspace(3) %443, align 8, !dbg !31
  %1698 = shufflevector <1 x half> %1588, <1 x half> %1590, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !31
  %1699 = shufflevector <4 x half> %1698, <4 x half> %1593, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !31
  %1700 = shufflevector <4 x half> %1699, <4 x half> %1596, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !31
  store <4 x half> %1700, ptr addrspace(3) %444, align 8, !dbg !31
  %1701 = shufflevector <1 x half> %1598, <1 x half> %1600, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !31
  %1702 = shufflevector <4 x half> %1701, <4 x half> %1603, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !31
  %1703 = shufflevector <4 x half> %1702, <4 x half> %1606, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !31
  store <4 x half> %1703, ptr addrspace(3) %445, align 8, !dbg !31
  %1704 = shufflevector <1 x half> %1608, <1 x half> %1610, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !31
  %1705 = shufflevector <4 x half> %1704, <4 x half> %1613, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !31
  %1706 = shufflevector <4 x half> %1705, <4 x half> %1616, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !31
  store <4 x half> %1706, ptr addrspace(3) %446, align 8, !dbg !31
  %1707 = shufflevector <1 x half> %1618, <1 x half> %1620, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !31
  %1708 = shufflevector <4 x half> %1707, <4 x half> %1623, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !31
  %1709 = shufflevector <4 x half> %1708, <4 x half> %1626, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !31
  store <4 x half> %1709, ptr addrspace(3) %447, align 8, !dbg !31
  %1710 = shufflevector <1 x half> %1628, <1 x half> %1630, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !31
  %1711 = shufflevector <4 x half> %1710, <4 x half> %1633, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !31
  %1712 = shufflevector <4 x half> %1711, <4 x half> %1636, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !31
  store <4 x half> %1712, ptr addrspace(3) %448, align 8, !dbg !31
  %1713 = shufflevector <1 x half> %1638, <1 x half> %1640, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !31
  %1714 = shufflevector <4 x half> %1713, <4 x half> %1643, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !31
  %1715 = shufflevector <4 x half> %1714, <4 x half> %1646, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !31
  store <4 x half> %1715, ptr addrspace(3) %449, align 8, !dbg !31
  %1716 = shufflevector <1 x half> %1648, <1 x half> %1650, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !31
  %1717 = shufflevector <4 x half> %1716, <4 x half> %1653, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !31
  %1718 = shufflevector <4 x half> %1717, <4 x half> %1656, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !31
  store <4 x half> %1718, ptr addrspace(3) %450, align 8, !dbg !31
  %1719 = shufflevector <1 x half> %1658, <1 x half> %1660, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !31
  %1720 = shufflevector <4 x half> %1719, <4 x half> %1663, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !31
  %1721 = shufflevector <4 x half> %1720, <4 x half> %1666, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !31
  store <4 x half> %1721, ptr addrspace(3) %451, align 8, !dbg !31
  %1722 = shufflevector <1 x half> %1668, <1 x half> %1670, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !31
  %1723 = shufflevector <4 x half> %1722, <4 x half> %1673, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>, !dbg !31
  %1724 = shufflevector <4 x half> %1723, <4 x half> %1676, <4 x i32> <i32 0, i32 1, i32 2, i32 4>, !dbg !31
  store <4 x half> %1724, ptr addrspace(3) %452, align 8, !dbg !31
  fence syncscope("workgroup") release, !dbg !31
  tail call void @llvm.amdgcn.s.barrier(), !dbg !31
  fence syncscope("workgroup") acquire, !dbg !31
  %1725 = load <4 x half>, ptr addrspace(3) %551, align 8, !dbg !31
  %1726 = load <4 x half>, ptr addrspace(3) %553, align 8, !dbg !31
  %1727 = load <4 x half>, ptr addrspace(3) %555, align 8, !dbg !31
  %1728 = load <4 x half>, ptr addrspace(3) %557, align 8, !dbg !31
  %1729 = load <4 x half>, ptr addrspace(3) %560, align 8, !dbg !31
  %1730 = load <4 x half>, ptr addrspace(3) %563, align 8, !dbg !31
  %1731 = load <4 x half>, ptr addrspace(3) %566, align 8, !dbg !31
  %1732 = load <4 x half>, ptr addrspace(3) %569, align 8, !dbg !31
  %1733 = load <4 x half>, ptr addrspace(3) %572, align 8, !dbg !31
  %1734 = load <4 x half>, ptr addrspace(3) %575, align 8, !dbg !31
  %1735 = load <4 x half>, ptr addrspace(3) %578, align 8, !dbg !31
  %1736 = load <4 x half>, ptr addrspace(3) %581, align 8, !dbg !31
  %1737 = load <4 x half>, ptr addrspace(3) %584, align 8, !dbg !31
  %1738 = load <4 x half>, ptr addrspace(3) %587, align 8, !dbg !31
  %1739 = load <4 x half>, ptr addrspace(3) %590, align 8, !dbg !31
  %1740 = load <4 x half>, ptr addrspace(3) %593, align 8, !dbg !31
  %1741 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1725, <4 x half> %1390, <16 x float> %1248, i32 0, i32 0, i32 0), !dbg !53
  %1742 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1726, <4 x half> %1399, <16 x float> %1741, i32 0, i32 0, i32 0), !dbg !53
  %1743 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1727, <4 x half> %1408, <16 x float> %1742, i32 0, i32 0, i32 0), !dbg !53
  %1744 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1728, <4 x half> %1417, <16 x float> %1743, i32 0, i32 0, i32 0), !dbg !53
  %1745 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1729, <4 x half> %1390, <16 x float> %1249, i32 0, i32 0, i32 0), !dbg !53
  %1746 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1730, <4 x half> %1399, <16 x float> %1745, i32 0, i32 0, i32 0), !dbg !53
  %1747 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1731, <4 x half> %1408, <16 x float> %1746, i32 0, i32 0, i32 0), !dbg !53
  %1748 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1732, <4 x half> %1417, <16 x float> %1747, i32 0, i32 0, i32 0), !dbg !53
  %1749 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1733, <4 x half> %1390, <16 x float> %1250, i32 0, i32 0, i32 0), !dbg !53
  %1750 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1734, <4 x half> %1399, <16 x float> %1749, i32 0, i32 0, i32 0), !dbg !53
  %1751 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1735, <4 x half> %1408, <16 x float> %1750, i32 0, i32 0, i32 0), !dbg !53
  %1752 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1736, <4 x half> %1417, <16 x float> %1751, i32 0, i32 0, i32 0), !dbg !53
  %1753 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1737, <4 x half> %1390, <16 x float> %1251, i32 0, i32 0, i32 0), !dbg !53
  %1754 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1738, <4 x half> %1399, <16 x float> %1753, i32 0, i32 0, i32 0), !dbg !53
  %1755 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1739, <4 x half> %1408, <16 x float> %1754, i32 0, i32 0, i32 0), !dbg !53
  %1756 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1740, <4 x half> %1417, <16 x float> %1755, i32 0, i32 0, i32 0), !dbg !53
  %1757 = load <4 x half>, ptr addrspace(3) %594, align 8, !dbg !31
  %1758 = load <4 x half>, ptr addrspace(3) %595, align 8, !dbg !31
  %1759 = load <4 x half>, ptr addrspace(3) %596, align 8, !dbg !31
  %1760 = load <4 x half>, ptr addrspace(3) %597, align 8, !dbg !31
  %1761 = load <4 x half>, ptr addrspace(3) %598, align 8, !dbg !31
  %1762 = load <4 x half>, ptr addrspace(3) %599, align 8, !dbg !31
  %1763 = load <4 x half>, ptr addrspace(3) %600, align 8, !dbg !31
  %1764 = load <4 x half>, ptr addrspace(3) %601, align 8, !dbg !31
  %1765 = load <4 x half>, ptr addrspace(3) %602, align 8, !dbg !31
  %1766 = load <4 x half>, ptr addrspace(3) %603, align 8, !dbg !31
  %1767 = load <4 x half>, ptr addrspace(3) %604, align 8, !dbg !31
  %1768 = load <4 x half>, ptr addrspace(3) %605, align 8, !dbg !31
  %1769 = load <4 x half>, ptr addrspace(3) %606, align 8, !dbg !31
  %1770 = load <4 x half>, ptr addrspace(3) %607, align 8, !dbg !31
  %1771 = load <4 x half>, ptr addrspace(3) %608, align 8, !dbg !31
  %1772 = load <4 x half>, ptr addrspace(3) %609, align 8, !dbg !31
  %1773 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1757, <4 x half> %1426, <16 x float> %1744, i32 0, i32 0, i32 0), !dbg !53
  %1774 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1758, <4 x half> %1435, <16 x float> %1773, i32 0, i32 0, i32 0), !dbg !53
  %1775 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1759, <4 x half> %1444, <16 x float> %1774, i32 0, i32 0, i32 0), !dbg !53
  %1776 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1760, <4 x half> %1453, <16 x float> %1775, i32 0, i32 0, i32 0), !dbg !53
  %1777 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1761, <4 x half> %1426, <16 x float> %1748, i32 0, i32 0, i32 0), !dbg !53
  %1778 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1762, <4 x half> %1435, <16 x float> %1777, i32 0, i32 0, i32 0), !dbg !53
  %1779 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1763, <4 x half> %1444, <16 x float> %1778, i32 0, i32 0, i32 0), !dbg !53
  %1780 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1764, <4 x half> %1453, <16 x float> %1779, i32 0, i32 0, i32 0), !dbg !53
  %1781 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1765, <4 x half> %1426, <16 x float> %1752, i32 0, i32 0, i32 0), !dbg !53
  %1782 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1766, <4 x half> %1435, <16 x float> %1781, i32 0, i32 0, i32 0), !dbg !53
  %1783 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1767, <4 x half> %1444, <16 x float> %1782, i32 0, i32 0, i32 0), !dbg !53
  %1784 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1768, <4 x half> %1453, <16 x float> %1783, i32 0, i32 0, i32 0), !dbg !53
  %1785 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1769, <4 x half> %1426, <16 x float> %1756, i32 0, i32 0, i32 0), !dbg !53
  %1786 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1770, <4 x half> %1435, <16 x float> %1785, i32 0, i32 0, i32 0), !dbg !53
  %1787 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1771, <4 x half> %1444, <16 x float> %1786, i32 0, i32 0, i32 0), !dbg !53
  %1788 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1772, <4 x half> %1453, <16 x float> %1787, i32 0, i32 0, i32 0), !dbg !53
  %1789 = load <4 x half>, ptr addrspace(3) %610, align 8, !dbg !31
  %1790 = load <4 x half>, ptr addrspace(3) %611, align 8, !dbg !31
  %1791 = load <4 x half>, ptr addrspace(3) %612, align 8, !dbg !31
  %1792 = load <4 x half>, ptr addrspace(3) %613, align 8, !dbg !31
  %1793 = load <4 x half>, ptr addrspace(3) %614, align 8, !dbg !31
  %1794 = load <4 x half>, ptr addrspace(3) %615, align 8, !dbg !31
  %1795 = load <4 x half>, ptr addrspace(3) %616, align 8, !dbg !31
  %1796 = load <4 x half>, ptr addrspace(3) %617, align 8, !dbg !31
  %1797 = load <4 x half>, ptr addrspace(3) %618, align 8, !dbg !31
  %1798 = load <4 x half>, ptr addrspace(3) %619, align 8, !dbg !31
  %1799 = load <4 x half>, ptr addrspace(3) %620, align 8, !dbg !31
  %1800 = load <4 x half>, ptr addrspace(3) %621, align 8, !dbg !31
  %1801 = load <4 x half>, ptr addrspace(3) %622, align 8, !dbg !31
  %1802 = load <4 x half>, ptr addrspace(3) %623, align 8, !dbg !31
  %1803 = load <4 x half>, ptr addrspace(3) %624, align 8, !dbg !31
  %1804 = load <4 x half>, ptr addrspace(3) %625, align 8, !dbg !31
  %1805 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1789, <4 x half> %1462, <16 x float> %1776, i32 0, i32 0, i32 0), !dbg !53
  %1806 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1790, <4 x half> %1471, <16 x float> %1805, i32 0, i32 0, i32 0), !dbg !53
  %1807 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1791, <4 x half> %1480, <16 x float> %1806, i32 0, i32 0, i32 0), !dbg !53
  %1808 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1792, <4 x half> %1489, <16 x float> %1807, i32 0, i32 0, i32 0), !dbg !53
  %1809 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1793, <4 x half> %1462, <16 x float> %1780, i32 0, i32 0, i32 0), !dbg !53
  %1810 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1794, <4 x half> %1471, <16 x float> %1809, i32 0, i32 0, i32 0), !dbg !53
  %1811 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1795, <4 x half> %1480, <16 x float> %1810, i32 0, i32 0, i32 0), !dbg !53
  %1812 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1796, <4 x half> %1489, <16 x float> %1811, i32 0, i32 0, i32 0), !dbg !53
  %1813 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1797, <4 x half> %1462, <16 x float> %1784, i32 0, i32 0, i32 0), !dbg !53
  %1814 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1798, <4 x half> %1471, <16 x float> %1813, i32 0, i32 0, i32 0), !dbg !53
  %1815 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1799, <4 x half> %1480, <16 x float> %1814, i32 0, i32 0, i32 0), !dbg !53
  %1816 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1800, <4 x half> %1489, <16 x float> %1815, i32 0, i32 0, i32 0), !dbg !53
  %1817 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1801, <4 x half> %1462, <16 x float> %1788, i32 0, i32 0, i32 0), !dbg !53
  %1818 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1802, <4 x half> %1471, <16 x float> %1817, i32 0, i32 0, i32 0), !dbg !53
  %1819 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1803, <4 x half> %1480, <16 x float> %1818, i32 0, i32 0, i32 0), !dbg !53
  %1820 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1804, <4 x half> %1489, <16 x float> %1819, i32 0, i32 0, i32 0), !dbg !53
  %1821 = load <4 x half>, ptr addrspace(3) %626, align 8, !dbg !31
  %1822 = load <4 x half>, ptr addrspace(3) %627, align 8, !dbg !31
  %1823 = load <4 x half>, ptr addrspace(3) %628, align 8, !dbg !31
  %1824 = load <4 x half>, ptr addrspace(3) %629, align 8, !dbg !31
  %1825 = load <4 x half>, ptr addrspace(3) %630, align 8, !dbg !31
  %1826 = load <4 x half>, ptr addrspace(3) %631, align 8, !dbg !31
  %1827 = load <4 x half>, ptr addrspace(3) %632, align 8, !dbg !31
  %1828 = load <4 x half>, ptr addrspace(3) %633, align 8, !dbg !31
  %1829 = load <4 x half>, ptr addrspace(3) %634, align 8, !dbg !31
  %1830 = load <4 x half>, ptr addrspace(3) %635, align 8, !dbg !31
  %1831 = load <4 x half>, ptr addrspace(3) %636, align 8, !dbg !31
  %1832 = load <4 x half>, ptr addrspace(3) %637, align 8, !dbg !31
  %1833 = load <4 x half>, ptr addrspace(3) %638, align 8, !dbg !31
  %1834 = load <4 x half>, ptr addrspace(3) %639, align 8, !dbg !31
  %1835 = load <4 x half>, ptr addrspace(3) %640, align 8, !dbg !31
  %1836 = load <4 x half>, ptr addrspace(3) %641, align 8, !dbg !31
  %1837 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1821, <4 x half> %1498, <16 x float> %1808, i32 0, i32 0, i32 0), !dbg !53
  %1838 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1822, <4 x half> %1504, <16 x float> %1837, i32 0, i32 0, i32 0), !dbg !53
  %1839 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1823, <4 x half> %1510, <16 x float> %1838, i32 0, i32 0, i32 0), !dbg !53
  %1840 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1824, <4 x half> %1516, <16 x float> %1839, i32 0, i32 0, i32 0), !dbg !53
  %1841 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1825, <4 x half> %1498, <16 x float> %1812, i32 0, i32 0, i32 0), !dbg !53
  %1842 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1826, <4 x half> %1504, <16 x float> %1841, i32 0, i32 0, i32 0), !dbg !53
  %1843 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1827, <4 x half> %1510, <16 x float> %1842, i32 0, i32 0, i32 0), !dbg !53
  %1844 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1828, <4 x half> %1516, <16 x float> %1843, i32 0, i32 0, i32 0), !dbg !53
  %1845 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1829, <4 x half> %1498, <16 x float> %1816, i32 0, i32 0, i32 0), !dbg !53
  %1846 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1830, <4 x half> %1504, <16 x float> %1845, i32 0, i32 0, i32 0), !dbg !53
  %1847 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1831, <4 x half> %1510, <16 x float> %1846, i32 0, i32 0, i32 0), !dbg !53
  %1848 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1832, <4 x half> %1516, <16 x float> %1847, i32 0, i32 0, i32 0), !dbg !53
  %1849 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1833, <4 x half> %1498, <16 x float> %1820, i32 0, i32 0, i32 0), !dbg !53
  %1850 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1834, <4 x half> %1504, <16 x float> %1849, i32 0, i32 0, i32 0), !dbg !53
  %1851 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1835, <4 x half> %1510, <16 x float> %1850, i32 0, i32 0, i32 0), !dbg !53
  %1852 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half> %1836, <4 x half> %1516, <16 x float> %1851, i32 0, i32 0, i32 0), !dbg !53
  %shift = shufflevector <4 x float> %1389, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1853 = fadd <4 x float> %1389, %shift, !dbg !54
  %shift78 = shufflevector <4 x float> %1389, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1854 = fadd <4 x float> %shift78, %1853, !dbg !54
  %shift79 = shufflevector <4 x float> %1389, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1855 = fadd <4 x float> %shift79, %1854, !dbg !54
  %1856 = fadd <4 x float> %1398, %1855, !dbg !54
  %shift80 = shufflevector <4 x float> %1398, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1857 = fadd <4 x float> %shift80, %1856, !dbg !54
  %shift81 = shufflevector <4 x float> %1398, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1858 = fadd <4 x float> %shift81, %1857, !dbg !54
  %shift82 = shufflevector <4 x float> %1398, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1859 = fadd <4 x float> %shift82, %1858, !dbg !54
  %1860 = fadd <4 x float> %1407, %1859, !dbg !54
  %shift83 = shufflevector <4 x float> %1407, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1861 = fadd <4 x float> %shift83, %1860, !dbg !54
  %shift84 = shufflevector <4 x float> %1407, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1862 = fadd <4 x float> %shift84, %1861, !dbg !54
  %shift85 = shufflevector <4 x float> %1407, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1863 = fadd <4 x float> %shift85, %1862, !dbg !54
  %1864 = fadd <4 x float> %1416, %1863, !dbg !54
  %shift86 = shufflevector <4 x float> %1416, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1865 = fadd <4 x float> %shift86, %1864, !dbg !54
  %shift87 = shufflevector <4 x float> %1416, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1866 = fadd <4 x float> %shift87, %1865, !dbg !54
  %shift88 = shufflevector <4 x float> %1416, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1867 = fadd <4 x float> %shift88, %1866, !dbg !54
  %1868 = fadd <4 x float> %1425, %1867, !dbg !54
  %shift89 = shufflevector <4 x float> %1425, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1869 = fadd <4 x float> %shift89, %1868, !dbg !54
  %shift90 = shufflevector <4 x float> %1425, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1870 = fadd <4 x float> %shift90, %1869, !dbg !54
  %shift91 = shufflevector <4 x float> %1425, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1871 = fadd <4 x float> %shift91, %1870, !dbg !54
  %1872 = fadd <4 x float> %1434, %1871, !dbg !54
  %shift92 = shufflevector <4 x float> %1434, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1873 = fadd <4 x float> %shift92, %1872, !dbg !54
  %shift93 = shufflevector <4 x float> %1434, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1874 = fadd <4 x float> %shift93, %1873, !dbg !54
  %shift94 = shufflevector <4 x float> %1434, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1875 = fadd <4 x float> %shift94, %1874, !dbg !54
  %1876 = fadd <4 x float> %1443, %1875, !dbg !54
  %shift95 = shufflevector <4 x float> %1443, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1877 = fadd <4 x float> %shift95, %1876, !dbg !54
  %shift96 = shufflevector <4 x float> %1443, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1878 = fadd <4 x float> %shift96, %1877, !dbg !54
  %shift97 = shufflevector <4 x float> %1443, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1879 = fadd <4 x float> %shift97, %1878, !dbg !54
  %1880 = fadd <4 x float> %1452, %1879, !dbg !54
  %shift98 = shufflevector <4 x float> %1452, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1881 = fadd <4 x float> %shift98, %1880, !dbg !54
  %shift99 = shufflevector <4 x float> %1452, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1882 = fadd <4 x float> %shift99, %1881, !dbg !54
  %shift100 = shufflevector <4 x float> %1452, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1883 = fadd <4 x float> %shift100, %1882, !dbg !54
  %1884 = fadd <4 x float> %1461, %1883, !dbg !54
  %shift101 = shufflevector <4 x float> %1461, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1885 = fadd <4 x float> %shift101, %1884, !dbg !54
  %shift102 = shufflevector <4 x float> %1461, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1886 = fadd <4 x float> %shift102, %1885, !dbg !54
  %shift103 = shufflevector <4 x float> %1461, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1887 = fadd <4 x float> %shift103, %1886, !dbg !54
  %1888 = fadd <4 x float> %1470, %1887, !dbg !54
  %shift104 = shufflevector <4 x float> %1470, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1889 = fadd <4 x float> %shift104, %1888, !dbg !54
  %shift105 = shufflevector <4 x float> %1470, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1890 = fadd <4 x float> %shift105, %1889, !dbg !54
  %shift106 = shufflevector <4 x float> %1470, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1891 = fadd <4 x float> %shift106, %1890, !dbg !54
  %1892 = fadd <4 x float> %1479, %1891, !dbg !54
  %shift107 = shufflevector <4 x float> %1479, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1893 = fadd <4 x float> %shift107, %1892, !dbg !54
  %shift108 = shufflevector <4 x float> %1479, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1894 = fadd <4 x float> %shift108, %1893, !dbg !54
  %shift109 = shufflevector <4 x float> %1479, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1895 = fadd <4 x float> %shift109, %1894, !dbg !54
  %1896 = fadd <4 x float> %1488, %1895, !dbg !54
  %shift110 = shufflevector <4 x float> %1488, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1897 = fadd <4 x float> %shift110, %1896, !dbg !54
  %shift111 = shufflevector <4 x float> %1488, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1898 = fadd <4 x float> %shift111, %1897, !dbg !54
  %shift112 = shufflevector <4 x float> %1488, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1899 = fadd <4 x float> %shift112, %1898, !dbg !54
  %1900 = fadd <4 x float> %1497, %1899, !dbg !54
  %shift113 = shufflevector <4 x float> %1497, <4 x float> poison, <4 x i32> <i32 1, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1901 = fadd <4 x float> %shift113, %1900, !dbg !54
  %shift114 = shufflevector <4 x float> %1497, <4 x float> poison, <4 x i32> <i32 2, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1902 = fadd <4 x float> %shift114, %1901, !dbg !54
  %shift115 = shufflevector <4 x float> %1497, <4 x float> poison, <4 x i32> <i32 3, i32 poison, i32 poison, i32 poison>, !dbg !54
  %1903 = fadd <4 x float> %shift115, %1902, !dbg !54
  %1904 = extractelement <4 x float> %1903, i64 0, !dbg !54
  %1905 = extractelement <2 x float> %1198, i64 0, !dbg !54
  %1906 = fadd float %1905, %1904, !dbg !54
  %1907 = extractelement <2 x float> %1198, i64 1, !dbg !54
  %1908 = fadd float %1907, %1906, !dbg !54
  %1909 = fadd float %1499, %1908, !dbg !54
  %1910 = fadd float %1500, %1909, !dbg !54
  %1911 = fadd float %1505, %1910, !dbg !54
  %1912 = fadd float %1506, %1911, !dbg !54
  %1913 = fadd float %1507, %1912, !dbg !54
  %1914 = fadd float %1508, %1913, !dbg !54
  %1915 = fadd float %1511, %1914, !dbg !54
  %1916 = fadd float %1512, %1915, !dbg !54
  %1917 = fadd float %1513, %1916, !dbg !54
  %1918 = fadd float %1514, %1917, !dbg !54
  %1919 = bitcast float %1918 to i32, !dbg !57
  %1920 = tail call i32 @llvm.amdgcn.ds.bpermute(i32 %643, i32 %1919), !dbg !57
  %1921 = bitcast i32 %1920 to float, !dbg !57
  %1922 = fadd float %1918, %1921, !dbg !54
  %1923 = fmul float %647, %1245, !dbg !59
  %1924 = fadd float %1923, %1922, !dbg !60
  %1925 = add i64 %645, 128, !dbg !61
  %1926 = add i32 %648, 128, !dbg !32
  %1927 = icmp slt i32 %1926, %20, !dbg !32
  br i1 %1927, label %644, label %._crit_edge.loopexit, !dbg !32

._crit_edge.loopexit:                             ; preds = %644
  %1928 = extractelement <16 x float> %1840, i64 15, !dbg !32
  %1929 = extractelement <16 x float> %1840, i64 14, !dbg !32
  %1930 = extractelement <16 x float> %1840, i64 13, !dbg !32
  %1931 = extractelement <16 x float> %1840, i64 12, !dbg !32
  %1932 = extractelement <16 x float> %1840, i64 11, !dbg !32
  %1933 = extractelement <16 x float> %1840, i64 10, !dbg !32
  %1934 = extractelement <16 x float> %1840, i64 9, !dbg !32
  %1935 = extractelement <16 x float> %1840, i64 8, !dbg !32
  %1936 = extractelement <16 x float> %1840, i64 7, !dbg !32
  %1937 = extractelement <16 x float> %1840, i64 6, !dbg !32
  %1938 = extractelement <16 x float> %1840, i64 5, !dbg !32
  %1939 = extractelement <16 x float> %1840, i64 4, !dbg !32
  %1940 = extractelement <16 x float> %1840, i64 3, !dbg !32
  %1941 = extractelement <16 x float> %1840, i64 2, !dbg !32
  %1942 = extractelement <16 x float> %1840, i64 1, !dbg !32
  %1943 = extractelement <16 x float> %1840, i64 0, !dbg !32
  %1944 = extractelement <16 x float> %1844, i64 15, !dbg !32
  %1945 = extractelement <16 x float> %1844, i64 14, !dbg !32
  %1946 = extractelement <16 x float> %1844, i64 13, !dbg !32
  %1947 = extractelement <16 x float> %1844, i64 12, !dbg !32
  %1948 = extractelement <16 x float> %1844, i64 11, !dbg !32
  %1949 = extractelement <16 x float> %1844, i64 10, !dbg !32
  %1950 = extractelement <16 x float> %1844, i64 9, !dbg !32
  %1951 = extractelement <16 x float> %1844, i64 8, !dbg !32
  %1952 = extractelement <16 x float> %1844, i64 7, !dbg !32
  %1953 = extractelement <16 x float> %1844, i64 6, !dbg !32
  %1954 = extractelement <16 x float> %1844, i64 5, !dbg !32
  %1955 = extractelement <16 x float> %1844, i64 4, !dbg !32
  %1956 = extractelement <16 x float> %1844, i64 3, !dbg !32
  %1957 = extractelement <16 x float> %1844, i64 2, !dbg !32
  %1958 = extractelement <16 x float> %1844, i64 1, !dbg !32
  %1959 = extractelement <16 x float> %1844, i64 0, !dbg !32
  %1960 = extractelement <16 x float> %1848, i64 15, !dbg !32
  %1961 = extractelement <16 x float> %1848, i64 14, !dbg !32
  %1962 = extractelement <16 x float> %1848, i64 13, !dbg !32
  %1963 = extractelement <16 x float> %1848, i64 12, !dbg !32
  %1964 = extractelement <16 x float> %1848, i64 11, !dbg !32
  %1965 = extractelement <16 x float> %1848, i64 10, !dbg !32
  %1966 = extractelement <16 x float> %1848, i64 9, !dbg !32
  %1967 = extractelement <16 x float> %1848, i64 8, !dbg !32
  %1968 = extractelement <16 x float> %1848, i64 7, !dbg !32
  %1969 = extractelement <16 x float> %1848, i64 6, !dbg !32
  %1970 = extractelement <16 x float> %1848, i64 5, !dbg !32
  %1971 = extractelement <16 x float> %1848, i64 4, !dbg !32
  %1972 = extractelement <16 x float> %1848, i64 3, !dbg !32
  %1973 = extractelement <16 x float> %1848, i64 2, !dbg !32
  %1974 = extractelement <16 x float> %1848, i64 1, !dbg !32
  %1975 = extractelement <16 x float> %1848, i64 0, !dbg !32
  %1976 = extractelement <16 x float> %1852, i64 15, !dbg !32
  %1977 = extractelement <16 x float> %1852, i64 14, !dbg !32
  %1978 = extractelement <16 x float> %1852, i64 13, !dbg !32
  %1979 = extractelement <16 x float> %1852, i64 12, !dbg !32
  %1980 = extractelement <16 x float> %1852, i64 11, !dbg !32
  %1981 = extractelement <16 x float> %1852, i64 10, !dbg !32
  %1982 = extractelement <16 x float> %1852, i64 9, !dbg !32
  %1983 = extractelement <16 x float> %1852, i64 8, !dbg !32
  %1984 = extractelement <16 x float> %1852, i64 7, !dbg !32
  %1985 = extractelement <16 x float> %1852, i64 6, !dbg !32
  %1986 = extractelement <16 x float> %1852, i64 5, !dbg !32
  %1987 = extractelement <16 x float> %1852, i64 4, !dbg !32
  %1988 = extractelement <16 x float> %1852, i64 3, !dbg !32
  %1989 = extractelement <16 x float> %1852, i64 2, !dbg !32
  %1990 = extractelement <16 x float> %1852, i64 1, !dbg !32
  %1991 = extractelement <16 x float> %1852, i64 0, !dbg !32
  br label %._crit_edge, !dbg !62

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %21
  %1992 = phi float [ 0.000000e+00, %21 ], [ %1943, %._crit_edge.loopexit ]
  %1993 = phi float [ 0.000000e+00, %21 ], [ %1942, %._crit_edge.loopexit ]
  %1994 = phi float [ 0.000000e+00, %21 ], [ %1941, %._crit_edge.loopexit ]
  %1995 = phi float [ 0.000000e+00, %21 ], [ %1940, %._crit_edge.loopexit ]
  %1996 = phi float [ 0.000000e+00, %21 ], [ %1939, %._crit_edge.loopexit ]
  %1997 = phi float [ 0.000000e+00, %21 ], [ %1938, %._crit_edge.loopexit ]
  %1998 = phi float [ 0.000000e+00, %21 ], [ %1937, %._crit_edge.loopexit ]
  %1999 = phi float [ 0.000000e+00, %21 ], [ %1936, %._crit_edge.loopexit ]
  %2000 = phi float [ 0.000000e+00, %21 ], [ %1935, %._crit_edge.loopexit ]
  %2001 = phi float [ 0.000000e+00, %21 ], [ %1934, %._crit_edge.loopexit ]
  %2002 = phi float [ 0.000000e+00, %21 ], [ %1933, %._crit_edge.loopexit ]
  %2003 = phi float [ 0.000000e+00, %21 ], [ %1932, %._crit_edge.loopexit ]
  %2004 = phi float [ 0.000000e+00, %21 ], [ %1931, %._crit_edge.loopexit ]
  %2005 = phi float [ 0.000000e+00, %21 ], [ %1930, %._crit_edge.loopexit ]
  %2006 = phi float [ 0.000000e+00, %21 ], [ %1929, %._crit_edge.loopexit ]
  %2007 = phi float [ 0.000000e+00, %21 ], [ %1928, %._crit_edge.loopexit ]
  %2008 = phi float [ 0.000000e+00, %21 ], [ %1959, %._crit_edge.loopexit ]
  %2009 = phi float [ 0.000000e+00, %21 ], [ %1958, %._crit_edge.loopexit ]
  %2010 = phi float [ 0.000000e+00, %21 ], [ %1957, %._crit_edge.loopexit ]
  %2011 = phi float [ 0.000000e+00, %21 ], [ %1956, %._crit_edge.loopexit ]
  %2012 = phi float [ 0.000000e+00, %21 ], [ %1955, %._crit_edge.loopexit ]
  %2013 = phi float [ 0.000000e+00, %21 ], [ %1954, %._crit_edge.loopexit ]
  %2014 = phi float [ 0.000000e+00, %21 ], [ %1953, %._crit_edge.loopexit ]
  %2015 = phi float [ 0.000000e+00, %21 ], [ %1952, %._crit_edge.loopexit ]
  %2016 = phi float [ 0.000000e+00, %21 ], [ %1951, %._crit_edge.loopexit ]
  %2017 = phi float [ 0.000000e+00, %21 ], [ %1950, %._crit_edge.loopexit ]
  %2018 = phi float [ 0.000000e+00, %21 ], [ %1949, %._crit_edge.loopexit ]
  %2019 = phi float [ 0.000000e+00, %21 ], [ %1948, %._crit_edge.loopexit ]
  %2020 = phi float [ 0.000000e+00, %21 ], [ %1947, %._crit_edge.loopexit ]
  %2021 = phi float [ 0.000000e+00, %21 ], [ %1946, %._crit_edge.loopexit ]
  %2022 = phi float [ 0.000000e+00, %21 ], [ %1945, %._crit_edge.loopexit ]
  %2023 = phi float [ 0.000000e+00, %21 ], [ %1944, %._crit_edge.loopexit ]
  %2024 = phi float [ 0.000000e+00, %21 ], [ %1975, %._crit_edge.loopexit ]
  %2025 = phi float [ 0.000000e+00, %21 ], [ %1974, %._crit_edge.loopexit ]
  %2026 = phi float [ 0.000000e+00, %21 ], [ %1973, %._crit_edge.loopexit ]
  %2027 = phi float [ 0.000000e+00, %21 ], [ %1972, %._crit_edge.loopexit ]
  %2028 = phi float [ 0.000000e+00, %21 ], [ %1971, %._crit_edge.loopexit ]
  %2029 = phi float [ 0.000000e+00, %21 ], [ %1970, %._crit_edge.loopexit ]
  %2030 = phi float [ 0.000000e+00, %21 ], [ %1969, %._crit_edge.loopexit ]
  %2031 = phi float [ 0.000000e+00, %21 ], [ %1968, %._crit_edge.loopexit ]
  %2032 = phi float [ 0.000000e+00, %21 ], [ %1967, %._crit_edge.loopexit ]
  %2033 = phi float [ 0.000000e+00, %21 ], [ %1966, %._crit_edge.loopexit ]
  %2034 = phi float [ 0.000000e+00, %21 ], [ %1965, %._crit_edge.loopexit ]
  %2035 = phi float [ 0.000000e+00, %21 ], [ %1964, %._crit_edge.loopexit ]
  %2036 = phi float [ 0.000000e+00, %21 ], [ %1963, %._crit_edge.loopexit ]
  %2037 = phi float [ 0.000000e+00, %21 ], [ %1962, %._crit_edge.loopexit ]
  %2038 = phi float [ 0.000000e+00, %21 ], [ %1961, %._crit_edge.loopexit ]
  %2039 = phi float [ 0.000000e+00, %21 ], [ %1960, %._crit_edge.loopexit ]
  %2040 = phi float [ 0.000000e+00, %21 ], [ %1991, %._crit_edge.loopexit ]
  %2041 = phi float [ 0.000000e+00, %21 ], [ %1990, %._crit_edge.loopexit ]
  %2042 = phi float [ 0.000000e+00, %21 ], [ %1989, %._crit_edge.loopexit ]
  %2043 = phi float [ 0.000000e+00, %21 ], [ %1988, %._crit_edge.loopexit ]
  %2044 = phi float [ 0.000000e+00, %21 ], [ %1987, %._crit_edge.loopexit ]
  %2045 = phi float [ 0.000000e+00, %21 ], [ %1986, %._crit_edge.loopexit ]
  %2046 = phi float [ 0.000000e+00, %21 ], [ %1985, %._crit_edge.loopexit ]
  %2047 = phi float [ 0.000000e+00, %21 ], [ %1984, %._crit_edge.loopexit ]
  %2048 = phi float [ 0.000000e+00, %21 ], [ %1983, %._crit_edge.loopexit ]
  %2049 = phi float [ 0.000000e+00, %21 ], [ %1982, %._crit_edge.loopexit ]
  %2050 = phi float [ 0.000000e+00, %21 ], [ %1981, %._crit_edge.loopexit ]
  %2051 = phi float [ 0.000000e+00, %21 ], [ %1980, %._crit_edge.loopexit ]
  %2052 = phi float [ 0.000000e+00, %21 ], [ %1979, %._crit_edge.loopexit ]
  %2053 = phi float [ 0.000000e+00, %21 ], [ %1978, %._crit_edge.loopexit ]
  %2054 = phi float [ 0.000000e+00, %21 ], [ %1977, %._crit_edge.loopexit ]
  %2055 = phi float [ 0.000000e+00, %21 ], [ %1976, %._crit_edge.loopexit ]
  %.lcssa2 = phi float [ 1.000000e+00, %21 ], [ %1924, %._crit_edge.loopexit ]
  %.lcssa = phi float [ 0xFFF0000000000000, %21 ], [ %1188, %._crit_edge.loopexit ]
  %2056 = tail call i1 @llvm.amdgcn.class.f32(float %.lcssa2, i32 144), !dbg !62
  %2057 = select i1 %2056, float 0x41F0000000000000, float 1.000000e+00, !dbg !62
  %2058 = fmul float %.lcssa2, %2057, !dbg !62
  %2059 = tail call float @llvm.log2.f32(float %2058), !dbg !62
  %2060 = select i1 %2056, float 3.200000e+01, float 0.000000e+00, !dbg !62
  %2061 = fsub float %2059, %2060, !dbg !62
  %2062 = fadd float %.lcssa, %2061, !dbg !63
  fence syncscope("workgroup") release, !dbg !64
  tail call void @llvm.amdgcn.s.barrier(), !dbg !64
  fence syncscope("workgroup") acquire, !dbg !64
  %2063 = zext i32 %32 to i64, !dbg !64
  %2064 = getelementptr float, ptr addrspace(3) @global_smem, i64 %2063, !dbg !64
  %2065 = insertelement <1 x float> undef, float %2062, i64 0, !dbg !64
  store <1 x float> %2065, ptr addrspace(3) %2064, align 4, !dbg !64
  fence syncscope("workgroup") release, !dbg !64
  tail call void @llvm.amdgcn.s.barrier(), !dbg !64
  fence syncscope("workgroup") acquire, !dbg !64
  %urem = and i32 %22, 128, !dbg !64
  %.not.not = icmp eq i32 %urem, 0, !dbg !64
  br i1 %.not.not, label %2066, label %2075, !dbg !64

2066:                                             ; preds = %._crit_edge
  %2067 = zext i32 %68 to i64, !dbg !64
  %2068 = getelementptr float, ptr addrspace(3) @global_smem, i64 %2067, !dbg !64
  %2069 = load i32, ptr addrspace(3) %2068, align 4, !dbg !64
  %2070 = mul i32 %73, %20, !dbg !65
  %2071 = sext i32 %2070 to i64, !dbg !66
  %2072 = getelementptr float, ptr addrspace(1) %4, i64 %2071, !dbg !66
  %2073 = sext i32 %509 to i64, !dbg !67
  %2074 = getelementptr float, ptr addrspace(1) %2072, i64 %2073, !dbg !67
  store i32 %2069, ptr addrspace(1) %2074, align 4, !dbg !64
  br label %2075, !dbg !64

2075:                                             ; preds = %2066, %._crit_edge
  %2076 = fdiv float %2055, %.lcssa2, !dbg !68
  %2077 = fdiv float %2054, %.lcssa2, !dbg !68
  %2078 = fdiv float %2053, %.lcssa2, !dbg !68
  %2079 = fdiv float %2052, %.lcssa2, !dbg !68
  %2080 = fdiv float %2051, %.lcssa2, !dbg !68
  %2081 = fdiv float %2050, %.lcssa2, !dbg !68
  %2082 = fdiv float %2049, %.lcssa2, !dbg !68
  %2083 = fdiv float %2048, %.lcssa2, !dbg !68
  %2084 = fdiv float %2047, %.lcssa2, !dbg !68
  %2085 = fdiv float %2046, %.lcssa2, !dbg !68
  %2086 = fdiv float %2045, %.lcssa2, !dbg !68
  %2087 = fdiv float %2044, %.lcssa2, !dbg !68
  %2088 = fdiv float %2043, %.lcssa2, !dbg !68
  %2089 = fdiv float %2042, %.lcssa2, !dbg !68
  %2090 = fdiv float %2041, %.lcssa2, !dbg !68
  %2091 = fdiv float %2040, %.lcssa2, !dbg !68
  %2092 = fdiv float %2039, %.lcssa2, !dbg !68
  %2093 = fdiv float %2038, %.lcssa2, !dbg !68
  %2094 = fdiv float %2037, %.lcssa2, !dbg !68
  %2095 = fdiv float %2036, %.lcssa2, !dbg !68
  %2096 = fdiv float %2035, %.lcssa2, !dbg !68
  %2097 = fdiv float %2034, %.lcssa2, !dbg !68
  %2098 = fdiv float %2033, %.lcssa2, !dbg !68
  %2099 = fdiv float %2032, %.lcssa2, !dbg !68
  %2100 = fdiv float %2031, %.lcssa2, !dbg !68
  %2101 = fdiv float %2030, %.lcssa2, !dbg !68
  %2102 = fdiv float %2029, %.lcssa2, !dbg !68
  %2103 = fdiv float %2028, %.lcssa2, !dbg !68
  %2104 = fdiv float %2027, %.lcssa2, !dbg !68
  %2105 = fdiv float %2026, %.lcssa2, !dbg !68
  %2106 = fdiv float %2025, %.lcssa2, !dbg !68
  %2107 = fdiv float %2024, %.lcssa2, !dbg !68
  %2108 = fdiv float %2023, %.lcssa2, !dbg !68
  %2109 = fdiv float %2022, %.lcssa2, !dbg !68
  %2110 = fdiv float %2021, %.lcssa2, !dbg !68
  %2111 = fdiv float %2020, %.lcssa2, !dbg !68
  %2112 = fdiv float %2019, %.lcssa2, !dbg !68
  %2113 = fdiv float %2018, %.lcssa2, !dbg !68
  %2114 = fdiv float %2017, %.lcssa2, !dbg !68
  %2115 = fdiv float %2016, %.lcssa2, !dbg !68
  %2116 = fdiv float %2015, %.lcssa2, !dbg !68
  %2117 = fdiv float %2014, %.lcssa2, !dbg !68
  %2118 = fdiv float %2013, %.lcssa2, !dbg !68
  %2119 = fdiv float %2012, %.lcssa2, !dbg !68
  %2120 = fdiv float %2011, %.lcssa2, !dbg !68
  %2121 = fdiv float %2010, %.lcssa2, !dbg !68
  %2122 = fdiv float %2009, %.lcssa2, !dbg !68
  %2123 = fdiv float %2008, %.lcssa2, !dbg !68
  %2124 = fdiv float %2007, %.lcssa2, !dbg !68
  %2125 = fdiv float %2006, %.lcssa2, !dbg !68
  %2126 = fdiv float %2005, %.lcssa2, !dbg !68
  %2127 = fdiv float %2004, %.lcssa2, !dbg !68
  %2128 = fdiv float %2003, %.lcssa2, !dbg !68
  %2129 = fdiv float %2002, %.lcssa2, !dbg !68
  %2130 = fdiv float %2001, %.lcssa2, !dbg !68
  %2131 = fdiv float %2000, %.lcssa2, !dbg !68
  %2132 = fdiv float %1999, %.lcssa2, !dbg !68
  %2133 = fdiv float %1998, %.lcssa2, !dbg !68
  %2134 = fdiv float %1997, %.lcssa2, !dbg !68
  %2135 = fdiv float %1996, %.lcssa2, !dbg !68
  %2136 = fdiv float %1995, %.lcssa2, !dbg !68
  %2137 = fdiv float %1994, %.lcssa2, !dbg !68
  %2138 = fdiv float %1993, %.lcssa2, !dbg !68
  %2139 = fdiv float %1992, %.lcssa2, !dbg !68
  %2140 = or i64 %2063, %72, !dbg !24
  %2141 = or i32 %67, 123, !dbg !12
  %2142 = zext i32 %2141 to i64
  %2143 = or i32 %67, 122, !dbg !12
  %2144 = zext i32 %2143 to i64
  %2145 = or i32 %67, 121, !dbg !12
  %2146 = zext i32 %2145 to i64
  %2147 = or i32 %67, 120, !dbg !12
  %2148 = zext i32 %2147 to i64
  %2149 = or i32 %67, 115, !dbg !12
  %2150 = zext i32 %2149 to i64
  %2151 = or i32 %67, 114, !dbg !12
  %2152 = zext i32 %2151 to i64
  %2153 = or i32 %67, 113, !dbg !12
  %2154 = zext i32 %2153 to i64
  %2155 = or i32 %67, 112, !dbg !12
  %2156 = zext i32 %2155 to i64
  %2157 = or i32 %67, 107, !dbg !12
  %2158 = zext i32 %2157 to i64
  %2159 = or i32 %67, 106, !dbg !12
  %2160 = zext i32 %2159 to i64
  %2161 = or i32 %67, 105, !dbg !12
  %2162 = zext i32 %2161 to i64
  %2163 = or i32 %67, 104, !dbg !12
  %2164 = zext i32 %2163 to i64
  %2165 = or i32 %67, 99, !dbg !12
  %2166 = zext i32 %2165 to i64
  %2167 = or i32 %67, 98, !dbg !12
  %2168 = zext i32 %2167 to i64
  %2169 = or i32 %67, 97, !dbg !12
  %2170 = zext i32 %2169 to i64
  %2171 = or i32 %67, 96, !dbg !12
  %2172 = zext i32 %2171 to i64
  %2173 = or i32 %67, 91, !dbg !12
  %2174 = zext i32 %2173 to i64
  %2175 = or i32 %67, 90, !dbg !12
  %2176 = zext i32 %2175 to i64
  %2177 = or i32 %67, 89, !dbg !12
  %2178 = zext i32 %2177 to i64
  %2179 = or i32 %67, 88, !dbg !12
  %2180 = zext i32 %2179 to i64
  %2181 = or i32 %67, 83, !dbg !12
  %2182 = zext i32 %2181 to i64
  %2183 = or i32 %67, 82, !dbg !12
  %2184 = zext i32 %2183 to i64
  %2185 = or i32 %67, 81, !dbg !12
  %2186 = zext i32 %2185 to i64
  %2187 = or i32 %67, 80, !dbg !12
  %2188 = zext i32 %2187 to i64
  %2189 = or i32 %67, 75, !dbg !12
  %2190 = zext i32 %2189 to i64
  %2191 = or i32 %67, 74, !dbg !12
  %2192 = zext i32 %2191 to i64
  %2193 = or i32 %67, 73, !dbg !12
  %2194 = zext i32 %2193 to i64
  %2195 = or i32 %67, 72, !dbg !12
  %2196 = zext i32 %2195 to i64
  %2197 = or i32 %67, 67, !dbg !12
  %2198 = zext i32 %2197 to i64
  %2199 = or i32 %67, 66, !dbg !12
  %2200 = zext i32 %2199 to i64
  %2201 = or i32 %67, 65, !dbg !12
  %2202 = zext i32 %2201 to i64
  %2203 = or i32 %67, 64, !dbg !12
  %2204 = zext i32 %2203 to i64
  %2205 = or i32 %67, 59, !dbg !12
  %2206 = zext i32 %2205 to i64
  %2207 = or i32 %67, 58, !dbg !12
  %2208 = zext i32 %2207 to i64
  %2209 = or i32 %67, 57, !dbg !12
  %2210 = zext i32 %2209 to i64
  %2211 = or i32 %67, 56, !dbg !12
  %2212 = zext i32 %2211 to i64
  %2213 = or i32 %67, 51, !dbg !12
  %2214 = zext i32 %2213 to i64
  %2215 = or i32 %67, 50, !dbg !12
  %2216 = zext i32 %2215 to i64
  %2217 = or i32 %67, 49, !dbg !12
  %2218 = zext i32 %2217 to i64
  %2219 = or i32 %67, 48, !dbg !12
  %2220 = zext i32 %2219 to i64
  %2221 = or i32 %67, 43, !dbg !12
  %2222 = zext i32 %2221 to i64
  %2223 = or i32 %67, 42, !dbg !12
  %2224 = zext i32 %2223 to i64
  %2225 = or i32 %67, 41, !dbg !12
  %2226 = zext i32 %2225 to i64
  %2227 = or i32 %67, 40, !dbg !12
  %2228 = zext i32 %2227 to i64
  %2229 = or i32 %67, 35, !dbg !12
  %2230 = zext i32 %2229 to i64
  %2231 = or i32 %67, 34, !dbg !12
  %2232 = zext i32 %2231 to i64
  %2233 = or i32 %67, 33, !dbg !12
  %2234 = zext i32 %2233 to i64
  %2235 = or i32 %67, 32, !dbg !12
  %2236 = zext i32 %2235 to i64
  %2237 = or i32 %67, 27, !dbg !12
  %2238 = zext i32 %2237 to i64
  %2239 = or i32 %67, 26, !dbg !12
  %2240 = zext i32 %2239 to i64
  %2241 = or i32 %67, 25, !dbg !12
  %2242 = zext i32 %2241 to i64
  %2243 = or i32 %67, 24, !dbg !12
  %2244 = zext i32 %2243 to i64
  %2245 = or i32 %67, 19, !dbg !12
  %2246 = zext i32 %2245 to i64
  %2247 = or i32 %67, 18, !dbg !12
  %2248 = zext i32 %2247 to i64
  %2249 = or i32 %67, 17, !dbg !12
  %2250 = zext i32 %2249 to i64
  %2251 = or i32 %67, 16, !dbg !12
  %2252 = zext i32 %2251 to i64
  %2253 = or i32 %67, 11, !dbg !12
  %2254 = zext i32 %2253 to i64
  %2255 = or i32 %67, 10, !dbg !12
  %2256 = zext i32 %2255 to i64
  %2257 = or i32 %67, 9, !dbg !12
  %2258 = zext i32 %2257 to i64
  %2259 = or i32 %67, 8, !dbg !12
  %2260 = zext i32 %2259 to i64
  %2261 = or i32 %67, 3, !dbg !12
  %2262 = zext i32 %2261 to i64
  %2263 = or i32 %67, 2, !dbg !12
  %2264 = zext i32 %2263 to i64
  %2265 = or i32 %67, 1, !dbg !12
  %2266 = zext i32 %2265 to i64
  %2267 = zext i32 %67 to i64
  %2268 = getelementptr half, ptr addrspace(1) %5, i64 %75, !dbg !69
  %2269 = sext i32 %17 to i64, !dbg !70
  %2270 = fptrunc float %2139 to half, !dbg !71
  %2271 = fptrunc float %2138 to half, !dbg !71
  %2272 = fptrunc float %2137 to half, !dbg !71
  %2273 = fptrunc float %2136 to half, !dbg !71
  %2274 = fptrunc float %2135 to half, !dbg !71
  %2275 = fptrunc float %2134 to half, !dbg !71
  %2276 = fptrunc float %2133 to half, !dbg !71
  %2277 = fptrunc float %2132 to half, !dbg !71
  %2278 = fptrunc float %2131 to half, !dbg !71
  %2279 = fptrunc float %2130 to half, !dbg !71
  %2280 = fptrunc float %2129 to half, !dbg !71
  %2281 = fptrunc float %2128 to half, !dbg !71
  %2282 = fptrunc float %2127 to half, !dbg !71
  %2283 = fptrunc float %2126 to half, !dbg !71
  %2284 = fptrunc float %2125 to half, !dbg !71
  %2285 = fptrunc float %2124 to half, !dbg !71
  %2286 = fptrunc float %2123 to half, !dbg !71
  %2287 = fptrunc float %2122 to half, !dbg !71
  %2288 = fptrunc float %2121 to half, !dbg !71
  %2289 = fptrunc float %2120 to half, !dbg !71
  %2290 = fptrunc float %2119 to half, !dbg !71
  %2291 = fptrunc float %2118 to half, !dbg !71
  %2292 = fptrunc float %2117 to half, !dbg !71
  %2293 = fptrunc float %2116 to half, !dbg !71
  %2294 = fptrunc float %2115 to half, !dbg !71
  %2295 = fptrunc float %2114 to half, !dbg !71
  %2296 = fptrunc float %2113 to half, !dbg !71
  %2297 = fptrunc float %2112 to half, !dbg !71
  %2298 = fptrunc float %2111 to half, !dbg !71
  %2299 = fptrunc float %2110 to half, !dbg !71
  %2300 = fptrunc float %2109 to half, !dbg !71
  %2301 = fptrunc float %2108 to half, !dbg !71
  %2302 = fptrunc float %2107 to half, !dbg !71
  %2303 = fptrunc float %2106 to half, !dbg !71
  %2304 = fptrunc float %2105 to half, !dbg !71
  %2305 = fptrunc float %2104 to half, !dbg !71
  %2306 = fptrunc float %2103 to half, !dbg !71
  %2307 = fptrunc float %2102 to half, !dbg !71
  %2308 = fptrunc float %2101 to half, !dbg !71
  %2309 = fptrunc float %2100 to half, !dbg !71
  %2310 = fptrunc float %2099 to half, !dbg !71
  %2311 = fptrunc float %2098 to half, !dbg !71
  %2312 = fptrunc float %2097 to half, !dbg !71
  %2313 = fptrunc float %2096 to half, !dbg !71
  %2314 = fptrunc float %2095 to half, !dbg !71
  %2315 = fptrunc float %2094 to half, !dbg !71
  %2316 = fptrunc float %2093 to half, !dbg !71
  %2317 = fptrunc float %2092 to half, !dbg !71
  %2318 = fptrunc float %2091 to half, !dbg !71
  %2319 = fptrunc float %2090 to half, !dbg !71
  %2320 = fptrunc float %2089 to half, !dbg !71
  %2321 = fptrunc float %2088 to half, !dbg !71
  %2322 = fptrunc float %2087 to half, !dbg !71
  %2323 = fptrunc float %2086 to half, !dbg !71
  %2324 = fptrunc float %2085 to half, !dbg !71
  %2325 = fptrunc float %2084 to half, !dbg !71
  %2326 = fptrunc float %2083 to half, !dbg !71
  %2327 = fptrunc float %2082 to half, !dbg !71
  %2328 = fptrunc float %2081 to half, !dbg !71
  %2329 = fptrunc float %2080 to half, !dbg !71
  %2330 = fptrunc float %2079 to half, !dbg !71
  %2331 = fptrunc float %2078 to half, !dbg !71
  %2332 = fptrunc float %2077 to half, !dbg !71
  %2333 = fptrunc float %2076 to half, !dbg !71
  %2334 = mul nsw i64 %2140, %2269, !dbg !72
  %2335 = getelementptr half, ptr addrspace(1) %2268, i64 %2334, !dbg !72
  %2336 = getelementptr half, ptr addrspace(1) %2335, i64 %2267, !dbg !72
  %2337 = getelementptr half, ptr addrspace(1) %2335, i64 %2266, !dbg !72
  %2338 = getelementptr half, ptr addrspace(1) %2335, i64 %2264, !dbg !72
  %2339 = getelementptr half, ptr addrspace(1) %2335, i64 %2262, !dbg !72
  %2340 = getelementptr half, ptr addrspace(1) %2335, i64 %2260, !dbg !72
  %2341 = getelementptr half, ptr addrspace(1) %2335, i64 %2258, !dbg !72
  %2342 = getelementptr half, ptr addrspace(1) %2335, i64 %2256, !dbg !72
  %2343 = getelementptr half, ptr addrspace(1) %2335, i64 %2254, !dbg !72
  %2344 = getelementptr half, ptr addrspace(1) %2335, i64 %2252, !dbg !72
  %2345 = getelementptr half, ptr addrspace(1) %2335, i64 %2250, !dbg !72
  %2346 = getelementptr half, ptr addrspace(1) %2335, i64 %2248, !dbg !72
  %2347 = getelementptr half, ptr addrspace(1) %2335, i64 %2246, !dbg !72
  %2348 = getelementptr half, ptr addrspace(1) %2335, i64 %2244, !dbg !72
  %2349 = getelementptr half, ptr addrspace(1) %2335, i64 %2242, !dbg !72
  %2350 = getelementptr half, ptr addrspace(1) %2335, i64 %2240, !dbg !72
  %2351 = getelementptr half, ptr addrspace(1) %2335, i64 %2238, !dbg !72
  %2352 = getelementptr half, ptr addrspace(1) %2335, i64 %2236, !dbg !72
  %2353 = getelementptr half, ptr addrspace(1) %2335, i64 %2234, !dbg !72
  %2354 = getelementptr half, ptr addrspace(1) %2335, i64 %2232, !dbg !72
  %2355 = getelementptr half, ptr addrspace(1) %2335, i64 %2230, !dbg !72
  %2356 = getelementptr half, ptr addrspace(1) %2335, i64 %2228, !dbg !72
  %2357 = getelementptr half, ptr addrspace(1) %2335, i64 %2226, !dbg !72
  %2358 = getelementptr half, ptr addrspace(1) %2335, i64 %2224, !dbg !72
  %2359 = getelementptr half, ptr addrspace(1) %2335, i64 %2222, !dbg !72
  %2360 = getelementptr half, ptr addrspace(1) %2335, i64 %2220, !dbg !72
  %2361 = getelementptr half, ptr addrspace(1) %2335, i64 %2218, !dbg !72
  %2362 = getelementptr half, ptr addrspace(1) %2335, i64 %2216, !dbg !72
  %2363 = getelementptr half, ptr addrspace(1) %2335, i64 %2214, !dbg !72
  %2364 = getelementptr half, ptr addrspace(1) %2335, i64 %2212, !dbg !72
  %2365 = getelementptr half, ptr addrspace(1) %2335, i64 %2210, !dbg !72
  %2366 = getelementptr half, ptr addrspace(1) %2335, i64 %2208, !dbg !72
  %2367 = getelementptr half, ptr addrspace(1) %2335, i64 %2206, !dbg !72
  %2368 = getelementptr half, ptr addrspace(1) %2335, i64 %2204, !dbg !72
  %2369 = getelementptr half, ptr addrspace(1) %2335, i64 %2202, !dbg !72
  %2370 = getelementptr half, ptr addrspace(1) %2335, i64 %2200, !dbg !72
  %2371 = getelementptr half, ptr addrspace(1) %2335, i64 %2198, !dbg !72
  %2372 = getelementptr half, ptr addrspace(1) %2335, i64 %2196, !dbg !72
  %2373 = getelementptr half, ptr addrspace(1) %2335, i64 %2194, !dbg !72
  %2374 = getelementptr half, ptr addrspace(1) %2335, i64 %2192, !dbg !72
  %2375 = getelementptr half, ptr addrspace(1) %2335, i64 %2190, !dbg !72
  %2376 = getelementptr half, ptr addrspace(1) %2335, i64 %2188, !dbg !72
  %2377 = getelementptr half, ptr addrspace(1) %2335, i64 %2186, !dbg !72
  %2378 = getelementptr half, ptr addrspace(1) %2335, i64 %2184, !dbg !72
  %2379 = getelementptr half, ptr addrspace(1) %2335, i64 %2182, !dbg !72
  %2380 = getelementptr half, ptr addrspace(1) %2335, i64 %2180, !dbg !72
  %2381 = getelementptr half, ptr addrspace(1) %2335, i64 %2178, !dbg !72
  %2382 = getelementptr half, ptr addrspace(1) %2335, i64 %2176, !dbg !72
  %2383 = getelementptr half, ptr addrspace(1) %2335, i64 %2174, !dbg !72
  %2384 = getelementptr half, ptr addrspace(1) %2335, i64 %2172, !dbg !72
  %2385 = getelementptr half, ptr addrspace(1) %2335, i64 %2170, !dbg !72
  %2386 = getelementptr half, ptr addrspace(1) %2335, i64 %2168, !dbg !72
  %2387 = getelementptr half, ptr addrspace(1) %2335, i64 %2166, !dbg !72
  %2388 = getelementptr half, ptr addrspace(1) %2335, i64 %2164, !dbg !72
  %2389 = getelementptr half, ptr addrspace(1) %2335, i64 %2162, !dbg !72
  %2390 = getelementptr half, ptr addrspace(1) %2335, i64 %2160, !dbg !72
  %2391 = getelementptr half, ptr addrspace(1) %2335, i64 %2158, !dbg !72
  %2392 = getelementptr half, ptr addrspace(1) %2335, i64 %2156, !dbg !72
  %2393 = getelementptr half, ptr addrspace(1) %2335, i64 %2154, !dbg !72
  %2394 = getelementptr half, ptr addrspace(1) %2335, i64 %2152, !dbg !72
  %2395 = getelementptr half, ptr addrspace(1) %2335, i64 %2150, !dbg !72
  %2396 = getelementptr half, ptr addrspace(1) %2335, i64 %2148, !dbg !72
  %2397 = getelementptr half, ptr addrspace(1) %2335, i64 %2146, !dbg !72
  %2398 = getelementptr half, ptr addrspace(1) %2335, i64 %2144, !dbg !72
  %2399 = getelementptr half, ptr addrspace(1) %2335, i64 %2142, !dbg !72
  store half %2270, ptr addrspace(1) %2336, align 2, !dbg !72
  store half %2271, ptr addrspace(1) %2337, align 2, !dbg !72
  store half %2272, ptr addrspace(1) %2338, align 2, !dbg !72
  store half %2273, ptr addrspace(1) %2339, align 2, !dbg !72
  store half %2274, ptr addrspace(1) %2340, align 2, !dbg !72
  store half %2275, ptr addrspace(1) %2341, align 2, !dbg !72
  store half %2276, ptr addrspace(1) %2342, align 2, !dbg !72
  store half %2277, ptr addrspace(1) %2343, align 2, !dbg !72
  store half %2278, ptr addrspace(1) %2344, align 2, !dbg !72
  store half %2279, ptr addrspace(1) %2345, align 2, !dbg !72
  store half %2280, ptr addrspace(1) %2346, align 2, !dbg !72
  store half %2281, ptr addrspace(1) %2347, align 2, !dbg !72
  store half %2282, ptr addrspace(1) %2348, align 2, !dbg !72
  store half %2283, ptr addrspace(1) %2349, align 2, !dbg !72
  store half %2284, ptr addrspace(1) %2350, align 2, !dbg !72
  store half %2285, ptr addrspace(1) %2351, align 2, !dbg !72
  store half %2286, ptr addrspace(1) %2352, align 2, !dbg !72
  store half %2287, ptr addrspace(1) %2353, align 2, !dbg !72
  store half %2288, ptr addrspace(1) %2354, align 2, !dbg !72
  store half %2289, ptr addrspace(1) %2355, align 2, !dbg !72
  store half %2290, ptr addrspace(1) %2356, align 2, !dbg !72
  store half %2291, ptr addrspace(1) %2357, align 2, !dbg !72
  store half %2292, ptr addrspace(1) %2358, align 2, !dbg !72
  store half %2293, ptr addrspace(1) %2359, align 2, !dbg !72
  store half %2294, ptr addrspace(1) %2360, align 2, !dbg !72
  store half %2295, ptr addrspace(1) %2361, align 2, !dbg !72
  store half %2296, ptr addrspace(1) %2362, align 2, !dbg !72
  store half %2297, ptr addrspace(1) %2363, align 2, !dbg !72
  store half %2298, ptr addrspace(1) %2364, align 2, !dbg !72
  store half %2299, ptr addrspace(1) %2365, align 2, !dbg !72
  store half %2300, ptr addrspace(1) %2366, align 2, !dbg !72
  store half %2301, ptr addrspace(1) %2367, align 2, !dbg !72
  store half %2302, ptr addrspace(1) %2368, align 2, !dbg !72
  store half %2303, ptr addrspace(1) %2369, align 2, !dbg !72
  store half %2304, ptr addrspace(1) %2370, align 2, !dbg !72
  store half %2305, ptr addrspace(1) %2371, align 2, !dbg !72
  store half %2306, ptr addrspace(1) %2372, align 2, !dbg !72
  store half %2307, ptr addrspace(1) %2373, align 2, !dbg !72
  store half %2308, ptr addrspace(1) %2374, align 2, !dbg !72
  store half %2309, ptr addrspace(1) %2375, align 2, !dbg !72
  store half %2310, ptr addrspace(1) %2376, align 2, !dbg !72
  store half %2311, ptr addrspace(1) %2377, align 2, !dbg !72
  store half %2312, ptr addrspace(1) %2378, align 2, !dbg !72
  store half %2313, ptr addrspace(1) %2379, align 2, !dbg !72
  store half %2314, ptr addrspace(1) %2380, align 2, !dbg !72
  store half %2315, ptr addrspace(1) %2381, align 2, !dbg !72
  store half %2316, ptr addrspace(1) %2382, align 2, !dbg !72
  store half %2317, ptr addrspace(1) %2383, align 2, !dbg !72
  store half %2318, ptr addrspace(1) %2384, align 2, !dbg !72
  store half %2319, ptr addrspace(1) %2385, align 2, !dbg !72
  store half %2320, ptr addrspace(1) %2386, align 2, !dbg !72
  store half %2321, ptr addrspace(1) %2387, align 2, !dbg !72
  store half %2322, ptr addrspace(1) %2388, align 2, !dbg !72
  store half %2323, ptr addrspace(1) %2389, align 2, !dbg !72
  store half %2324, ptr addrspace(1) %2390, align 2, !dbg !72
  store half %2325, ptr addrspace(1) %2391, align 2, !dbg !72
  store half %2326, ptr addrspace(1) %2392, align 2, !dbg !72
  store half %2327, ptr addrspace(1) %2393, align 2, !dbg !72
  store half %2328, ptr addrspace(1) %2394, align 2, !dbg !72
  store half %2329, ptr addrspace(1) %2395, align 2, !dbg !72
  store half %2330, ptr addrspace(1) %2396, align 2, !dbg !72
  store half %2331, ptr addrspace(1) %2397, align 2, !dbg !72
  store half %2332, ptr addrspace(1) %2398, align 2, !dbg !72
  store half %2333, ptr addrspace(1) %2399, align 2, !dbg !72
  ret void, !dbg !73
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.workitem.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.workgroup.id.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.workgroup.id.y() #1

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #2

; Function Attrs: convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <16 x float> @llvm.amdgcn.mfma.f32.32x32x8f16(<4 x half>, <4 x half>, <16 x float>, i32 immarg, i32 immarg, i32 immarg) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.maxnum.f32(float, float) #1

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn memory(none)
declare i32 @llvm.amdgcn.ds.bpermute(i32, i32) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.exp2.f32(float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.log2.f32(float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i1 @llvm.amdgcn.class.f32(float, i32) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.exp2.v2f32(<2 x float>) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x float> @llvm.exp2.v4f32(<4 x float>) #5

attributes #0 = { nofree nounwind "amdgpu-flat-work-group-size"="1, 256" "amdgpu-unsafe-fp-atomics"="true" "amdgpu-waves-per-eu"="2" "denormal-fp-math-f32"="preserve-sign" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent mustprogress nocallback nofree nounwind willreturn }
attributes #3 = { convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { convergent mustprogress nocallback nofree nounwind willreturn memory(none) }
attributes #5 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.module.flags = !{!0, !1, !2}
!llvm.dbg.cu = !{!3}
!nvvm.annotations = !{!5}
!opencl.ocl.version = !{}
!llvm.ident = !{!7, !7, !7, !7, !7, !7, !7, !7, !7, !7, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8, !8}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 8, !"PIC Level", i32 0}
!3 = distinct !DICompileUnit(language: DW_LANG_C, file: !4, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!4 = !DIFile(filename: "06-fused-attention-transV.py", directory: "/triton/python/perf-kernels")
!5 = !{ptr @_attn_fwd_0d1d2d34d5d6de7de8de9c10de11de12de13c14de15de16de17c18de19de20de21c2223de24de, !"kernel", i32 1}
!6 = !{i32 2, i32 0}
!7 = !{!"clang version 14.0.0"}
!8 = !{!"AMD clang version 14.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.2.0 22204 50d6d5d5b608d2abd6af44314abc6ad20036af3b)"}
!9 = distinct !DISubprogram(name: "_attn_fwd_0d1d2d34d5d6de7de8de9c10de11de12de13c14de15de16de17c18de19de20de21c2223de24de", linkageName: "_attn_fwd_0d1d2d34d5d6de7de8de9c10de11de12de13c14de15de16de17c18de19de20de21c2223de24de", scope: !4, file: !4, line: 86, type: !10, scopeLine: 86, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3)
!10 = !DISubroutineType(cc: DW_CC_normal, types: !11)
!11 = !{}
!12 = !DILocation(line: 128, column: 46, scope: !9)
!13 = !DILocation(line: 137, column: 26, scope: !9)
!14 = !DILocation(line: 100, column: 28, scope: !9)
!15 = !DILocation(line: 107, column: 27, scope: !9)
!16 = !DILocation(line: 103, column: 18, scope: !9)
!17 = !DILocation(line: 101, column: 27, scope: !9)
!18 = !DILocation(line: 102, column: 26, scope: !9)
!19 = !DILocation(line: 104, column: 17, scope: !9)
!20 = !DILocation(line: 112, column: 17, scope: !9)
!21 = !DILocation(line: 111, column: 18, scope: !9)
!22 = !DILocation(line: 120, column: 17, scope: !9)
!23 = !DILocation(line: 119, column: 18, scope: !9)
!24 = !DILocation(line: 139, column: 16, scope: !9)
!25 = !DILocation(line: 140, column: 13, scope: !9)
!26 = !DILocation(line: 140, column: 26, scope: !9)
!27 = !DILocation(line: 128, column: 33, scope: !9)
!28 = !DILocation(line: 58, column: 20, scope: !29, inlinedAt: !30)
!29 = distinct !DILexicalBlockFile(scope: !9, file: !4, discriminator: 0)
!30 = !DILocation(line: 150, column: 19, scope: !29)
!31 = !DILocation(line: 73, column: 24, scope: !29, inlinedAt: !30)
!32 = !DILocation(line: 55, column: 33, scope: !29, inlinedAt: !30)
!33 = !DILocation(line: 65, scope: !9, inlinedAt: !34)
!34 = !DILocation(line: 150, column: 19, scope: !9)
!35 = !DILocation(line: 124, column: 23, scope: !36, inlinedAt: !39)
!36 = distinct !DILexicalBlockFile(scope: !38, file: !37, discriminator: 0)
!37 = !DIFile(filename: "standard.py", directory: "/triton/python/triton/language")
!38 = distinct !DILexicalBlockFile(scope: !29, file: !37, discriminator: 0)
!39 = !DILocation(line: 168, column: 40, scope: !36, inlinedAt: !40)
!40 = !DILocation(line: 66, column: 42, scope: !36, inlinedAt: !41)
!41 = !DILocation(line: 150, column: 19, scope: !36)
!42 = !DILocation(line: 168, column: 40, scope: !38, inlinedAt: !43)
!43 = !DILocation(line: 66, column: 42, scope: !38, inlinedAt: !44)
!44 = !DILocation(line: 150, column: 19, scope: !38)
!45 = !DILocation(line: 124, column: 23, scope: !38, inlinedAt: !46)
!46 = !DILocation(line: 66, column: 31, scope: !38, inlinedAt: !44)
!47 = !DILocation(line: 67, column: 18, scope: !29, inlinedAt: !30)
!48 = !DILocation(line: 68, column: 25, scope: !29, inlinedAt: !30)
!49 = !DILocation(line: 70, column: 35, scope: !29, inlinedAt: !30)
!50 = !DILocation(line: 70, column: 29, scope: !29, inlinedAt: !30)
!51 = !DILocation(line: 71, column: 20, scope: !29, inlinedAt: !30)
!52 = !DILocation(line: 74, column: 27, scope: !29, inlinedAt: !30)
!53 = !DILocation(line: 74, scope: !9, inlinedAt: !34)
!54 = !DILocation(line: 233, column: 15, scope: !36, inlinedAt: !55)
!55 = !DILocation(line: 243, column: 36, scope: !36, inlinedAt: !56)
!56 = !DILocation(line: 76, column: 25, scope: !36, inlinedAt: !41)
!57 = !DILocation(line: 243, column: 36, scope: !38, inlinedAt: !58)
!58 = !DILocation(line: 76, column: 25, scope: !38, inlinedAt: !44)
!59 = !DILocation(line: 77, column: 20, scope: !29, inlinedAt: !30)
!60 = !DILocation(line: 77, column: 28, scope: !29, inlinedAt: !30)
!61 = !DILocation(line: 81, column: 46, scope: !29, inlinedAt: !30)
!62 = !DILocation(line: 168, column: 40, scope: !9)
!63 = !DILocation(line: 168, column: 27, scope: !9)
!64 = !DILocation(line: 168, column: 21, scope: !9)
!65 = !DILocation(line: 167, column: 26, scope: !9)
!66 = !DILocation(line: 167, column: 17, scope: !9)
!67 = !DILocation(line: 167, column: 34, scope: !9)
!68 = !DILocation(line: 166, column: 16, scope: !9)
!69 = !DILocation(line: 171, column: 19, scope: !9)
!70 = !DILocation(line: 170, column: 18, scope: !9)
!71 = !DILocation(line: 178, column: 33, scope: !9)
!72 = !DILocation(line: 178, column: 26, scope: !9)
!73 = !DILocation(line: 178, column: 4, scope: !9)
